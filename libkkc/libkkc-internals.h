/* libkkc-internals.h generated by valac 0.21.1.40-3bbfb, the Vala compiler, do not modify */


#ifndef __LIBKKC_INTERNALS_H__
#define __LIBKKC_INTERNALS_H__

#include <glib.h>
#include <glib-object.h>
#include <gio/gio.h>
#include <json-glib/json-glib.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>
#include <gee.h>

G_BEGIN_DECLS


#define KKC_TYPE_METADATA_FILE (kkc_metadata_file_get_type ())
#define KKC_METADATA_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_METADATA_FILE, KkcMetadataFile))
#define KKC_METADATA_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_METADATA_FILE, KkcMetadataFileClass))
#define KKC_IS_METADATA_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_METADATA_FILE))
#define KKC_IS_METADATA_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_METADATA_FILE))
#define KKC_METADATA_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_METADATA_FILE, KkcMetadataFileClass))

typedef struct _KkcMetadataFile KkcMetadataFile;
typedef struct _KkcMetadataFileClass KkcMetadataFileClass;
typedef struct _KkcMetadataFilePrivate KkcMetadataFilePrivate;

#define KKC_TYPE_TRELLIS_NODE (kkc_trellis_node_get_type ())
#define KKC_TRELLIS_NODE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_TRELLIS_NODE, KkcTrellisNode))
#define KKC_TRELLIS_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_TRELLIS_NODE, KkcTrellisNodeClass))
#define KKC_IS_TRELLIS_NODE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_TRELLIS_NODE))
#define KKC_IS_TRELLIS_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_TRELLIS_NODE))
#define KKC_TRELLIS_NODE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_TRELLIS_NODE, KkcTrellisNodeClass))

typedef struct _KkcTrellisNode KkcTrellisNode;
typedef struct _KkcTrellisNodeClass KkcTrellisNodeClass;
typedef struct _KkcTrellisNodePrivate KkcTrellisNodePrivate;

#define KKC_TYPE_LANGUAGE_MODEL_ENTRY (kkc_language_model_entry_get_type ())
typedef struct _KkcLanguageModelEntry KkcLanguageModelEntry;

#define KKC_TYPE_UNIGRAM_TRELLIS_NODE (kkc_unigram_trellis_node_get_type ())
#define KKC_UNIGRAM_TRELLIS_NODE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_UNIGRAM_TRELLIS_NODE, KkcUnigramTrellisNode))
#define KKC_UNIGRAM_TRELLIS_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_UNIGRAM_TRELLIS_NODE, KkcUnigramTrellisNodeClass))
#define KKC_IS_UNIGRAM_TRELLIS_NODE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_UNIGRAM_TRELLIS_NODE))
#define KKC_IS_UNIGRAM_TRELLIS_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_UNIGRAM_TRELLIS_NODE))
#define KKC_UNIGRAM_TRELLIS_NODE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_UNIGRAM_TRELLIS_NODE, KkcUnigramTrellisNodeClass))

typedef struct _KkcUnigramTrellisNode KkcUnigramTrellisNode;
typedef struct _KkcUnigramTrellisNodeClass KkcUnigramTrellisNodeClass;
typedef struct _KkcUnigramTrellisNodePrivate KkcUnigramTrellisNodePrivate;

#define KKC_TYPE_BIGRAM_TRELLIS_NODE (kkc_bigram_trellis_node_get_type ())
#define KKC_BIGRAM_TRELLIS_NODE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_BIGRAM_TRELLIS_NODE, KkcBigramTrellisNode))
#define KKC_BIGRAM_TRELLIS_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_BIGRAM_TRELLIS_NODE, KkcBigramTrellisNodeClass))
#define KKC_IS_BIGRAM_TRELLIS_NODE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_BIGRAM_TRELLIS_NODE))
#define KKC_IS_BIGRAM_TRELLIS_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_BIGRAM_TRELLIS_NODE))
#define KKC_BIGRAM_TRELLIS_NODE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_BIGRAM_TRELLIS_NODE, KkcBigramTrellisNodeClass))

typedef struct _KkcBigramTrellisNode KkcBigramTrellisNode;
typedef struct _KkcBigramTrellisNodeClass KkcBigramTrellisNodeClass;
typedef struct _KkcBigramTrellisNodePrivate KkcBigramTrellisNodePrivate;

#define KKC_TYPE_LANGUAGE_MODEL_METADATA (kkc_language_model_metadata_get_type ())
#define KKC_LANGUAGE_MODEL_METADATA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_LANGUAGE_MODEL_METADATA, KkcLanguageModelMetadata))
#define KKC_LANGUAGE_MODEL_METADATA_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_LANGUAGE_MODEL_METADATA, KkcLanguageModelMetadataClass))
#define KKC_IS_LANGUAGE_MODEL_METADATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_LANGUAGE_MODEL_METADATA))
#define KKC_IS_LANGUAGE_MODEL_METADATA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_LANGUAGE_MODEL_METADATA))
#define KKC_LANGUAGE_MODEL_METADATA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_LANGUAGE_MODEL_METADATA, KkcLanguageModelMetadataClass))

typedef struct _KkcLanguageModelMetadata KkcLanguageModelMetadata;
typedef struct _KkcLanguageModelMetadataClass KkcLanguageModelMetadataClass;
typedef struct _KkcLanguageModelMetadataPrivate KkcLanguageModelMetadataPrivate;

#define KKC_TYPE_LANGUAGE_MODEL (kkc_language_model_get_type ())
#define KKC_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_LANGUAGE_MODEL, KkcLanguageModel))
#define KKC_LANGUAGE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_LANGUAGE_MODEL, KkcLanguageModelClass))
#define KKC_IS_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_LANGUAGE_MODEL))
#define KKC_IS_LANGUAGE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_LANGUAGE_MODEL))
#define KKC_LANGUAGE_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_LANGUAGE_MODEL, KkcLanguageModelClass))

typedef struct _KkcLanguageModel KkcLanguageModel;
typedef struct _KkcLanguageModelClass KkcLanguageModelClass;
typedef struct _KkcLanguageModelPrivate KkcLanguageModelPrivate;

#define KKC_TYPE_UNIGRAM_LANGUAGE_MODEL (kkc_unigram_language_model_get_type ())
#define KKC_UNIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_UNIGRAM_LANGUAGE_MODEL, KkcUnigramLanguageModel))
#define KKC_IS_UNIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_UNIGRAM_LANGUAGE_MODEL))
#define KKC_UNIGRAM_LANGUAGE_MODEL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), KKC_TYPE_UNIGRAM_LANGUAGE_MODEL, KkcUnigramLanguageModelIface))

typedef struct _KkcUnigramLanguageModel KkcUnigramLanguageModel;
typedef struct _KkcUnigramLanguageModelIface KkcUnigramLanguageModelIface;

#define KKC_TYPE_BIGRAM_LANGUAGE_MODEL (kkc_bigram_language_model_get_type ())
#define KKC_BIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_BIGRAM_LANGUAGE_MODEL, KkcBigramLanguageModel))
#define KKC_IS_BIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_BIGRAM_LANGUAGE_MODEL))
#define KKC_BIGRAM_LANGUAGE_MODEL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), KKC_TYPE_BIGRAM_LANGUAGE_MODEL, KkcBigramLanguageModelIface))

typedef struct _KkcBigramLanguageModel KkcBigramLanguageModel;
typedef struct _KkcBigramLanguageModelIface KkcBigramLanguageModelIface;

#define KKC_TYPE_TRIGRAM_LANGUAGE_MODEL (kkc_trigram_language_model_get_type ())
#define KKC_TRIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_TRIGRAM_LANGUAGE_MODEL, KkcTrigramLanguageModel))
#define KKC_IS_TRIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_TRIGRAM_LANGUAGE_MODEL))
#define KKC_TRIGRAM_LANGUAGE_MODEL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), KKC_TYPE_TRIGRAM_LANGUAGE_MODEL, KkcTrigramLanguageModelIface))

typedef struct _KkcTrigramLanguageModel KkcTrigramLanguageModel;
typedef struct _KkcTrigramLanguageModelIface KkcTrigramLanguageModelIface;

#define KKC_TYPE_TEXT_BIGRAM_LANGUAGE_MODEL (kkc_text_bigram_language_model_get_type ())
#define KKC_TEXT_BIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_TEXT_BIGRAM_LANGUAGE_MODEL, KkcTextBigramLanguageModel))
#define KKC_TEXT_BIGRAM_LANGUAGE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_TEXT_BIGRAM_LANGUAGE_MODEL, KkcTextBigramLanguageModelClass))
#define KKC_IS_TEXT_BIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_TEXT_BIGRAM_LANGUAGE_MODEL))
#define KKC_IS_TEXT_BIGRAM_LANGUAGE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_TEXT_BIGRAM_LANGUAGE_MODEL))
#define KKC_TEXT_BIGRAM_LANGUAGE_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_TEXT_BIGRAM_LANGUAGE_MODEL, KkcTextBigramLanguageModelClass))

typedef struct _KkcTextBigramLanguageModel KkcTextBigramLanguageModel;
typedef struct _KkcTextBigramLanguageModelClass KkcTextBigramLanguageModelClass;
typedef struct _KkcTextBigramLanguageModelPrivate KkcTextBigramLanguageModelPrivate;

#define KKC_TYPE_TEXT_TRIGRAM_LANGUAGE_MODEL (kkc_text_trigram_language_model_get_type ())
#define KKC_TEXT_TRIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_TEXT_TRIGRAM_LANGUAGE_MODEL, KkcTextTrigramLanguageModel))
#define KKC_TEXT_TRIGRAM_LANGUAGE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_TEXT_TRIGRAM_LANGUAGE_MODEL, KkcTextTrigramLanguageModelClass))
#define KKC_IS_TEXT_TRIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_TEXT_TRIGRAM_LANGUAGE_MODEL))
#define KKC_IS_TEXT_TRIGRAM_LANGUAGE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_TEXT_TRIGRAM_LANGUAGE_MODEL))
#define KKC_TEXT_TRIGRAM_LANGUAGE_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_TEXT_TRIGRAM_LANGUAGE_MODEL, KkcTextTrigramLanguageModelClass))

typedef struct _KkcTextTrigramLanguageModel KkcTextTrigramLanguageModel;
typedef struct _KkcTextTrigramLanguageModelClass KkcTextTrigramLanguageModelClass;
typedef struct _KkcTextTrigramLanguageModelPrivate KkcTextTrigramLanguageModelPrivate;

#define KKC_TYPE_SORTED_BIGRAM_LANGUAGE_MODEL (kkc_sorted_bigram_language_model_get_type ())
#define KKC_SORTED_BIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_SORTED_BIGRAM_LANGUAGE_MODEL, KkcSortedBigramLanguageModel))
#define KKC_SORTED_BIGRAM_LANGUAGE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_SORTED_BIGRAM_LANGUAGE_MODEL, KkcSortedBigramLanguageModelClass))
#define KKC_IS_SORTED_BIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_SORTED_BIGRAM_LANGUAGE_MODEL))
#define KKC_IS_SORTED_BIGRAM_LANGUAGE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_SORTED_BIGRAM_LANGUAGE_MODEL))
#define KKC_SORTED_BIGRAM_LANGUAGE_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_SORTED_BIGRAM_LANGUAGE_MODEL, KkcSortedBigramLanguageModelClass))

typedef struct _KkcSortedBigramLanguageModel KkcSortedBigramLanguageModel;
typedef struct _KkcSortedBigramLanguageModelClass KkcSortedBigramLanguageModelClass;
typedef struct _KkcSortedBigramLanguageModelPrivate KkcSortedBigramLanguageModelPrivate;

#define KKC_TYPE_SORTED_TRIGRAM_LANGUAGE_MODEL (kkc_sorted_trigram_language_model_get_type ())
#define KKC_SORTED_TRIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_SORTED_TRIGRAM_LANGUAGE_MODEL, KkcSortedTrigramLanguageModel))
#define KKC_SORTED_TRIGRAM_LANGUAGE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_SORTED_TRIGRAM_LANGUAGE_MODEL, KkcSortedTrigramLanguageModelClass))
#define KKC_IS_SORTED_TRIGRAM_LANGUAGE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_SORTED_TRIGRAM_LANGUAGE_MODEL))
#define KKC_IS_SORTED_TRIGRAM_LANGUAGE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_SORTED_TRIGRAM_LANGUAGE_MODEL))
#define KKC_SORTED_TRIGRAM_LANGUAGE_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_SORTED_TRIGRAM_LANGUAGE_MODEL, KkcSortedTrigramLanguageModelClass))

typedef struct _KkcSortedTrigramLanguageModel KkcSortedTrigramLanguageModel;
typedef struct _KkcSortedTrigramLanguageModelClass KkcSortedTrigramLanguageModelClass;
typedef struct _KkcSortedTrigramLanguageModelPrivate KkcSortedTrigramLanguageModelPrivate;

#define KKC_TYPE_DECODER (kkc_decoder_get_type ())
#define KKC_DECODER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_DECODER, KkcDecoder))
#define KKC_DECODER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_DECODER, KkcDecoderClass))
#define KKC_IS_DECODER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_DECODER))
#define KKC_IS_DECODER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_DECODER))
#define KKC_DECODER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_DECODER, KkcDecoderClass))

typedef struct _KkcDecoder KkcDecoder;
typedef struct _KkcDecoderClass KkcDecoderClass;
typedef struct _KkcDecoderPrivate KkcDecoderPrivate;

#define KKC_TYPE_SEGMENT (kkc_segment_get_type ())
#define KKC_SEGMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_SEGMENT, KkcSegment))
#define KKC_SEGMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_SEGMENT, KkcSegmentClass))
#define KKC_IS_SEGMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_SEGMENT))
#define KKC_IS_SEGMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_SEGMENT))
#define KKC_SEGMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_SEGMENT, KkcSegmentClass))

typedef struct _KkcSegment KkcSegment;
typedef struct _KkcSegmentClass KkcSegmentClass;

#define KKC_TYPE_NBEST_NODE (kkc_nbest_node_get_type ())
#define KKC_NBEST_NODE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_NBEST_NODE, KkcNbestNode))
#define KKC_NBEST_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_NBEST_NODE, KkcNbestNodeClass))
#define KKC_IS_NBEST_NODE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_NBEST_NODE))
#define KKC_IS_NBEST_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_NBEST_NODE))
#define KKC_NBEST_NODE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_NBEST_NODE, KkcNbestNodeClass))

typedef struct _KkcNbestNode KkcNbestNode;
typedef struct _KkcNbestNodeClass KkcNbestNodeClass;
typedef struct _KkcNbestNodePrivate KkcNbestNodePrivate;

#define KKC_TYPE_BIGRAM_DECODER (kkc_bigram_decoder_get_type ())
#define KKC_BIGRAM_DECODER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_BIGRAM_DECODER, KkcBigramDecoder))
#define KKC_BIGRAM_DECODER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_BIGRAM_DECODER, KkcBigramDecoderClass))
#define KKC_IS_BIGRAM_DECODER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_BIGRAM_DECODER))
#define KKC_IS_BIGRAM_DECODER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_BIGRAM_DECODER))
#define KKC_BIGRAM_DECODER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_BIGRAM_DECODER, KkcBigramDecoderClass))

typedef struct _KkcBigramDecoder KkcBigramDecoder;
typedef struct _KkcBigramDecoderClass KkcBigramDecoderClass;
typedef struct _KkcBigramDecoderPrivate KkcBigramDecoderPrivate;

#define KKC_TYPE_PATH_COST_FUNC (kkc_path_cost_func_get_type ())
#define KKC_PATH_COST_FUNC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_PATH_COST_FUNC, KkcPathCostFunc))
#define KKC_PATH_COST_FUNC_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_PATH_COST_FUNC, KkcPathCostFuncClass))
#define KKC_IS_PATH_COST_FUNC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_PATH_COST_FUNC))
#define KKC_IS_PATH_COST_FUNC_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_PATH_COST_FUNC))
#define KKC_PATH_COST_FUNC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_PATH_COST_FUNC, KkcPathCostFuncClass))

typedef struct _KkcPathCostFunc KkcPathCostFunc;
typedef struct _KkcPathCostFuncClass KkcPathCostFuncClass;
typedef struct _KkcPathCostFuncPrivate KkcPathCostFuncPrivate;

#define KKC_TYPE_UNIGRAM_TO_UNIGRAM_PATH_COST_FUNC (kkc_unigram_to_unigram_path_cost_func_get_type ())
#define KKC_UNIGRAM_TO_UNIGRAM_PATH_COST_FUNC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_UNIGRAM_TO_UNIGRAM_PATH_COST_FUNC, KkcUnigramToUnigramPathCostFunc))
#define KKC_UNIGRAM_TO_UNIGRAM_PATH_COST_FUNC_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_UNIGRAM_TO_UNIGRAM_PATH_COST_FUNC, KkcUnigramToUnigramPathCostFuncClass))
#define KKC_IS_UNIGRAM_TO_UNIGRAM_PATH_COST_FUNC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_UNIGRAM_TO_UNIGRAM_PATH_COST_FUNC))
#define KKC_IS_UNIGRAM_TO_UNIGRAM_PATH_COST_FUNC_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_UNIGRAM_TO_UNIGRAM_PATH_COST_FUNC))
#define KKC_UNIGRAM_TO_UNIGRAM_PATH_COST_FUNC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_UNIGRAM_TO_UNIGRAM_PATH_COST_FUNC, KkcUnigramToUnigramPathCostFuncClass))

typedef struct _KkcUnigramToUnigramPathCostFunc KkcUnigramToUnigramPathCostFunc;
typedef struct _KkcUnigramToUnigramPathCostFuncClass KkcUnigramToUnigramPathCostFuncClass;
typedef struct _KkcUnigramToUnigramPathCostFuncPrivate KkcUnigramToUnigramPathCostFuncPrivate;

#define KKC_TYPE_UNIGRAM_TO_BIGRAM_PATH_COST_FUNC (kkc_unigram_to_bigram_path_cost_func_get_type ())
#define KKC_UNIGRAM_TO_BIGRAM_PATH_COST_FUNC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_UNIGRAM_TO_BIGRAM_PATH_COST_FUNC, KkcUnigramToBigramPathCostFunc))
#define KKC_UNIGRAM_TO_BIGRAM_PATH_COST_FUNC_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_UNIGRAM_TO_BIGRAM_PATH_COST_FUNC, KkcUnigramToBigramPathCostFuncClass))
#define KKC_IS_UNIGRAM_TO_BIGRAM_PATH_COST_FUNC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_UNIGRAM_TO_BIGRAM_PATH_COST_FUNC))
#define KKC_IS_UNIGRAM_TO_BIGRAM_PATH_COST_FUNC_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_UNIGRAM_TO_BIGRAM_PATH_COST_FUNC))
#define KKC_UNIGRAM_TO_BIGRAM_PATH_COST_FUNC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_UNIGRAM_TO_BIGRAM_PATH_COST_FUNC, KkcUnigramToBigramPathCostFuncClass))

typedef struct _KkcUnigramToBigramPathCostFunc KkcUnigramToBigramPathCostFunc;
typedef struct _KkcUnigramToBigramPathCostFuncClass KkcUnigramToBigramPathCostFuncClass;
typedef struct _KkcUnigramToBigramPathCostFuncPrivate KkcUnigramToBigramPathCostFuncPrivate;

#define KKC_TYPE_BIGRAM_TO_UNIGRAM_PATH_COST_FUNC (kkc_bigram_to_unigram_path_cost_func_get_type ())
#define KKC_BIGRAM_TO_UNIGRAM_PATH_COST_FUNC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_BIGRAM_TO_UNIGRAM_PATH_COST_FUNC, KkcBigramToUnigramPathCostFunc))
#define KKC_BIGRAM_TO_UNIGRAM_PATH_COST_FUNC_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_BIGRAM_TO_UNIGRAM_PATH_COST_FUNC, KkcBigramToUnigramPathCostFuncClass))
#define KKC_IS_BIGRAM_TO_UNIGRAM_PATH_COST_FUNC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_BIGRAM_TO_UNIGRAM_PATH_COST_FUNC))
#define KKC_IS_BIGRAM_TO_UNIGRAM_PATH_COST_FUNC_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_BIGRAM_TO_UNIGRAM_PATH_COST_FUNC))
#define KKC_BIGRAM_TO_UNIGRAM_PATH_COST_FUNC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_BIGRAM_TO_UNIGRAM_PATH_COST_FUNC, KkcBigramToUnigramPathCostFuncClass))

typedef struct _KkcBigramToUnigramPathCostFunc KkcBigramToUnigramPathCostFunc;
typedef struct _KkcBigramToUnigramPathCostFuncClass KkcBigramToUnigramPathCostFuncClass;
typedef struct _KkcBigramToUnigramPathCostFuncPrivate KkcBigramToUnigramPathCostFuncPrivate;

#define KKC_TYPE_BIGRAM_TO_BIGRAM_PATH_COST_FUNC (kkc_bigram_to_bigram_path_cost_func_get_type ())
#define KKC_BIGRAM_TO_BIGRAM_PATH_COST_FUNC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_BIGRAM_TO_BIGRAM_PATH_COST_FUNC, KkcBigramToBigramPathCostFunc))
#define KKC_BIGRAM_TO_BIGRAM_PATH_COST_FUNC_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_BIGRAM_TO_BIGRAM_PATH_COST_FUNC, KkcBigramToBigramPathCostFuncClass))
#define KKC_IS_BIGRAM_TO_BIGRAM_PATH_COST_FUNC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_BIGRAM_TO_BIGRAM_PATH_COST_FUNC))
#define KKC_IS_BIGRAM_TO_BIGRAM_PATH_COST_FUNC_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_BIGRAM_TO_BIGRAM_PATH_COST_FUNC))
#define KKC_BIGRAM_TO_BIGRAM_PATH_COST_FUNC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_BIGRAM_TO_BIGRAM_PATH_COST_FUNC, KkcBigramToBigramPathCostFuncClass))

typedef struct _KkcBigramToBigramPathCostFunc KkcBigramToBigramPathCostFunc;
typedef struct _KkcBigramToBigramPathCostFuncClass KkcBigramToBigramPathCostFuncClass;
typedef struct _KkcBigramToBigramPathCostFuncPrivate KkcBigramToBigramPathCostFuncPrivate;

#define KKC_TYPE_TRIGRAM_DECODER (kkc_trigram_decoder_get_type ())
#define KKC_TRIGRAM_DECODER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_TRIGRAM_DECODER, KkcTrigramDecoder))
#define KKC_TRIGRAM_DECODER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_TRIGRAM_DECODER, KkcTrigramDecoderClass))
#define KKC_IS_TRIGRAM_DECODER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_TRIGRAM_DECODER))
#define KKC_IS_TRIGRAM_DECODER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_TRIGRAM_DECODER))
#define KKC_TRIGRAM_DECODER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_TRIGRAM_DECODER, KkcTrigramDecoderClass))

typedef struct _KkcTrigramDecoder KkcTrigramDecoder;
typedef struct _KkcTrigramDecoderClass KkcTrigramDecoderClass;
typedef struct _KkcTrigramDecoderPrivate KkcTrigramDecoderPrivate;

#define KKC_TYPE_SEGMENT_LIST (kkc_segment_list_get_type ())
#define KKC_SEGMENT_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_SEGMENT_LIST, KkcSegmentList))
#define KKC_SEGMENT_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_SEGMENT_LIST, KkcSegmentListClass))
#define KKC_IS_SEGMENT_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_SEGMENT_LIST))
#define KKC_IS_SEGMENT_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_SEGMENT_LIST))
#define KKC_SEGMENT_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_SEGMENT_LIST, KkcSegmentListClass))

typedef struct _KkcSegmentList KkcSegmentList;
typedef struct _KkcSegmentListClass KkcSegmentListClass;
typedef struct _KkcSegmentListPrivate KkcSegmentListPrivate;
typedef struct _KkcSegmentPrivate KkcSegmentPrivate;

#define KKC_TYPE_BLOOM_FILTER (kkc_bloom_filter_get_type ())
#define KKC_BLOOM_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_BLOOM_FILTER, KkcBloomFilter))
#define KKC_BLOOM_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_BLOOM_FILTER, KkcBloomFilterClass))
#define KKC_IS_BLOOM_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_BLOOM_FILTER))
#define KKC_IS_BLOOM_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_BLOOM_FILTER))
#define KKC_BLOOM_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_BLOOM_FILTER, KkcBloomFilterClass))

typedef struct _KkcBloomFilter KkcBloomFilter;
typedef struct _KkcBloomFilterClass KkcBloomFilterClass;
typedef struct _KkcBloomFilterPrivate KkcBloomFilterPrivate;

#define KKC_TYPE_CANDIDATE_LIST (kkc_candidate_list_get_type ())
#define KKC_CANDIDATE_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_CANDIDATE_LIST, KkcCandidateList))
#define KKC_CANDIDATE_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_CANDIDATE_LIST, KkcCandidateListClass))
#define KKC_IS_CANDIDATE_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_CANDIDATE_LIST))
#define KKC_IS_CANDIDATE_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_CANDIDATE_LIST))
#define KKC_CANDIDATE_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_CANDIDATE_LIST, KkcCandidateListClass))

typedef struct _KkcCandidateList KkcCandidateList;
typedef struct _KkcCandidateListClass KkcCandidateListClass;
typedef struct _KkcCandidateListPrivate KkcCandidateListPrivate;

#define KKC_TYPE_CANDIDATE (kkc_candidate_get_type ())
#define KKC_CANDIDATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_CANDIDATE, KkcCandidate))
#define KKC_CANDIDATE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_CANDIDATE, KkcCandidateClass))
#define KKC_IS_CANDIDATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_CANDIDATE))
#define KKC_IS_CANDIDATE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_CANDIDATE))
#define KKC_CANDIDATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_CANDIDATE, KkcCandidateClass))

typedef struct _KkcCandidate KkcCandidate;
typedef struct _KkcCandidateClass KkcCandidateClass;
typedef struct _KkcCandidatePrivate KkcCandidatePrivate;

#define KKC_TYPE_KEY_EVENT_FILTER (kkc_key_event_filter_get_type ())
#define KKC_KEY_EVENT_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_KEY_EVENT_FILTER, KkcKeyEventFilter))
#define KKC_KEY_EVENT_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_KEY_EVENT_FILTER, KkcKeyEventFilterClass))
#define KKC_IS_KEY_EVENT_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_KEY_EVENT_FILTER))
#define KKC_IS_KEY_EVENT_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_KEY_EVENT_FILTER))
#define KKC_KEY_EVENT_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_KEY_EVENT_FILTER, KkcKeyEventFilterClass))

typedef struct _KkcKeyEventFilter KkcKeyEventFilter;
typedef struct _KkcKeyEventFilterClass KkcKeyEventFilterClass;
typedef struct _KkcKeyEventFilterPrivate KkcKeyEventFilterPrivate;

#define KKC_TYPE_KEY_EVENT (kkc_key_event_get_type ())
#define KKC_KEY_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_KEY_EVENT, KkcKeyEvent))
#define KKC_KEY_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_KEY_EVENT, KkcKeyEventClass))
#define KKC_IS_KEY_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_KEY_EVENT))
#define KKC_IS_KEY_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_KEY_EVENT))
#define KKC_KEY_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_KEY_EVENT, KkcKeyEventClass))

typedef struct _KkcKeyEvent KkcKeyEvent;
typedef struct _KkcKeyEventClass KkcKeyEventClass;

#define KKC_TYPE_SIMPLE_KEY_EVENT_FILTER (kkc_simple_key_event_filter_get_type ())
#define KKC_SIMPLE_KEY_EVENT_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_SIMPLE_KEY_EVENT_FILTER, KkcSimpleKeyEventFilter))
#define KKC_SIMPLE_KEY_EVENT_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_SIMPLE_KEY_EVENT_FILTER, KkcSimpleKeyEventFilterClass))
#define KKC_IS_SIMPLE_KEY_EVENT_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_SIMPLE_KEY_EVENT_FILTER))
#define KKC_IS_SIMPLE_KEY_EVENT_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_SIMPLE_KEY_EVENT_FILTER))
#define KKC_SIMPLE_KEY_EVENT_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_SIMPLE_KEY_EVENT_FILTER, KkcSimpleKeyEventFilterClass))

typedef struct _KkcSimpleKeyEventFilter KkcSimpleKeyEventFilter;
typedef struct _KkcSimpleKeyEventFilterClass KkcSimpleKeyEventFilterClass;
typedef struct _KkcSimpleKeyEventFilterPrivate KkcSimpleKeyEventFilterPrivate;

#define KKC_TYPE_KANA_KEY_EVENT_FILTER (kkc_kana_key_event_filter_get_type ())
#define KKC_KANA_KEY_EVENT_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_KANA_KEY_EVENT_FILTER, KkcKanaKeyEventFilter))
#define KKC_KANA_KEY_EVENT_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_KANA_KEY_EVENT_FILTER, KkcKanaKeyEventFilterClass))
#define KKC_IS_KANA_KEY_EVENT_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_KANA_KEY_EVENT_FILTER))
#define KKC_IS_KANA_KEY_EVENT_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_KANA_KEY_EVENT_FILTER))
#define KKC_KANA_KEY_EVENT_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_KANA_KEY_EVENT_FILTER, KkcKanaKeyEventFilterClass))

typedef struct _KkcKanaKeyEventFilter KkcKanaKeyEventFilter;
typedef struct _KkcKanaKeyEventFilterClass KkcKanaKeyEventFilterClass;
typedef struct _KkcKanaKeyEventFilterPrivate KkcKanaKeyEventFilterPrivate;

#define KKC_TYPE_MODIFIER_TYPE (kkc_modifier_type_get_type ())
typedef struct _KkcKeyEventPrivate KkcKeyEventPrivate;

#define KKC_TYPE_KEYMAP_COMMAND_ENTRY (kkc_keymap_command_entry_get_type ())
typedef struct _KkcKeymapCommandEntry KkcKeymapCommandEntry;

#define KKC_TYPE_KEYMAP_ENTRY (kkc_keymap_entry_get_type ())
typedef struct _KkcKeymapEntry KkcKeymapEntry;

#define KKC_TYPE_KEYMAP (kkc_keymap_get_type ())
#define KKC_KEYMAP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_KEYMAP, KkcKeymap))
#define KKC_KEYMAP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_KEYMAP, KkcKeymapClass))
#define KKC_IS_KEYMAP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_KEYMAP))
#define KKC_IS_KEYMAP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_KEYMAP))
#define KKC_KEYMAP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_KEYMAP, KkcKeymapClass))

typedef struct _KkcKeymap KkcKeymap;
typedef struct _KkcKeymapClass KkcKeymapClass;
typedef struct _KkcKeymapPrivate KkcKeymapPrivate;

#define KKC_TYPE_KEYNAME_ENTRY (kkc_keyname_entry_get_type ())
typedef struct _KkcKeynameEntry KkcKeynameEntry;

#define KKC_TYPE_MAP_FILE (kkc_map_file_get_type ())
#define KKC_MAP_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_MAP_FILE, KkcMapFile))
#define KKC_MAP_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_MAP_FILE, KkcMapFileClass))
#define KKC_IS_MAP_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_MAP_FILE))
#define KKC_IS_MAP_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_MAP_FILE))
#define KKC_MAP_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_MAP_FILE, KkcMapFileClass))

typedef struct _KkcMapFile KkcMapFile;
typedef struct _KkcMapFileClass KkcMapFileClass;
typedef struct _KkcMapFilePrivate KkcMapFilePrivate;

#define KKC_TYPE_RULE_METADATA (kkc_rule_metadata_get_type ())
#define KKC_RULE_METADATA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_RULE_METADATA, KkcRuleMetadata))
#define KKC_RULE_METADATA_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_RULE_METADATA, KkcRuleMetadataClass))
#define KKC_IS_RULE_METADATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_RULE_METADATA))
#define KKC_IS_RULE_METADATA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_RULE_METADATA))
#define KKC_RULE_METADATA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_RULE_METADATA, KkcRuleMetadataClass))

typedef struct _KkcRuleMetadata KkcRuleMetadata;
typedef struct _KkcRuleMetadataClass KkcRuleMetadataClass;

#define KKC_TYPE_NICOLA_KEY_EVENT_FILTER (kkc_nicola_key_event_filter_get_type ())
#define KKC_NICOLA_KEY_EVENT_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_NICOLA_KEY_EVENT_FILTER, KkcNicolaKeyEventFilter))
#define KKC_NICOLA_KEY_EVENT_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_NICOLA_KEY_EVENT_FILTER, KkcNicolaKeyEventFilterClass))
#define KKC_IS_NICOLA_KEY_EVENT_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_NICOLA_KEY_EVENT_FILTER))
#define KKC_IS_NICOLA_KEY_EVENT_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_NICOLA_KEY_EVENT_FILTER))
#define KKC_NICOLA_KEY_EVENT_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_NICOLA_KEY_EVENT_FILTER, KkcNicolaKeyEventFilterClass))

typedef struct _KkcNicolaKeyEventFilter KkcNicolaKeyEventFilter;
typedef struct _KkcNicolaKeyEventFilterClass KkcNicolaKeyEventFilterClass;
typedef struct _KkcNicolaKeyEventFilterPrivate KkcNicolaKeyEventFilterPrivate;

#define KKC_TYPE_NUMERIC_CONVERSION_TYPE (kkc_numeric_conversion_type_get_type ())

#define KKC_TYPE_ROM_KANA_UTILS (kkc_rom_kana_utils_get_type ())
#define KKC_ROM_KANA_UTILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_ROM_KANA_UTILS, KkcRomKanaUtils))
#define KKC_ROM_KANA_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_ROM_KANA_UTILS, KkcRomKanaUtilsClass))
#define KKC_IS_ROM_KANA_UTILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_ROM_KANA_UTILS))
#define KKC_IS_ROM_KANA_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_ROM_KANA_UTILS))
#define KKC_ROM_KANA_UTILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_ROM_KANA_UTILS, KkcRomKanaUtilsClass))

typedef struct _KkcRomKanaUtils KkcRomKanaUtils;
typedef struct _KkcRomKanaUtilsClass KkcRomKanaUtilsClass;
typedef struct _KkcRomKanaUtilsPrivate KkcRomKanaUtilsPrivate;

#define KKC_TYPE_KANA_MODE (kkc_kana_mode_get_type ())

#define KKC_TYPE_ROM_KANA_ENTRY (kkc_rom_kana_entry_get_type ())
typedef struct _KkcRomKanaEntry KkcRomKanaEntry;

#define KKC_TYPE_ROM_KANA_NODE (kkc_rom_kana_node_get_type ())
#define KKC_ROM_KANA_NODE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_ROM_KANA_NODE, KkcRomKanaNode))
#define KKC_ROM_KANA_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_ROM_KANA_NODE, KkcRomKanaNodeClass))
#define KKC_IS_ROM_KANA_NODE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_ROM_KANA_NODE))
#define KKC_IS_ROM_KANA_NODE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_ROM_KANA_NODE))
#define KKC_ROM_KANA_NODE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_ROM_KANA_NODE, KkcRomKanaNodeClass))

typedef struct _KkcRomKanaNode KkcRomKanaNode;
typedef struct _KkcRomKanaNodeClass KkcRomKanaNodeClass;
typedef struct _KkcRomKanaNodePrivate KkcRomKanaNodePrivate;

#define KKC_TYPE_PUNCTUATION_STYLE (kkc_punctuation_style_get_type ())

#define KKC_TYPE_ROM_KANA_CHARACTER (kkc_rom_kana_character_get_type ())
typedef struct _KkcRomKanaCharacter KkcRomKanaCharacter;

#define KKC_TYPE_ROM_KANA_CHARACTER_LIST (kkc_rom_kana_character_list_get_type ())
#define KKC_ROM_KANA_CHARACTER_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_ROM_KANA_CHARACTER_LIST, KkcRomKanaCharacterList))
#define KKC_ROM_KANA_CHARACTER_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_ROM_KANA_CHARACTER_LIST, KkcRomKanaCharacterListClass))
#define KKC_IS_ROM_KANA_CHARACTER_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_ROM_KANA_CHARACTER_LIST))
#define KKC_IS_ROM_KANA_CHARACTER_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_ROM_KANA_CHARACTER_LIST))
#define KKC_ROM_KANA_CHARACTER_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_ROM_KANA_CHARACTER_LIST, KkcRomKanaCharacterListClass))

typedef struct _KkcRomKanaCharacterList KkcRomKanaCharacterList;
typedef struct _KkcRomKanaCharacterListClass KkcRomKanaCharacterListClass;
typedef struct _KkcRomKanaCharacterListPrivate KkcRomKanaCharacterListPrivate;

#define KKC_TYPE_ROM_KANA_CONVERTER (kkc_rom_kana_converter_get_type ())
#define KKC_ROM_KANA_CONVERTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_ROM_KANA_CONVERTER, KkcRomKanaConverter))
#define KKC_ROM_KANA_CONVERTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_ROM_KANA_CONVERTER, KkcRomKanaConverterClass))
#define KKC_IS_ROM_KANA_CONVERTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_ROM_KANA_CONVERTER))
#define KKC_IS_ROM_KANA_CONVERTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_ROM_KANA_CONVERTER))
#define KKC_ROM_KANA_CONVERTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_ROM_KANA_CONVERTER, KkcRomKanaConverterClass))

typedef struct _KkcRomKanaConverter KkcRomKanaConverter;
typedef struct _KkcRomKanaConverterClass KkcRomKanaConverterClass;
typedef struct _KkcRomKanaConverterPrivate KkcRomKanaConverterPrivate;

#define KKC_TYPE_ROM_KANA_MAP_FILE (kkc_rom_kana_map_file_get_type ())
#define KKC_ROM_KANA_MAP_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_ROM_KANA_MAP_FILE, KkcRomKanaMapFile))
#define KKC_ROM_KANA_MAP_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_ROM_KANA_MAP_FILE, KkcRomKanaMapFileClass))
#define KKC_IS_ROM_KANA_MAP_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_ROM_KANA_MAP_FILE))
#define KKC_IS_ROM_KANA_MAP_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_ROM_KANA_MAP_FILE))
#define KKC_ROM_KANA_MAP_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_ROM_KANA_MAP_FILE, KkcRomKanaMapFileClass))

typedef struct _KkcRomKanaMapFile KkcRomKanaMapFile;
typedef struct _KkcRomKanaMapFileClass KkcRomKanaMapFileClass;

#define KKC_TYPE_KEYMAP_MAP_FILE (kkc_keymap_map_file_get_type ())
#define KKC_KEYMAP_MAP_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_KEYMAP_MAP_FILE, KkcKeymapMapFile))
#define KKC_KEYMAP_MAP_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_KEYMAP_MAP_FILE, KkcKeymapMapFileClass))
#define KKC_IS_KEYMAP_MAP_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_KEYMAP_MAP_FILE))
#define KKC_IS_KEYMAP_MAP_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_KEYMAP_MAP_FILE))
#define KKC_KEYMAP_MAP_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_KEYMAP_MAP_FILE, KkcKeymapMapFileClass))

typedef struct _KkcKeymapMapFile KkcKeymapMapFile;
typedef struct _KkcKeymapMapFileClass KkcKeymapMapFileClass;
typedef struct _KkcKeymapMapFilePrivate KkcKeymapMapFilePrivate;
typedef struct _KkcRomKanaMapFilePrivate KkcRomKanaMapFilePrivate;
typedef struct _KkcRuleMetadataPrivate KkcRuleMetadataPrivate;

#define KKC_TYPE_RULE (kkc_rule_get_type ())
#define KKC_RULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_RULE, KkcRule))
#define KKC_RULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_RULE, KkcRuleClass))
#define KKC_IS_RULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_RULE))
#define KKC_IS_RULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_RULE))
#define KKC_RULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_RULE, KkcRuleClass))

typedef struct _KkcRule KkcRule;
typedef struct _KkcRuleClass KkcRuleClass;
typedef struct _KkcRulePrivate KkcRulePrivate;

#define KKC_TYPE_INPUT_MODE (kkc_input_mode_get_type ())

#define KKC_TYPE_USER_RULE (kkc_user_rule_get_type ())
#define KKC_USER_RULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_USER_RULE, KkcUserRule))
#define KKC_USER_RULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_USER_RULE, KkcUserRuleClass))
#define KKC_IS_USER_RULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_USER_RULE))
#define KKC_IS_USER_RULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_USER_RULE))
#define KKC_USER_RULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_USER_RULE, KkcUserRuleClass))

typedef struct _KkcUserRule KkcUserRule;
typedef struct _KkcUserRuleClass KkcUserRuleClass;
typedef struct _KkcUserRulePrivate KkcUserRulePrivate;

#define KKC_TYPE_CONTEXT (kkc_context_get_type ())
#define KKC_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_CONTEXT, KkcContext))
#define KKC_CONTEXT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_CONTEXT, KkcContextClass))
#define KKC_IS_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_CONTEXT))
#define KKC_IS_CONTEXT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_CONTEXT))
#define KKC_CONTEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_CONTEXT, KkcContextClass))

typedef struct _KkcContext KkcContext;
typedef struct _KkcContextClass KkcContextClass;
typedef struct _KkcContextPrivate KkcContextPrivate;

#define KKC_TYPE_DICTIONARY_LIST (kkc_dictionary_list_get_type ())
#define KKC_DICTIONARY_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_DICTIONARY_LIST, KkcDictionaryList))
#define KKC_DICTIONARY_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_DICTIONARY_LIST, KkcDictionaryListClass))
#define KKC_IS_DICTIONARY_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_DICTIONARY_LIST))
#define KKC_IS_DICTIONARY_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_DICTIONARY_LIST))
#define KKC_DICTIONARY_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_DICTIONARY_LIST, KkcDictionaryListClass))

typedef struct _KkcDictionaryList KkcDictionaryList;
typedef struct _KkcDictionaryListClass KkcDictionaryListClass;

#define KKC_TYPE_STATE (kkc_state_get_type ())
#define KKC_STATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_STATE, KkcState))
#define KKC_STATE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_STATE, KkcStateClass))
#define KKC_IS_STATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_STATE))
#define KKC_IS_STATE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_STATE))
#define KKC_STATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_STATE, KkcStateClass))

typedef struct _KkcState KkcState;
typedef struct _KkcStateClass KkcStateClass;
typedef struct _KkcStatePrivate KkcStatePrivate;

#define KKC_TYPE_COMMAND_HANDLER (kkc_command_handler_get_type ())
#define KKC_COMMAND_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_COMMAND_HANDLER, KkcCommandHandler))
#define KKC_IS_COMMAND_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_COMMAND_HANDLER))
#define KKC_COMMAND_HANDLER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), KKC_TYPE_COMMAND_HANDLER, KkcCommandHandlerIface))

typedef struct _KkcCommandHandler KkcCommandHandler;
typedef struct _KkcCommandHandlerIface KkcCommandHandlerIface;

#define KKC_TYPE_CALLBACK_COMMAND_HANDLER (kkc_callback_command_handler_get_type ())
#define KKC_CALLBACK_COMMAND_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_CALLBACK_COMMAND_HANDLER, KkcCallbackCommandHandler))
#define KKC_CALLBACK_COMMAND_HANDLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_CALLBACK_COMMAND_HANDLER, KkcCallbackCommandHandlerClass))
#define KKC_IS_CALLBACK_COMMAND_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_CALLBACK_COMMAND_HANDLER))
#define KKC_IS_CALLBACK_COMMAND_HANDLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_CALLBACK_COMMAND_HANDLER))
#define KKC_CALLBACK_COMMAND_HANDLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_CALLBACK_COMMAND_HANDLER, KkcCallbackCommandHandlerClass))

typedef struct _KkcCallbackCommandHandler KkcCallbackCommandHandler;
typedef struct _KkcCallbackCommandHandlerClass KkcCallbackCommandHandlerClass;
typedef struct _KkcCallbackCommandHandlerPrivate KkcCallbackCommandHandlerPrivate;

#define KKC_TYPE_STATE_HANDLER (kkc_state_handler_get_type ())
#define KKC_STATE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_STATE_HANDLER, KkcStateHandler))
#define KKC_STATE_HANDLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_STATE_HANDLER, KkcStateHandlerClass))
#define KKC_IS_STATE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_STATE_HANDLER))
#define KKC_IS_STATE_HANDLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_STATE_HANDLER))
#define KKC_STATE_HANDLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_STATE_HANDLER, KkcStateHandlerClass))

typedef struct _KkcStateHandler KkcStateHandler;
typedef struct _KkcStateHandlerClass KkcStateHandlerClass;
typedef struct _KkcStateHandlerPrivate KkcStateHandlerPrivate;

#define KKC_TYPE_INITIAL_STATE_HANDLER (kkc_initial_state_handler_get_type ())
#define KKC_INITIAL_STATE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_INITIAL_STATE_HANDLER, KkcInitialStateHandler))
#define KKC_INITIAL_STATE_HANDLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_INITIAL_STATE_HANDLER, KkcInitialStateHandlerClass))
#define KKC_IS_INITIAL_STATE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_INITIAL_STATE_HANDLER))
#define KKC_IS_INITIAL_STATE_HANDLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_INITIAL_STATE_HANDLER))
#define KKC_INITIAL_STATE_HANDLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_INITIAL_STATE_HANDLER, KkcInitialStateHandlerClass))

typedef struct _KkcInitialStateHandler KkcInitialStateHandler;
typedef struct _KkcInitialStateHandlerClass KkcInitialStateHandlerClass;
typedef struct _KkcInitialStateHandlerPrivate KkcInitialStateHandlerPrivate;

#define KKC_TYPE_CONVERT_SENTENCE_STATE_HANDLER (kkc_convert_sentence_state_handler_get_type ())
#define KKC_CONVERT_SENTENCE_STATE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_CONVERT_SENTENCE_STATE_HANDLER, KkcConvertSentenceStateHandler))
#define KKC_CONVERT_SENTENCE_STATE_HANDLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_CONVERT_SENTENCE_STATE_HANDLER, KkcConvertSentenceStateHandlerClass))
#define KKC_IS_CONVERT_SENTENCE_STATE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_CONVERT_SENTENCE_STATE_HANDLER))
#define KKC_IS_CONVERT_SENTENCE_STATE_HANDLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_CONVERT_SENTENCE_STATE_HANDLER))
#define KKC_CONVERT_SENTENCE_STATE_HANDLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_CONVERT_SENTENCE_STATE_HANDLER, KkcConvertSentenceStateHandlerClass))

typedef struct _KkcConvertSentenceStateHandler KkcConvertSentenceStateHandler;
typedef struct _KkcConvertSentenceStateHandlerClass KkcConvertSentenceStateHandlerClass;
typedef struct _KkcConvertSentenceStateHandlerPrivate KkcConvertSentenceStateHandlerPrivate;

#define KKC_TYPE_CONVERT_SEGMENT_STATE_HANDLER (kkc_convert_segment_state_handler_get_type ())
#define KKC_CONVERT_SEGMENT_STATE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_CONVERT_SEGMENT_STATE_HANDLER, KkcConvertSegmentStateHandler))
#define KKC_CONVERT_SEGMENT_STATE_HANDLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_CONVERT_SEGMENT_STATE_HANDLER, KkcConvertSegmentStateHandlerClass))
#define KKC_IS_CONVERT_SEGMENT_STATE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_CONVERT_SEGMENT_STATE_HANDLER))
#define KKC_IS_CONVERT_SEGMENT_STATE_HANDLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_CONVERT_SEGMENT_STATE_HANDLER))
#define KKC_CONVERT_SEGMENT_STATE_HANDLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_CONVERT_SEGMENT_STATE_HANDLER, KkcConvertSegmentStateHandlerClass))

typedef struct _KkcConvertSegmentStateHandler KkcConvertSegmentStateHandler;
typedef struct _KkcConvertSegmentStateHandlerClass KkcConvertSegmentStateHandlerClass;
typedef struct _KkcConvertSegmentStateHandlerPrivate KkcConvertSegmentStateHandlerPrivate;

#define KKC_TYPE_DICTIONARY_UTILS (kkc_dictionary_utils_get_type ())
#define KKC_DICTIONARY_UTILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_DICTIONARY_UTILS, KkcDictionaryUtils))
#define KKC_DICTIONARY_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_DICTIONARY_UTILS, KkcDictionaryUtilsClass))
#define KKC_IS_DICTIONARY_UTILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_DICTIONARY_UTILS))
#define KKC_IS_DICTIONARY_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_DICTIONARY_UTILS))
#define KKC_DICTIONARY_UTILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_DICTIONARY_UTILS, KkcDictionaryUtilsClass))

typedef struct _KkcDictionaryUtils KkcDictionaryUtils;
typedef struct _KkcDictionaryUtilsClass KkcDictionaryUtilsClass;
typedef struct _KkcDictionaryUtilsPrivate KkcDictionaryUtilsPrivate;

#define KKC_TYPE_DICTIONARY (kkc_dictionary_get_type ())
#define KKC_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_DICTIONARY, KkcDictionary))
#define KKC_IS_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_DICTIONARY))
#define KKC_DICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), KKC_TYPE_DICTIONARY, KkcDictionaryIface))

typedef struct _KkcDictionary KkcDictionary;
typedef struct _KkcDictionaryIface KkcDictionaryIface;

#define KKC_TYPE_SEGMENT_DICTIONARY (kkc_segment_dictionary_get_type ())
#define KKC_SEGMENT_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_SEGMENT_DICTIONARY, KkcSegmentDictionary))
#define KKC_IS_SEGMENT_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_SEGMENT_DICTIONARY))
#define KKC_SEGMENT_DICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), KKC_TYPE_SEGMENT_DICTIONARY, KkcSegmentDictionaryIface))

typedef struct _KkcSegmentDictionary KkcSegmentDictionary;
typedef struct _KkcSegmentDictionaryIface KkcSegmentDictionaryIface;

#define KKC_TYPE_EMPTY_SEGMENT_DICTIONARY (kkc_empty_segment_dictionary_get_type ())
#define KKC_EMPTY_SEGMENT_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_EMPTY_SEGMENT_DICTIONARY, KkcEmptySegmentDictionary))
#define KKC_EMPTY_SEGMENT_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_EMPTY_SEGMENT_DICTIONARY, KkcEmptySegmentDictionaryClass))
#define KKC_IS_EMPTY_SEGMENT_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_EMPTY_SEGMENT_DICTIONARY))
#define KKC_IS_EMPTY_SEGMENT_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_EMPTY_SEGMENT_DICTIONARY))
#define KKC_EMPTY_SEGMENT_DICTIONARY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_EMPTY_SEGMENT_DICTIONARY, KkcEmptySegmentDictionaryClass))

typedef struct _KkcEmptySegmentDictionary KkcEmptySegmentDictionary;
typedef struct _KkcEmptySegmentDictionaryClass KkcEmptySegmentDictionaryClass;
typedef struct _KkcEmptySegmentDictionaryPrivate KkcEmptySegmentDictionaryPrivate;

#define KKC_TYPE_SYSTEM_SEGMENT_DICTIONARY (kkc_system_segment_dictionary_get_type ())
#define KKC_SYSTEM_SEGMENT_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_SYSTEM_SEGMENT_DICTIONARY, KkcSystemSegmentDictionary))
#define KKC_SYSTEM_SEGMENT_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_SYSTEM_SEGMENT_DICTIONARY, KkcSystemSegmentDictionaryClass))
#define KKC_IS_SYSTEM_SEGMENT_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_SYSTEM_SEGMENT_DICTIONARY))
#define KKC_IS_SYSTEM_SEGMENT_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_SYSTEM_SEGMENT_DICTIONARY))
#define KKC_SYSTEM_SEGMENT_DICTIONARY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_SYSTEM_SEGMENT_DICTIONARY, KkcSystemSegmentDictionaryClass))

typedef struct _KkcSystemSegmentDictionary KkcSystemSegmentDictionary;
typedef struct _KkcSystemSegmentDictionaryClass KkcSystemSegmentDictionaryClass;
typedef struct _KkcSystemSegmentDictionaryPrivate KkcSystemSegmentDictionaryPrivate;

#define KKC_TYPE_USER_SEGMENT_DICTIONARY (kkc_user_segment_dictionary_get_type ())
#define KKC_USER_SEGMENT_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_USER_SEGMENT_DICTIONARY, KkcUserSegmentDictionary))
#define KKC_USER_SEGMENT_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_USER_SEGMENT_DICTIONARY, KkcUserSegmentDictionaryClass))
#define KKC_IS_USER_SEGMENT_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_USER_SEGMENT_DICTIONARY))
#define KKC_IS_USER_SEGMENT_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_USER_SEGMENT_DICTIONARY))
#define KKC_USER_SEGMENT_DICTIONARY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_USER_SEGMENT_DICTIONARY, KkcUserSegmentDictionaryClass))

typedef struct _KkcUserSegmentDictionary KkcUserSegmentDictionary;
typedef struct _KkcUserSegmentDictionaryClass KkcUserSegmentDictionaryClass;
typedef struct _KkcUserSegmentDictionaryPrivate KkcUserSegmentDictionaryPrivate;

#define KKC_TYPE_SENTENCE_DICTIONARY (kkc_sentence_dictionary_get_type ())
#define KKC_SENTENCE_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_SENTENCE_DICTIONARY, KkcSentenceDictionary))
#define KKC_IS_SENTENCE_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_SENTENCE_DICTIONARY))
#define KKC_SENTENCE_DICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), KKC_TYPE_SENTENCE_DICTIONARY, KkcSentenceDictionaryIface))

typedef struct _KkcSentenceDictionary KkcSentenceDictionary;
typedef struct _KkcSentenceDictionaryIface KkcSentenceDictionaryIface;

#define KKC_TYPE_USER_SENTENCE_DICTIONARY (kkc_user_sentence_dictionary_get_type ())
#define KKC_USER_SENTENCE_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_USER_SENTENCE_DICTIONARY, KkcUserSentenceDictionary))
#define KKC_USER_SENTENCE_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_USER_SENTENCE_DICTIONARY, KkcUserSentenceDictionaryClass))
#define KKC_IS_USER_SENTENCE_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_USER_SENTENCE_DICTIONARY))
#define KKC_IS_USER_SENTENCE_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_USER_SENTENCE_DICTIONARY))
#define KKC_USER_SENTENCE_DICTIONARY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_USER_SENTENCE_DICTIONARY, KkcUserSentenceDictionaryClass))

typedef struct _KkcUserSentenceDictionary KkcUserSentenceDictionary;
typedef struct _KkcUserSentenceDictionaryClass KkcUserSentenceDictionaryClass;
typedef struct _KkcUserSentenceDictionaryPrivate KkcUserSentenceDictionaryPrivate;

#define KKC_TYPE_USER_DICTIONARY (kkc_user_dictionary_get_type ())
#define KKC_USER_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_USER_DICTIONARY, KkcUserDictionary))
#define KKC_USER_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_USER_DICTIONARY, KkcUserDictionaryClass))
#define KKC_IS_USER_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_USER_DICTIONARY))
#define KKC_IS_USER_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_USER_DICTIONARY))
#define KKC_USER_DICTIONARY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_USER_DICTIONARY, KkcUserDictionaryClass))

typedef struct _KkcUserDictionary KkcUserDictionary;
typedef struct _KkcUserDictionaryClass KkcUserDictionaryClass;
typedef struct _KkcUserDictionaryPrivate KkcUserDictionaryPrivate;

#define KKC_TYPE_DICTIONARY_CALLBACK_RETURN (kkc_dictionary_callback_return_get_type ())
typedef struct _KkcDictionaryListPrivate KkcDictionaryListPrivate;

#define KKC_TYPE_ENCODING_CONVERTER (kkc_encoding_converter_get_type ())
#define KKC_ENCODING_CONVERTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_ENCODING_CONVERTER, KkcEncodingConverter))
#define KKC_ENCODING_CONVERTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_ENCODING_CONVERTER, KkcEncodingConverterClass))
#define KKC_IS_ENCODING_CONVERTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_ENCODING_CONVERTER))
#define KKC_IS_ENCODING_CONVERTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_ENCODING_CONVERTER))
#define KKC_ENCODING_CONVERTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_ENCODING_CONVERTER, KkcEncodingConverterClass))

typedef struct _KkcEncodingConverter KkcEncodingConverter;
typedef struct _KkcEncodingConverterClass KkcEncodingConverterClass;
typedef struct _KkcEncodingConverterPrivate KkcEncodingConverterPrivate;

#define KKC_TYPE_TEMPLATE (kkc_template_get_type ())
#define KKC_TEMPLATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_TEMPLATE, KkcTemplate))
#define KKC_IS_TEMPLATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_TEMPLATE))
#define KKC_TEMPLATE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), KKC_TYPE_TEMPLATE, KkcTemplateIface))

typedef struct _KkcTemplate KkcTemplate;
typedef struct _KkcTemplateIface KkcTemplateIface;

#define KKC_TYPE_SIMPLE_TEMPLATE (kkc_simple_template_get_type ())
#define KKC_SIMPLE_TEMPLATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_SIMPLE_TEMPLATE, KkcSimpleTemplate))
#define KKC_SIMPLE_TEMPLATE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_SIMPLE_TEMPLATE, KkcSimpleTemplateClass))
#define KKC_IS_SIMPLE_TEMPLATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_SIMPLE_TEMPLATE))
#define KKC_IS_SIMPLE_TEMPLATE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_SIMPLE_TEMPLATE))
#define KKC_SIMPLE_TEMPLATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_SIMPLE_TEMPLATE, KkcSimpleTemplateClass))

typedef struct _KkcSimpleTemplate KkcSimpleTemplate;
typedef struct _KkcSimpleTemplateClass KkcSimpleTemplateClass;
typedef struct _KkcSimpleTemplatePrivate KkcSimpleTemplatePrivate;

#define KKC_TYPE_OKURIGANA_TEMPLATE (kkc_okurigana_template_get_type ())
#define KKC_OKURIGANA_TEMPLATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_OKURIGANA_TEMPLATE, KkcOkuriganaTemplate))
#define KKC_OKURIGANA_TEMPLATE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_OKURIGANA_TEMPLATE, KkcOkuriganaTemplateClass))
#define KKC_IS_OKURIGANA_TEMPLATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_OKURIGANA_TEMPLATE))
#define KKC_IS_OKURIGANA_TEMPLATE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_OKURIGANA_TEMPLATE))
#define KKC_OKURIGANA_TEMPLATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_OKURIGANA_TEMPLATE, KkcOkuriganaTemplateClass))

typedef struct _KkcOkuriganaTemplate KkcOkuriganaTemplate;
typedef struct _KkcOkuriganaTemplateClass KkcOkuriganaTemplateClass;
typedef struct _KkcOkuriganaTemplatePrivate KkcOkuriganaTemplatePrivate;

#define KKC_TYPE_NUMERIC_TEMPLATE (kkc_numeric_template_get_type ())
#define KKC_NUMERIC_TEMPLATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_NUMERIC_TEMPLATE, KkcNumericTemplate))
#define KKC_NUMERIC_TEMPLATE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_NUMERIC_TEMPLATE, KkcNumericTemplateClass))
#define KKC_IS_NUMERIC_TEMPLATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_NUMERIC_TEMPLATE))
#define KKC_IS_NUMERIC_TEMPLATE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_NUMERIC_TEMPLATE))
#define KKC_NUMERIC_TEMPLATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_NUMERIC_TEMPLATE, KkcNumericTemplateClass))

typedef struct _KkcNumericTemplate KkcNumericTemplate;
typedef struct _KkcNumericTemplateClass KkcNumericTemplateClass;
typedef struct _KkcNumericTemplatePrivate KkcNumericTemplatePrivate;

#define KKC_TYPE_EXPRESSION_NODE_TYPE (kkc_expression_node_type_get_type ())

#define KKC_TYPE_EXPRESSION_NODE (kkc_expression_node_get_type ())
typedef struct _KkcExpressionNode KkcExpressionNode;

#define KKC_TYPE_EXPRESSION_READER (kkc_expression_reader_get_type ())
#define KKC_EXPRESSION_READER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_EXPRESSION_READER, KkcExpressionReader))
#define KKC_EXPRESSION_READER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_EXPRESSION_READER, KkcExpressionReaderClass))
#define KKC_IS_EXPRESSION_READER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_EXPRESSION_READER))
#define KKC_IS_EXPRESSION_READER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_EXPRESSION_READER))
#define KKC_EXPRESSION_READER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_EXPRESSION_READER, KkcExpressionReaderClass))

typedef struct _KkcExpressionReader KkcExpressionReader;
typedef struct _KkcExpressionReaderClass KkcExpressionReaderClass;
typedef struct _KkcExpressionReaderPrivate KkcExpressionReaderPrivate;

#define KKC_TYPE_EXPRESSION_EVALUATOR (kkc_expression_evaluator_get_type ())
#define KKC_EXPRESSION_EVALUATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_EXPRESSION_EVALUATOR, KkcExpressionEvaluator))
#define KKC_EXPRESSION_EVALUATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_EXPRESSION_EVALUATOR, KkcExpressionEvaluatorClass))
#define KKC_IS_EXPRESSION_EVALUATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_EXPRESSION_EVALUATOR))
#define KKC_IS_EXPRESSION_EVALUATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_EXPRESSION_EVALUATOR))
#define KKC_EXPRESSION_EVALUATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_EXPRESSION_EVALUATOR, KkcExpressionEvaluatorClass))

typedef struct _KkcExpressionEvaluator KkcExpressionEvaluator;
typedef struct _KkcExpressionEvaluatorClass KkcExpressionEvaluatorClass;
typedef struct _KkcExpressionEvaluatorPrivate KkcExpressionEvaluatorPrivate;

#define KKC_TYPE_EXPRESSION (kkc_expression_get_type ())
#define KKC_EXPRESSION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_EXPRESSION, KkcExpression))
#define KKC_EXPRESSION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_EXPRESSION, KkcExpressionClass))
#define KKC_IS_EXPRESSION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_EXPRESSION))
#define KKC_IS_EXPRESSION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_EXPRESSION))
#define KKC_EXPRESSION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_EXPRESSION, KkcExpressionClass))

typedef struct _KkcExpression KkcExpression;
typedef struct _KkcExpressionClass KkcExpressionClass;
typedef struct _KkcExpressionPrivate KkcExpressionPrivate;

#define KKC_TYPE_PREFIX_ENTRY (kkc_prefix_entry_get_type ())
typedef struct _KkcPrefixEntry KkcPrefixEntry;

#define KKC_TYPE_KEY_EVENT_UTILS (kkc_key_event_utils_get_type ())
#define KKC_KEY_EVENT_UTILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_KEY_EVENT_UTILS, KkcKeyEventUtils))
#define KKC_KEY_EVENT_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_KEY_EVENT_UTILS, KkcKeyEventUtilsClass))
#define KKC_IS_KEY_EVENT_UTILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_KEY_EVENT_UTILS))
#define KKC_IS_KEY_EVENT_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_KEY_EVENT_UTILS))
#define KKC_KEY_EVENT_UTILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_KEY_EVENT_UTILS, KkcKeyEventUtilsClass))

typedef struct _KkcKeyEventUtils KkcKeyEventUtils;
typedef struct _KkcKeyEventUtilsClass KkcKeyEventUtilsClass;
typedef struct _KkcKeyEventUtilsPrivate KkcKeyEventUtilsPrivate;

#define KKC_TYPE_INDEX_FILE (kkc_index_file_get_type ())
#define KKC_INDEX_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_INDEX_FILE, KkcIndexFile))
#define KKC_IS_INDEX_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_INDEX_FILE))
#define KKC_INDEX_FILE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), KKC_TYPE_INDEX_FILE, KkcIndexFileIface))

typedef struct _KkcIndexFile KkcIndexFile;
typedef struct _KkcIndexFileIface KkcIndexFileIface;

#define KKC_TYPE_MAPPED_INDEX_FILE (kkc_mapped_index_file_get_type ())
#define KKC_MAPPED_INDEX_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_MAPPED_INDEX_FILE, KkcMappedIndexFile))
#define KKC_MAPPED_INDEX_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_MAPPED_INDEX_FILE, KkcMappedIndexFileClass))
#define KKC_IS_MAPPED_INDEX_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_MAPPED_INDEX_FILE))
#define KKC_IS_MAPPED_INDEX_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_MAPPED_INDEX_FILE))
#define KKC_MAPPED_INDEX_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_MAPPED_INDEX_FILE, KkcMappedIndexFileClass))

typedef struct _KkcMappedIndexFile KkcMappedIndexFile;
typedef struct _KkcMappedIndexFileClass KkcMappedIndexFileClass;
typedef struct _KkcMappedIndexFilePrivate KkcMappedIndexFilePrivate;

#define KKC_TYPE_LOADED_INDEX_FILE (kkc_loaded_index_file_get_type ())
#define KKC_LOADED_INDEX_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), KKC_TYPE_LOADED_INDEX_FILE, KkcLoadedIndexFile))
#define KKC_LOADED_INDEX_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), KKC_TYPE_LOADED_INDEX_FILE, KkcLoadedIndexFileClass))
#define KKC_IS_LOADED_INDEX_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), KKC_TYPE_LOADED_INDEX_FILE))
#define KKC_IS_LOADED_INDEX_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), KKC_TYPE_LOADED_INDEX_FILE))
#define KKC_LOADED_INDEX_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), KKC_TYPE_LOADED_INDEX_FILE, KkcLoadedIndexFileClass))

typedef struct _KkcLoadedIndexFile KkcLoadedIndexFile;
typedef struct _KkcLoadedIndexFileClass KkcLoadedIndexFileClass;
typedef struct _KkcLoadedIndexFilePrivate KkcLoadedIndexFilePrivate;

typedef enum  {
	KKC_METADATA_FORMAT_ERROR_MISSING_FIELD,
	KKC_METADATA_FORMAT_ERROR_INVALID_FIELD
} KkcMetadataFormatError;
#define KKC_METADATA_FORMAT_ERROR kkc_metadata_format_error_quark ()
struct _KkcMetadataFile {
	GObject parent_instance;
	KkcMetadataFilePrivate * priv;
};

struct _KkcMetadataFileClass {
	GObjectClass parent_class;
	gboolean (*parse) (KkcMetadataFile* self, JsonObject* object, GError** error);
};

struct _KkcLanguageModelEntry {
	gchar* input;
	gchar* output;
	guint id;
};

struct _KkcTrellisNode {
	GTypeInstance parent_instance;
	volatile int ref_count;
	KkcTrellisNodePrivate * priv;
	KkcTrellisNode* previous;
	gdouble cumulative_cost;
};

struct _KkcTrellisNodeClass {
	GTypeClass parent_class;
	void (*finalize) (KkcTrellisNode *self);
	gchar* (*to_string) (KkcTrellisNode* self);
	guint (*get_endpos) (KkcTrellisNode* self);
	guint (*get_length) (KkcTrellisNode* self);
	const gchar* (*get_input) (KkcTrellisNode* self);
	const gchar* (*get_output) (KkcTrellisNode* self);
	KkcLanguageModelEntry* (*get_entries) (KkcTrellisNode* self, int* result_length1);
};

struct _KkcUnigramTrellisNode {
	KkcTrellisNode parent_instance;
	KkcUnigramTrellisNodePrivate * priv;
};

struct _KkcUnigramTrellisNodeClass {
	KkcTrellisNodeClass parent_class;
};

struct _KkcBigramTrellisNode {
	KkcTrellisNode parent_instance;
	KkcBigramTrellisNodePrivate * priv;
};

struct _KkcBigramTrellisNodeClass {
	KkcTrellisNodeClass parent_class;
};

typedef enum  {
	KKC_LANGUAGE_MODEL_ERROR_NOT_FOUND
} KkcLanguageModelError;
#define KKC_LANGUAGE_MODEL_ERROR kkc_language_model_error_quark ()
struct _KkcLanguageModelMetadata {
	KkcMetadataFile parent_instance;
	KkcLanguageModelMetadataPrivate * priv;
};

struct _KkcLanguageModelMetadataClass {
	KkcMetadataFileClass parent_class;
};

struct _KkcLanguageModel {
	GObject parent_instance;
	KkcLanguageModelPrivate * priv;
};

struct _KkcLanguageModelClass {
	GObjectClass parent_class;
	GeeCollection* (*unigram_entries) (KkcLanguageModel* self, const gchar* input);
	GeeCollection* (*entries) (KkcLanguageModel* self, const gchar* input);
	KkcLanguageModelEntry* (*get) (KkcLanguageModel* self, const gchar* input, const gchar* output);
	gboolean (*parse) (KkcLanguageModel* self, GError** error);
	void (*get_bos) (KkcLanguageModel* self, KkcLanguageModelEntry* result);
	void (*get_eos) (KkcLanguageModel* self, KkcLanguageModelEntry* result);
};

struct _KkcUnigramLanguageModelIface {
	GTypeInterface parent_iface;
	gdouble (*unigram_cost) (KkcUnigramLanguageModel* self, KkcLanguageModelEntry* entry);
	gdouble (*unigram_backoff) (KkcUnigramLanguageModel* self, KkcLanguageModelEntry* entry);
};

struct _KkcBigramLanguageModelIface {
	GTypeInterface parent_iface;
	gboolean (*has_bigram) (KkcBigramLanguageModel* self, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
	gdouble (*bigram_cost) (KkcBigramLanguageModel* self, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
	gdouble (*bigram_backoff) (KkcBigramLanguageModel* self, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
};

struct _KkcTrigramLanguageModelIface {
	GTypeInterface parent_iface;
	gboolean (*has_trigram) (KkcTrigramLanguageModel* self, KkcLanguageModelEntry* ppentry, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
	gdouble (*trigram_cost) (KkcTrigramLanguageModel* self, KkcLanguageModelEntry* ppentry, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
};

struct _KkcTextBigramLanguageModel {
	KkcLanguageModel parent_instance;
	KkcTextBigramLanguageModelPrivate * priv;
	GeeMap* input_map;
	GeeMap* cost_map;
	GeeMap* backoff_map;
	GeeMap* id_map;
};

struct _KkcTextBigramLanguageModelClass {
	KkcLanguageModelClass parent_class;
};

struct _KkcTextTrigramLanguageModel {
	KkcTextBigramLanguageModel parent_instance;
	KkcTextTrigramLanguageModelPrivate * priv;
};

struct _KkcTextTrigramLanguageModelClass {
	KkcTextBigramLanguageModelClass parent_class;
};

struct _KkcSortedBigramLanguageModel {
	KkcLanguageModel parent_instance;
	KkcSortedBigramLanguageModelPrivate * priv;
};

struct _KkcSortedBigramLanguageModelClass {
	KkcLanguageModelClass parent_class;
};

struct _KkcSortedTrigramLanguageModel {
	KkcSortedBigramLanguageModel parent_instance;
	KkcSortedTrigramLanguageModelPrivate * priv;
};

struct _KkcSortedTrigramLanguageModelClass {
	KkcSortedBigramLanguageModelClass parent_class;
};

struct _KkcDecoder {
	GObject parent_instance;
	KkcDecoderPrivate * priv;
};

struct _KkcDecoderClass {
	GObjectClass parent_class;
	KkcSegment** (*decode) (KkcDecoder* self, const gchar* input, gint nbest, gint* constraint, int constraint_length1, int* result_length1);
	KkcSegment** (*decode_with_costs) (KkcDecoder* self, const gchar* input, gint nbest, gint* constraint, int constraint_length1, gdouble max_distance, gdouble min_path_cost, int* result_length1);
};

struct _KkcNbestNode {
	GTypeInstance parent_instance;
	volatile int ref_count;
	KkcNbestNodePrivate * priv;
	KkcTrellisNode* node;
	gdouble gn;
	gdouble fn;
	KkcNbestNode* next;
};

struct _KkcNbestNodeClass {
	GTypeClass parent_class;
	void (*finalize) (KkcNbestNode *self);
};

struct _KkcBigramDecoder {
	KkcDecoder parent_instance;
	KkcBigramDecoderPrivate * priv;
};

struct _KkcBigramDecoderClass {
	KkcDecoderClass parent_class;
	gdouble (*path_cost) (KkcBigramDecoder* self, KkcTrellisNode* pnode, KkcTrellisNode* node, gint endpos);
};

struct _KkcPathCostFunc {
	GTypeInstance parent_instance;
	volatile int ref_count;
	KkcPathCostFuncPrivate * priv;
};

struct _KkcPathCostFuncClass {
	GTypeClass parent_class;
	void (*finalize) (KkcPathCostFunc *self);
	gdouble (*path_cost) (KkcPathCostFunc* self, KkcTrigramLanguageModel* model, KkcTrellisNode* pnode, KkcTrellisNode* node);
};

struct _KkcUnigramToUnigramPathCostFunc {
	KkcPathCostFunc parent_instance;
	KkcUnigramToUnigramPathCostFuncPrivate * priv;
};

struct _KkcUnigramToUnigramPathCostFuncClass {
	KkcPathCostFuncClass parent_class;
};

struct _KkcUnigramToBigramPathCostFunc {
	KkcPathCostFunc parent_instance;
	KkcUnigramToBigramPathCostFuncPrivate * priv;
};

struct _KkcUnigramToBigramPathCostFuncClass {
	KkcPathCostFuncClass parent_class;
};

struct _KkcBigramToUnigramPathCostFunc {
	KkcPathCostFunc parent_instance;
	KkcBigramToUnigramPathCostFuncPrivate * priv;
};

struct _KkcBigramToUnigramPathCostFuncClass {
	KkcPathCostFuncClass parent_class;
};

struct _KkcBigramToBigramPathCostFunc {
	KkcPathCostFunc parent_instance;
	KkcBigramToBigramPathCostFuncPrivate * priv;
};

struct _KkcBigramToBigramPathCostFuncClass {
	KkcPathCostFuncClass parent_class;
};

struct _KkcTrigramDecoder {
	KkcBigramDecoder parent_instance;
	KkcTrigramDecoderPrivate * priv;
};

struct _KkcTrigramDecoderClass {
	KkcBigramDecoderClass parent_class;
};

struct _KkcSegmentList {
	GObject parent_instance;
	KkcSegmentListPrivate * priv;
};

struct _KkcSegmentListClass {
	GObjectClass parent_class;
};

struct _KkcSegment {
	GObject parent_instance;
	KkcSegmentPrivate * priv;
	KkcSegment* next;
};

struct _KkcSegmentClass {
	GObjectClass parent_class;
};

struct _KkcBloomFilter {
	GObject parent_instance;
	KkcBloomFilterPrivate * priv;
};

struct _KkcBloomFilterClass {
	GObjectClass parent_class;
};

struct _KkcCandidateList {
	GObject parent_instance;
	KkcCandidateListPrivate * priv;
};

struct _KkcCandidateListClass {
	GObjectClass parent_class;
	gboolean (*next) (KkcCandidateList* self);
	gboolean (*previous) (KkcCandidateList* self);
};

struct _KkcCandidate {
	GObject parent_instance;
	KkcCandidatePrivate * priv;
};

struct _KkcCandidateClass {
	GObjectClass parent_class;
};

struct _KkcKeyEventFilter {
	GObject parent_instance;
	KkcKeyEventFilterPrivate * priv;
};

struct _KkcKeyEventFilterClass {
	GObjectClass parent_class;
	KkcKeyEvent* (*filter_key_event) (KkcKeyEventFilter* self, KkcKeyEvent* key);
	void (*reset) (KkcKeyEventFilter* self);
};

struct _KkcSimpleKeyEventFilter {
	KkcKeyEventFilter parent_instance;
	KkcSimpleKeyEventFilterPrivate * priv;
};

struct _KkcSimpleKeyEventFilterClass {
	KkcKeyEventFilterClass parent_class;
};

struct _KkcKanaKeyEventFilter {
	KkcSimpleKeyEventFilter parent_instance;
	KkcKanaKeyEventFilterPrivate * priv;
};

struct _KkcKanaKeyEventFilterClass {
	KkcSimpleKeyEventFilterClass parent_class;
};

typedef enum  {
	KKC_KEY_EVENT_FORMAT_ERROR_PARSE_FAILED,
	KKC_KEY_EVENT_FORMAT_ERROR_KEYSYM_NOT_FOUND
} KkcKeyEventFormatError;
#define KKC_KEY_EVENT_FORMAT_ERROR kkc_key_event_format_error_quark ()
typedef enum  {
	KKC_MODIFIER_TYPE_NONE = 0,
	KKC_MODIFIER_TYPE_SHIFT_MASK = 1 << 0,
	KKC_MODIFIER_TYPE_LOCK_MASK = 1 << 1,
	KKC_MODIFIER_TYPE_CONTROL_MASK = 1 << 2,
	KKC_MODIFIER_TYPE_MOD1_MASK = 1 << 3,
	KKC_MODIFIER_TYPE_MOD2_MASK = 1 << 4,
	KKC_MODIFIER_TYPE_MOD3_MASK = 1 << 5,
	KKC_MODIFIER_TYPE_MOD4_MASK = 1 << 6,
	KKC_MODIFIER_TYPE_MOD5_MASK = 1 << 7,
	KKC_MODIFIER_TYPE_LSHIFT_MASK = 1 << 22,
	KKC_MODIFIER_TYPE_RSHIFT_MASK = 1 << 23,
	KKC_MODIFIER_TYPE_SUPER_MASK = 1 << 26,
	KKC_MODIFIER_TYPE_HYPER_MASK = 1 << 27,
	KKC_MODIFIER_TYPE_META_MASK = 1 << 28,
	KKC_MODIFIER_TYPE_RELEASE_MASK = 1 << 30
} KkcModifierType;

struct _KkcKeyEvent {
	GObject parent_instance;
	KkcKeyEventPrivate * priv;
};

struct _KkcKeyEventClass {
	GObjectClass parent_class;
};

struct _KkcKeymapCommandEntry {
	gchar* name;
	gchar* label;
};

struct _KkcKeymapEntry {
	KkcKeyEvent* key;
	gchar* command;
};

struct _KkcKeymap {
	GObject parent_instance;
	KkcKeymapPrivate * priv;
};

struct _KkcKeymapClass {
	GObjectClass parent_class;
};

struct _KkcKeynameEntry {
	guint keyval;
	gchar* name;
};

struct _KkcMapFile {
	GObject parent_instance;
	KkcMapFilePrivate * priv;
};

struct _KkcMapFileClass {
	GObjectClass parent_class;
	gchar* (*uniquify) (KkcMapFile* self, const gchar* key);
};

typedef enum  {
	KKC_RULE_PARSE_ERROR_FAILED
} KkcRuleParseError;
#define KKC_RULE_PARSE_ERROR kkc_rule_parse_error_quark ()
typedef gint64 (*KkcGetTime) (void* user_data);
struct _KkcNicolaKeyEventFilter {
	KkcKeyEventFilter parent_instance;
	KkcNicolaKeyEventFilterPrivate * priv;
	KkcGetTime get_time_func;
	gpointer get_time_func_target;
	GDestroyNotify get_time_func_target_destroy_notify;
	gint64 timeout;
	gint64 overlap;
	gint64 maxwait;
};

struct _KkcNicolaKeyEventFilterClass {
	KkcKeyEventFilterClass parent_class;
};

typedef enum  {
	KKC_NUMERIC_CONVERSION_TYPE_LATIN,
	KKC_NUMERIC_CONVERSION_TYPE_WIDE_LATIN,
	KKC_NUMERIC_CONVERSION_TYPE_KANJI_NUMERAL,
	KKC_NUMERIC_CONVERSION_TYPE_KANJI,
	KKC_NUMERIC_CONVERSION_TYPE_RECONVERT,
	KKC_NUMERIC_CONVERSION_TYPE_DAIJI,
	KKC_NUMERIC_CONVERSION_TYPE_RESERVED6,
	KKC_NUMERIC_CONVERSION_TYPE_RESERVED7,
	KKC_NUMERIC_CONVERSION_TYPE_GROUPING,
	KKC_NUMERIC_CONVERSION_TYPE_SHOGI
} KkcNumericConversionType;

struct _KkcRomKanaUtils {
	GObject parent_instance;
	KkcRomKanaUtilsPrivate * priv;
};

struct _KkcRomKanaUtilsClass {
	GObjectClass parent_class;
};

typedef enum  {
	KKC_KANA_MODE_HIRAGANA,
	KKC_KANA_MODE_KATAKANA,
	KKC_KANA_MODE_HANKAKU_KATAKANA,
	KKC_KANA_MODE_LATIN,
	KKC_KANA_MODE_WIDE_LATIN
} KkcKanaMode;

struct _KkcRomKanaEntry {
	gchar* rom;
	gchar* carryover;
	gchar* hiragana;
	gchar* katakana;
	gchar* hiragana_partial;
	gchar* katakana_partial;
};

struct _KkcRomKanaNode {
	GObject parent_instance;
	KkcRomKanaNodePrivate * priv;
	KkcRomKanaEntry* entry;
	KkcRomKanaNode* parent;
	KkcRomKanaNode* children[256];
	gchar c;
	guint n_children;
	guint8 valid[32];
};

struct _KkcRomKanaNodeClass {
	GObjectClass parent_class;
};

typedef enum  {
	KKC_PUNCTUATION_STYLE_JA_JA,
	KKC_PUNCTUATION_STYLE_EN_EN,
	KKC_PUNCTUATION_STYLE_JA_EN,
	KKC_PUNCTUATION_STYLE_EN_JA
} KkcPunctuationStyle;

struct _KkcRomKanaCharacter {
	gchar* output;
	gchar* input;
};

struct _KkcRomKanaCharacterList {
	GObject parent_instance;
	KkcRomKanaCharacterListPrivate * priv;
};

struct _KkcRomKanaCharacterListClass {
	GObjectClass parent_class;
};

struct _KkcRomKanaConverter {
	GObject parent_instance;
	KkcRomKanaConverterPrivate * priv;
};

struct _KkcRomKanaConverterClass {
	GObjectClass parent_class;
};

struct _KkcKeymapMapFile {
	KkcMapFile parent_instance;
	KkcKeymapMapFilePrivate * priv;
	KkcKeymap* keymap;
	KkcKeymap* parent_keymap;
};

struct _KkcKeymapMapFileClass {
	KkcMapFileClass parent_class;
};

struct _KkcRomKanaMapFile {
	KkcMapFile parent_instance;
	KkcRomKanaMapFilePrivate * priv;
	KkcRomKanaNode* root_node;
};

struct _KkcRomKanaMapFileClass {
	KkcMapFileClass parent_class;
};

struct _KkcRuleMetadata {
	KkcMetadataFile parent_instance;
	KkcRuleMetadataPrivate * priv;
};

struct _KkcRuleMetadataClass {
	KkcMetadataFileClass parent_class;
};

struct _KkcRule {
	GObject parent_instance;
	KkcRulePrivate * priv;
	KkcRomKanaMapFile* rom_kana;
};

struct _KkcRuleClass {
	GObjectClass parent_class;
};

typedef enum  {
	KKC_INPUT_MODE_HIRAGANA = KKC_KANA_MODE_HIRAGANA,
	KKC_INPUT_MODE_KATAKANA = KKC_KANA_MODE_KATAKANA,
	KKC_INPUT_MODE_HANKAKU_KATAKANA = KKC_KANA_MODE_HANKAKU_KATAKANA,
	KKC_INPUT_MODE_LATIN = KKC_KANA_MODE_LATIN,
	KKC_INPUT_MODE_WIDE_LATIN = KKC_KANA_MODE_WIDE_LATIN,
	KKC_INPUT_MODE_DIRECT
} KkcInputMode;

struct _KkcUserRule {
	KkcRule parent_instance;
	KkcUserRulePrivate * priv;
};

struct _KkcUserRuleClass {
	KkcRuleClass parent_class;
};

struct _KkcContext {
	GObject parent_instance;
	KkcContextPrivate * priv;
};

struct _KkcContextClass {
	GObjectClass parent_class;
};

struct _KkcState {
	GObject parent_instance;
	KkcStatePrivate * priv;
	GType handler_type;
	KkcLanguageModel* model;
	KkcDecoder* decoder;
	KkcSegmentList* segments;
	KkcCandidateList* candidates;
	KkcDictionaryList* dictionaries;
	KkcRomKanaConverter* rom_kana_converter;
	KkcRomKanaCharacterList* input_characters;
	gint input_characters_cursor_pos;
	GString* selection;
	GString* output;
	gboolean quoted;
	KkcKeyEvent* this_command_key;
	KkcKeyEvent* last_command_key;
	gchar* overriding_input;
	GeeIterator* completion_iterator;
};

struct _KkcStateClass {
	GObjectClass parent_class;
};

struct _KkcCommandHandlerIface {
	GTypeInterface parent_iface;
	gboolean (*call) (KkcCommandHandler* self, const gchar* command, KkcState* state, KkcKeyEvent* key);
};

typedef gboolean (*KkcCommandCallback) (const gchar* command, KkcState* state, KkcKeyEvent* key, void* user_data);
struct _KkcCallbackCommandHandler {
	GObject parent_instance;
	KkcCallbackCommandHandlerPrivate * priv;
};

struct _KkcCallbackCommandHandlerClass {
	GObjectClass parent_class;
};

struct _KkcStateHandler {
	GObject parent_instance;
	KkcStateHandlerPrivate * priv;
};

struct _KkcStateHandlerClass {
	GObjectClass parent_class;
	gboolean (*process_key_event) (KkcStateHandler* self, KkcState* state, KkcKeyEvent* key);
};

struct _KkcInitialStateHandler {
	KkcStateHandler parent_instance;
	KkcInitialStateHandlerPrivate * priv;
};

struct _KkcInitialStateHandlerClass {
	KkcStateHandlerClass parent_class;
};

struct _KkcConvertSentenceStateHandler {
	KkcStateHandler parent_instance;
	KkcConvertSentenceStateHandlerPrivate * priv;
};

struct _KkcConvertSentenceStateHandlerClass {
	KkcStateHandlerClass parent_class;
};

struct _KkcConvertSegmentStateHandler {
	KkcStateHandler parent_instance;
	KkcConvertSegmentStateHandlerPrivate * priv;
};

struct _KkcConvertSegmentStateHandlerClass {
	KkcStateHandlerClass parent_class;
};

struct _KkcDictionaryUtils {
	GObject parent_instance;
	KkcDictionaryUtilsPrivate * priv;
};

struct _KkcDictionaryUtilsClass {
	GObjectClass parent_class;
};

struct _KkcDictionaryIface {
	GTypeInterface parent_iface;
	void (*reload) (KkcDictionary* self, GError** error);
	void (*save) (KkcDictionary* self, GError** error);
};

typedef enum  {
	KKC_DICTIONARY_ERROR_NOT_READABLE,
	KKC_DICTIONARY_ERROR_MALFORMED_INPUT
} KkcDictionaryError;
#define KKC_DICTIONARY_ERROR kkc_dictionary_error_quark ()
struct _KkcSegmentDictionaryIface {
	GTypeInterface parent_iface;
	gboolean (*lookup_candidates) (KkcSegmentDictionary* self, const gchar* midasi, gboolean okuri, KkcCandidate*** candidates, int* candidates_length1);
	gchar** (*complete) (KkcSegmentDictionary* self, const gchar* midasi, int* result_length1);
	gboolean (*select_candidate) (KkcSegmentDictionary* self, KkcCandidate* candidate);
	gboolean (*purge_candidate) (KkcSegmentDictionary* self, KkcCandidate* candidate);
};

struct _KkcEmptySegmentDictionary {
	GObject parent_instance;
	KkcEmptySegmentDictionaryPrivate * priv;
};

struct _KkcEmptySegmentDictionaryClass {
	GObjectClass parent_class;
};

struct _KkcSystemSegmentDictionary {
	GObject parent_instance;
	KkcSystemSegmentDictionaryPrivate * priv;
};

struct _KkcSystemSegmentDictionaryClass {
	GObjectClass parent_class;
};

struct _KkcUserSegmentDictionary {
	GObject parent_instance;
	KkcUserSegmentDictionaryPrivate * priv;
};

struct _KkcUserSegmentDictionaryClass {
	GObjectClass parent_class;
};

struct _KkcSentenceDictionaryIface {
	GTypeInterface parent_iface;
	gboolean (*lookup_constraint) (KkcSentenceDictionary* self, const gchar* input, gint** constraint, int* constraint_length1);
	gboolean (*lookup_phrase) (KkcSentenceDictionary* self, gchar** input, int input_length1, gchar*** phrase, int* phrase_length1);
	gboolean (*select_segments) (KkcSentenceDictionary* self, KkcSegment** input, int input_length1);
};

struct _KkcUserSentenceDictionary {
	GObject parent_instance;
	KkcUserSentenceDictionaryPrivate * priv;
};

struct _KkcUserSentenceDictionaryClass {
	GObjectClass parent_class;
};

struct _KkcUserDictionary {
	GObject parent_instance;
	KkcUserDictionaryPrivate * priv;
};

struct _KkcUserDictionaryClass {
	GObjectClass parent_class;
};

typedef enum  {
	KKC_DICTIONARY_CALLBACK_RETURN_CONTINUE,
	KKC_DICTIONARY_CALLBACK_RETURN_REMOVE
} KkcDictionaryCallbackReturn;

struct _KkcDictionaryList {
	GObject parent_instance;
	KkcDictionaryListPrivate * priv;
};

struct _KkcDictionaryListClass {
	GObjectClass parent_class;
};

typedef KkcDictionaryCallbackReturn (*KkcDictionaryListDictionaryCallback) (KkcDictionary* dictionary, void* user_data);
struct _KkcEncodingConverter {
	GObject parent_instance;
	KkcEncodingConverterPrivate * priv;
};

struct _KkcEncodingConverterClass {
	GObjectClass parent_class;
};

struct _KkcTemplateIface {
	GTypeInterface parent_iface;
	gchar* (*expand) (KkcTemplate* self, const gchar* text);
	const gchar* (*get_source) (KkcTemplate* self);
	void (*set_source) (KkcTemplate* self, const gchar* value);
	gboolean (*get_okuri) (KkcTemplate* self);
	void (*set_okuri) (KkcTemplate* self, gboolean value);
};

struct _KkcSimpleTemplate {
	GObject parent_instance;
	KkcSimpleTemplatePrivate * priv;
};

struct _KkcSimpleTemplateClass {
	GObjectClass parent_class;
};

struct _KkcOkuriganaTemplate {
	GObject parent_instance;
	KkcOkuriganaTemplatePrivate * priv;
};

struct _KkcOkuriganaTemplateClass {
	GObjectClass parent_class;
};

struct _KkcNumericTemplate {
	GObject parent_instance;
	KkcNumericTemplatePrivate * priv;
};

struct _KkcNumericTemplateClass {
	GObjectClass parent_class;
};

typedef enum  {
	KKC_EXPRESSION_NODE_TYPE_ARRAY,
	KKC_EXPRESSION_NODE_TYPE_SYMBOL,
	KKC_EXPRESSION_NODE_TYPE_STRING
} KkcExpressionNodeType;

struct _KkcExpressionNode {
	KkcExpressionNodeType type;
	GeeLinkedList* nodes;
	gchar* data;
};

struct _KkcExpressionReader {
	GObject parent_instance;
	KkcExpressionReaderPrivate * priv;
};

struct _KkcExpressionReaderClass {
	GObjectClass parent_class;
};

struct _KkcExpressionEvaluator {
	GObject parent_instance;
	KkcExpressionEvaluatorPrivate * priv;
};

struct _KkcExpressionEvaluatorClass {
	GObjectClass parent_class;
};

struct _KkcExpression {
	GObject parent_instance;
	KkcExpressionPrivate * priv;
};

struct _KkcExpressionClass {
	GObjectClass parent_class;
};

struct _KkcPrefixEntry {
	gint offset;
	gchar** sequence;
	gint sequence_length1;
	gint _sequence_size_;
};

struct _KkcKeyEventUtils {
	GObject parent_instance;
	KkcKeyEventUtilsPrivate * priv;
};

struct _KkcKeyEventUtilsClass {
	GObjectClass parent_class;
};

struct _KkcIndexFileIface {
	GTypeInterface parent_iface;
	gchar* (*get_contents) (KkcIndexFile* self);
	gsize (*get_length) (KkcIndexFile* self);
};

struct _KkcMappedIndexFile {
	GObject parent_instance;
	KkcMappedIndexFilePrivate * priv;
};

struct _KkcMappedIndexFileClass {
	GObjectClass parent_class;
};

struct _KkcLoadedIndexFile {
	GObject parent_instance;
	KkcLoadedIndexFilePrivate * priv;
};

struct _KkcLoadedIndexFileClass {
	GObjectClass parent_class;
};


GQuark kkc_metadata_format_error_quark (void);
GType kkc_metadata_file_get_type (void) G_GNUC_CONST;
KkcMetadataFile* kkc_metadata_file_construct (GType object_type, const gchar* name, const gchar* filename, GError** error);
gboolean kkc_metadata_file_parse (KkcMetadataFile* self, JsonObject* object, GError** error);
const gchar* kkc_metadata_file_get_name (KkcMetadataFile* self);
void kkc_metadata_file_set_name (KkcMetadataFile* self, const gchar* value);
const gchar* kkc_metadata_file_get_label (KkcMetadataFile* self);
void kkc_metadata_file_set_label (KkcMetadataFile* self, const gchar* value);
const gchar* kkc_metadata_file_get_description (KkcMetadataFile* self);
void kkc_metadata_file_set_description (KkcMetadataFile* self, const gchar* value);
const gchar* kkc_metadata_file_get_filename (KkcMetadataFile* self);
void kkc_metadata_file_set_filename (KkcMetadataFile* self, const gchar* value);
gpointer kkc_trellis_node_ref (gpointer instance);
void kkc_trellis_node_unref (gpointer instance);
GParamSpec* kkc_param_spec_trellis_node (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void kkc_value_set_trellis_node (GValue* value, gpointer v_object);
void kkc_value_take_trellis_node (GValue* value, gpointer v_object);
gpointer kkc_value_get_trellis_node (const GValue* value);
GType kkc_trellis_node_get_type (void) G_GNUC_CONST;
GType kkc_language_model_entry_get_type (void) G_GNUC_CONST;
KkcLanguageModelEntry* kkc_language_model_entry_dup (const KkcLanguageModelEntry* self);
void kkc_language_model_entry_free (KkcLanguageModelEntry* self);
void kkc_language_model_entry_copy (const KkcLanguageModelEntry* self, KkcLanguageModelEntry* dest);
void kkc_language_model_entry_destroy (KkcLanguageModelEntry* self);
gchar* kkc_trellis_node_to_string (KkcTrellisNode* self);
KkcTrellisNode* kkc_trellis_node_construct (GType object_type);
guint kkc_trellis_node_get_endpos (KkcTrellisNode* self);
guint kkc_trellis_node_get_length (KkcTrellisNode* self);
const gchar* kkc_trellis_node_get_input (KkcTrellisNode* self);
const gchar* kkc_trellis_node_get_output (KkcTrellisNode* self);
KkcLanguageModelEntry* kkc_trellis_node_get_entries (KkcTrellisNode* self, int* result_length1);
GType kkc_unigram_trellis_node_get_type (void) G_GNUC_CONST;
KkcUnigramTrellisNode* kkc_unigram_trellis_node_new (KkcLanguageModelEntry* entry, guint endpos);
KkcUnigramTrellisNode* kkc_unigram_trellis_node_construct (GType object_type, KkcLanguageModelEntry* entry, guint endpos);
void kkc_unigram_trellis_node_get_entry (KkcUnigramTrellisNode* self, KkcLanguageModelEntry* result);
GType kkc_bigram_trellis_node_get_type (void) G_GNUC_CONST;
KkcBigramTrellisNode* kkc_bigram_trellis_node_new (KkcUnigramTrellisNode* left_node, KkcUnigramTrellisNode* right_node, guint endpos);
KkcBigramTrellisNode* kkc_bigram_trellis_node_construct (GType object_type, KkcUnigramTrellisNode* left_node, KkcUnigramTrellisNode* right_node, guint endpos);
KkcUnigramTrellisNode* kkc_bigram_trellis_node_get_left_node (KkcBigramTrellisNode* self);
KkcUnigramTrellisNode* kkc_bigram_trellis_node_get_right_node (KkcBigramTrellisNode* self);
GQuark kkc_language_model_error_quark (void);
GType kkc_language_model_metadata_get_type (void) G_GNUC_CONST;
KkcLanguageModelMetadata* kkc_language_model_metadata_new (const gchar* name, const gchar* filename, GError** error);
KkcLanguageModelMetadata* kkc_language_model_metadata_construct (GType object_type, const gchar* name, const gchar* filename, GError** error);
KkcLanguageModelMetadata* kkc_language_model_metadata_find (const gchar* name);
GType kkc_language_model_get_type (void) G_GNUC_CONST;
KkcLanguageModel* kkc_language_model_metadata_create_language_model (KkcLanguageModelMetadata* self, GError** error);
GType kkc_language_model_metadata_get_model_type (KkcLanguageModelMetadata* self);
void kkc_language_model_metadata_set_model_type (KkcLanguageModelMetadata* self, GType value);
GeeCollection* kkc_language_model_unigram_entries (KkcLanguageModel* self, const gchar* input);
GeeCollection* kkc_language_model_entries (KkcLanguageModel* self, const gchar* input);
KkcLanguageModelEntry* kkc_language_model_get (KkcLanguageModel* self, const gchar* input, const gchar* output);
KkcLanguageModel* kkc_language_model_construct (GType object_type, KkcLanguageModelMetadata* metadata, GError** error);
gboolean kkc_language_model_parse (KkcLanguageModel* self, GError** error);
KkcLanguageModel* kkc_language_model_load (const gchar* name, GError** error);
KkcLanguageModelMetadata* kkc_language_model_get_metadata (KkcLanguageModel* self);
void kkc_language_model_set_metadata (KkcLanguageModel* self, KkcLanguageModelMetadata* value);
void kkc_language_model_get_bos (KkcLanguageModel* self, KkcLanguageModelEntry* result);
void kkc_language_model_get_eos (KkcLanguageModel* self, KkcLanguageModelEntry* result);
GType kkc_unigram_language_model_get_type (void) G_GNUC_CONST;
gdouble kkc_unigram_language_model_unigram_cost (KkcUnigramLanguageModel* self, KkcLanguageModelEntry* entry);
gdouble kkc_unigram_language_model_unigram_backoff (KkcUnigramLanguageModel* self, KkcLanguageModelEntry* entry);
GType kkc_bigram_language_model_get_type (void) G_GNUC_CONST;
gboolean kkc_bigram_language_model_has_bigram (KkcBigramLanguageModel* self, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
gdouble kkc_bigram_language_model_bigram_cost (KkcBigramLanguageModel* self, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
gdouble kkc_bigram_language_model_bigram_backoff (KkcBigramLanguageModel* self, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
gdouble kkc_bigram_language_model_bigram_backoff_cost (KkcBigramLanguageModel* self, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
GType kkc_trigram_language_model_get_type (void) G_GNUC_CONST;
gboolean kkc_trigram_language_model_has_trigram (KkcTrigramLanguageModel* self, KkcLanguageModelEntry* ppentry, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
gdouble kkc_trigram_language_model_trigram_cost (KkcTrigramLanguageModel* self, KkcLanguageModelEntry* ppentry, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
gdouble kkc_trigram_language_model_trigram_backoff_cost (KkcTrigramLanguageModel* self, KkcLanguageModelEntry* ppentry, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
GType kkc_text_bigram_language_model_get_type (void) G_GNUC_CONST;
gchar* kkc_text_bigram_language_model_get_key (KkcTextBigramLanguageModel* self, guint* ids, int ids_length1);
void kkc_text_bigram_language_model_parse_lm (KkcTextBigramLanguageModel* self, const gchar* input, GError** error);
KkcTextBigramLanguageModel* kkc_text_bigram_language_model_new (KkcLanguageModelMetadata* metadata, GError** error);
KkcTextBigramLanguageModel* kkc_text_bigram_language_model_construct (GType object_type, KkcLanguageModelMetadata* metadata, GError** error);
GType kkc_text_trigram_language_model_get_type (void) G_GNUC_CONST;
KkcTextTrigramLanguageModel* kkc_text_trigram_language_model_new (KkcLanguageModelMetadata* metadata, GError** error);
KkcTextTrigramLanguageModel* kkc_text_trigram_language_model_construct (GType object_type, KkcLanguageModelMetadata* metadata, GError** error);
GType kkc_sorted_bigram_language_model_get_type (void) G_GNUC_CONST;
glong kkc_sorted_bigram_language_model_bigram_offset (KkcSortedBigramLanguageModel* self, KkcLanguageModelEntry* pentry, KkcLanguageModelEntry* entry);
KkcSortedBigramLanguageModel* kkc_sorted_bigram_language_model_new (KkcLanguageModelMetadata* metadata, GError** error);
KkcSortedBigramLanguageModel* kkc_sorted_bigram_language_model_construct (GType object_type, KkcLanguageModelMetadata* metadata, GError** error);
gdouble kkc_sorted_bigram_language_model_get_min_cost (KkcSortedBigramLanguageModel* self);
GType kkc_sorted_trigram_language_model_get_type (void) G_GNUC_CONST;
KkcSortedTrigramLanguageModel* kkc_sorted_trigram_language_model_new (KkcLanguageModelMetadata* metadata, GError** error);
KkcSortedTrigramLanguageModel* kkc_sorted_trigram_language_model_construct (GType object_type, KkcLanguageModelMetadata* metadata, GError** error);
gdouble kkc_language_model_utils_decode_cost (guint16 cost, gdouble min_cost);
glong kkc_language_model_utils_bsearch_ngram (void* memory, glong start_offset, glong end_offset, glong record_size, guint8* needle, int needle_length1);
GType kkc_decoder_get_type (void) G_GNUC_CONST;
GType kkc_segment_get_type (void) G_GNUC_CONST;
KkcSegment** kkc_decoder_decode (KkcDecoder* self, const gchar* input, gint nbest, gint* constraint, int constraint_length1, int* result_length1);
KkcSegment** kkc_decoder_decode_with_costs (KkcDecoder* self, const gchar* input, gint nbest, gint* constraint, int constraint_length1, gdouble max_distance, gdouble min_path_cost, int* result_length1);
KkcDecoder* kkc_decoder_create (KkcLanguageModel* model);
KkcDecoder* kkc_decoder_construct (GType object_type);
gpointer kkc_nbest_node_ref (gpointer instance);
void kkc_nbest_node_unref (gpointer instance);
GParamSpec* kkc_param_spec_nbest_node (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void kkc_value_set_nbest_node (GValue* value, gpointer v_object);
void kkc_value_take_nbest_node (GValue* value, gpointer v_object);
gpointer kkc_value_get_nbest_node (const GValue* value);
GType kkc_nbest_node_get_type (void) G_GNUC_CONST;
KkcNbestNode* kkc_nbest_node_new (KkcTrellisNode* node);
KkcNbestNode* kkc_nbest_node_construct (GType object_type, KkcTrellisNode* node);
GType kkc_bigram_decoder_get_type (void) G_GNUC_CONST;
void kkc_bigram_decoder_add_unknown_nodes (KkcBigramDecoder* self, GeeArrayList** trellis, int trellis_length1, const gchar* input, gint* constraint, int constraint_length1);
GeeArrayList** kkc_bigram_decoder_build_trellis (KkcBigramDecoder* self, const gchar* input, gint* constraint, int constraint_length1, int* result_length1);
void kkc_bigram_decoder_forward_search (KkcBigramDecoder* self, GeeArrayList** trellis, int trellis_length1, const gchar* input);
gdouble kkc_bigram_decoder_path_cost (KkcBigramDecoder* self, KkcTrellisNode* pnode, KkcTrellisNode* node, gint endpos);
KkcSegment** kkc_bigram_decoder_backward_search (KkcBigramDecoder* self, GeeArrayList** trellis, int trellis_length1, gint nbest, gdouble max_distance, gdouble min_path_cost, int* result_length1);
KkcBigramDecoder* kkc_bigram_decoder_new (KkcBigramLanguageModel* model);
KkcBigramDecoder* kkc_bigram_decoder_construct (GType object_type, KkcBigramLanguageModel* model);
KkcBigramLanguageModel* kkc_bigram_decoder_get_model (KkcBigramDecoder* self);
gpointer kkc_path_cost_func_ref (gpointer instance);
void kkc_path_cost_func_unref (gpointer instance);
GParamSpec* kkc_param_spec_path_cost_func (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void kkc_value_set_path_cost_func (GValue* value, gpointer v_object);
void kkc_value_take_path_cost_func (GValue* value, gpointer v_object);
gpointer kkc_value_get_path_cost_func (const GValue* value);
GType kkc_path_cost_func_get_type (void) G_GNUC_CONST;
gdouble kkc_path_cost_func_path_cost (KkcPathCostFunc* self, KkcTrigramLanguageModel* model, KkcTrellisNode* pnode, KkcTrellisNode* node);
KkcPathCostFunc* kkc_path_cost_func_construct (GType object_type);
GType kkc_unigram_to_unigram_path_cost_func_get_type (void) G_GNUC_CONST;
KkcUnigramToUnigramPathCostFunc* kkc_unigram_to_unigram_path_cost_func_new (void);
KkcUnigramToUnigramPathCostFunc* kkc_unigram_to_unigram_path_cost_func_construct (GType object_type);
GType kkc_unigram_to_bigram_path_cost_func_get_type (void) G_GNUC_CONST;
KkcUnigramToBigramPathCostFunc* kkc_unigram_to_bigram_path_cost_func_new (void);
KkcUnigramToBigramPathCostFunc* kkc_unigram_to_bigram_path_cost_func_construct (GType object_type);
GType kkc_bigram_to_unigram_path_cost_func_get_type (void) G_GNUC_CONST;
KkcBigramToUnigramPathCostFunc* kkc_bigram_to_unigram_path_cost_func_new (void);
KkcBigramToUnigramPathCostFunc* kkc_bigram_to_unigram_path_cost_func_construct (GType object_type);
GType kkc_bigram_to_bigram_path_cost_func_get_type (void) G_GNUC_CONST;
KkcBigramToBigramPathCostFunc* kkc_bigram_to_bigram_path_cost_func_new (void);
KkcBigramToBigramPathCostFunc* kkc_bigram_to_bigram_path_cost_func_construct (GType object_type);
GType kkc_trigram_decoder_get_type (void) G_GNUC_CONST;
KkcTrigramDecoder* kkc_trigram_decoder_new (KkcTrigramLanguageModel* model);
KkcTrigramDecoder* kkc_trigram_decoder_construct (GType object_type, KkcTrigramLanguageModel* model);
GType kkc_segment_list_get_type (void) G_GNUC_CONST;
void kkc_segment_list_clear (KkcSegmentList* self);
void kkc_segment_list_add (KkcSegmentList* self, KkcSegment* segment);
KkcSegment* kkc_segment_list_get (KkcSegmentList* self, gint index);
gint kkc_segment_list_get_offset (KkcSegmentList* self, gint index);
void kkc_segment_list_set_segments (KkcSegmentList* self, KkcSegment* segment);
gboolean kkc_segment_list_first_segment (KkcSegmentList* self);
void kkc_segment_list_next_segment (KkcSegmentList* self);
void kkc_segment_list_previous_segment (KkcSegmentList* self);
gchar* kkc_segment_list_get_output (KkcSegmentList* self);
gchar* kkc_segment_list_get_input (KkcSegmentList* self);
KkcSegment** kkc_segment_list_to_array (KkcSegmentList* self, int* result_length1);
KkcSegmentList* kkc_segment_list_new (void);
KkcSegmentList* kkc_segment_list_construct (GType object_type);
gint kkc_segment_list_get_cursor_pos (KkcSegmentList* self);
void kkc_segment_list_set_cursor_pos (KkcSegmentList* self, gint value);
gint kkc_segment_list_get_size (KkcSegmentList* self);
KkcSegment* kkc_segment_new (const gchar* input, const gchar* output);
KkcSegment* kkc_segment_construct (GType object_type, const gchar* input, const gchar* output);
const gchar* kkc_segment_get_input (KkcSegment* self);
void kkc_segment_set_input (KkcSegment* self, const gchar* value);
const gchar* kkc_segment_get_output (KkcSegment* self);
void kkc_segment_set_output (KkcSegment* self, const gchar* value);
guint32 kkc_murmur_hash3_32 (guint32 b0, guint32 b1, guint32 seed);
GType kkc_bloom_filter_get_type (void) G_GNUC_CONST;
KkcBloomFilter* kkc_bloom_filter_new (const gchar* filename, GError** error);
KkcBloomFilter* kkc_bloom_filter_construct (GType object_type, const gchar* filename, GError** error);
gboolean kkc_bloom_filter_contains (KkcBloomFilter* self, guint32 b0, guint32 b1);
GType kkc_candidate_list_get_type (void) G_GNUC_CONST;
GType kkc_candidate_get_type (void) G_GNUC_CONST;
KkcCandidate* kkc_candidate_list_get (KkcCandidateList* self, gint index);
void kkc_candidate_list_clear (KkcCandidateList* self);
gboolean kkc_candidate_list_contains (KkcCandidateList* self, KkcCandidate* candidate);
gboolean kkc_candidate_list_add (KkcCandidateList* self, KkcCandidate* candidate);
gboolean kkc_candidate_list_add_all (KkcCandidateList* self, KkcCandidateList* other);
KkcCandidate** kkc_candidate_list_to_array (KkcCandidateList* self, int* result_length1);
gboolean kkc_candidate_list_select_at (KkcCandidateList* self, guint index_in_page);
void kkc_candidate_list_select (KkcCandidateList* self);
KkcCandidateList* kkc_candidate_list_new (guint page_start, guint page_size, gboolean round);
KkcCandidateList* kkc_candidate_list_construct (GType object_type, guint page_start, guint page_size, gboolean round);
gboolean kkc_candidate_list_first (KkcCandidateList* self);
gboolean kkc_candidate_list_next (KkcCandidateList* self);
gboolean kkc_candidate_list_previous (KkcCandidateList* self);
gboolean kkc_candidate_list_cursor_up (KkcCandidateList* self);
gboolean kkc_candidate_list_cursor_down (KkcCandidateList* self);
gboolean kkc_candidate_list_page_up (KkcCandidateList* self);
gboolean kkc_candidate_list_page_down (KkcCandidateList* self);
gint kkc_candidate_list_get_cursor_pos (KkcCandidateList* self);
void kkc_candidate_list_set_cursor_pos (KkcCandidateList* self, gint value);
gint kkc_candidate_list_get_size (KkcCandidateList* self);
guint kkc_candidate_list_get_page_start (KkcCandidateList* self);
void kkc_candidate_list_set_page_start (KkcCandidateList* self, guint value);
guint kkc_candidate_list_get_page_size (KkcCandidateList* self);
void kkc_candidate_list_set_page_size (KkcCandidateList* self, guint value);
gboolean kkc_candidate_list_get_round (KkcCandidateList* self);
void kkc_candidate_list_set_round (KkcCandidateList* self, gboolean value);
gboolean kkc_candidate_list_get_page_visible (KkcCandidateList* self);
gchar* kkc_candidate_to_string (KkcCandidate* self);
KkcCandidate* kkc_candidate_new (const gchar* midasi, gboolean okuri, const gchar* text, const gchar* annotation, const gchar* output);
KkcCandidate* kkc_candidate_construct (GType object_type, const gchar* midasi, gboolean okuri, const gchar* text, const gchar* annotation, const gchar* output);
const gchar* kkc_candidate_get_midasi (KkcCandidate* self);
void kkc_candidate_set_midasi (KkcCandidate* self, const gchar* value);
gboolean kkc_candidate_get_okuri (KkcCandidate* self);
void kkc_candidate_set_okuri (KkcCandidate* self, gboolean value);
const gchar* kkc_candidate_get_text (KkcCandidate* self);
void kkc_candidate_set_text (KkcCandidate* self, const gchar* value);
const gchar* kkc_candidate_get_annotation (KkcCandidate* self);
void kkc_candidate_set_annotation (KkcCandidate* self, const gchar* value);
const gchar* kkc_candidate_get_output (KkcCandidate* self);
void kkc_candidate_set_output (KkcCandidate* self, const gchar* value);
GType kkc_key_event_filter_get_type (void) G_GNUC_CONST;
GType kkc_key_event_get_type (void) G_GNUC_CONST;
KkcKeyEvent* kkc_key_event_filter_filter_key_event (KkcKeyEventFilter* self, KkcKeyEvent* key);
void kkc_key_event_filter_reset (KkcKeyEventFilter* self);
KkcKeyEventFilter* kkc_key_event_filter_construct (GType object_type);
GType kkc_simple_key_event_filter_get_type (void) G_GNUC_CONST;
KkcSimpleKeyEventFilter* kkc_simple_key_event_filter_new (void);
KkcSimpleKeyEventFilter* kkc_simple_key_event_filter_construct (GType object_type);
GType kkc_kana_key_event_filter_get_type (void) G_GNUC_CONST;
KkcKanaKeyEventFilter* kkc_kana_key_event_filter_new (void);
KkcKanaKeyEventFilter* kkc_kana_key_event_filter_construct (GType object_type);
GQuark kkc_key_event_format_error_quark (void);
GType kkc_modifier_type_get_type (void) G_GNUC_CONST;
KkcKeyEvent* kkc_key_event_new_from_string (const gchar* key, GError** error);
KkcKeyEvent* kkc_key_event_construct_from_string (GType object_type, const gchar* key, GError** error);
gchar* kkc_key_event_to_string (KkcKeyEvent* self);
KkcKeyEvent* kkc_key_event_new_from_x_event (guint keyval, guint keycode, KkcModifierType modifiers);
KkcKeyEvent* kkc_key_event_construct_from_x_event (GType object_type, guint keyval, guint keycode, KkcModifierType modifiers);
KkcKeyEvent* kkc_key_event_new (guint keyval, guint keycode, KkcModifierType modifiers);
KkcKeyEvent* kkc_key_event_construct (GType object_type, guint keyval, guint keycode, KkcModifierType modifiers);
const gchar* kkc_key_event_get_name (KkcKeyEvent* self);
void kkc_key_event_set_name (KkcKeyEvent* self, const gchar* value);
gunichar kkc_key_event_get_unicode (KkcKeyEvent* self);
void kkc_key_event_set_unicode (KkcKeyEvent* self, gunichar value);
guint kkc_key_event_get_keyval (KkcKeyEvent* self);
void kkc_key_event_set_keyval (KkcKeyEvent* self, guint value);
guint kkc_key_event_get_keycode (KkcKeyEvent* self);
void kkc_key_event_set_keycode (KkcKeyEvent* self, guint value);
KkcModifierType kkc_key_event_get_modifiers (KkcKeyEvent* self);
void kkc_key_event_set_modifiers (KkcKeyEvent* self, KkcModifierType value);
GType kkc_keymap_command_entry_get_type (void) G_GNUC_CONST;
KkcKeymapCommandEntry* kkc_keymap_command_entry_dup (const KkcKeymapCommandEntry* self);
void kkc_keymap_command_entry_free (KkcKeymapCommandEntry* self);
void kkc_keymap_command_entry_copy (const KkcKeymapCommandEntry* self, KkcKeymapCommandEntry* dest);
void kkc_keymap_command_entry_destroy (KkcKeymapCommandEntry* self);
GType kkc_keymap_entry_get_type (void) G_GNUC_CONST;
KkcKeymapEntry* kkc_keymap_entry_dup (const KkcKeymapEntry* self);
void kkc_keymap_entry_free (KkcKeymapEntry* self);
void kkc_keymap_entry_copy (const KkcKeymapEntry* self, KkcKeymapEntry* dest);
void kkc_keymap_entry_destroy (KkcKeymapEntry* self);
GType kkc_keymap_get_type (void) G_GNUC_CONST;
gchar** kkc_keymap_commands (int* result_length1);
gchar* kkc_keymap_get_command_label (const gchar* command);
KkcKeymapEntry* kkc_keymap_entries (KkcKeymap* self, int* result_length1);
KkcKeymapEntry* kkc_keymap_local_entries (KkcKeymap* self, int* result_length1);
void kkc_keymap_set (KkcKeymap* self, KkcKeyEvent* key, const gchar* command);
gchar* kkc_keymap_lookup_key (KkcKeymap* self, KkcKeyEvent* key);
KkcKeyEvent* kkc_keymap_where_is (KkcKeymap* self, const gchar* command);
KkcKeymap* kkc_keymap_new (void);
KkcKeymap* kkc_keymap_construct (GType object_type);
KkcKeymap* kkc_keymap_get_parent (KkcKeymap* self);
void kkc_keymap_set_parent (KkcKeymap* self, KkcKeymap* value);
GType kkc_keyname_entry_get_type (void) G_GNUC_CONST;
KkcKeynameEntry* kkc_keyname_entry_dup (const KkcKeynameEntry* self);
void kkc_keyname_entry_free (KkcKeynameEntry* self);
void kkc_keyname_entry_copy (const KkcKeynameEntry* self, KkcKeynameEntry* dest);
void kkc_keyname_entry_destroy (KkcKeynameEntry* self);
#define KKC_KEYSYMS_VoidSymbol ((guint) 0xffffff)
#define KKC_KEYSYMS_BackSpace ((guint) 0xff08)
#define KKC_KEYSYMS_Tab ((guint) 0xff09)
#define KKC_KEYSYMS_Linefeed ((guint) 0xff0a)
#define KKC_KEYSYMS_Clear ((guint) 0xff0b)
#define KKC_KEYSYMS_Return ((guint) 0xff0d)
#define KKC_KEYSYMS_Pause ((guint) 0xff13)
#define KKC_KEYSYMS_Scroll_Lock ((guint) 0xff14)
#define KKC_KEYSYMS_Sys_Req ((guint) 0xff15)
#define KKC_KEYSYMS_Escape ((guint) 0xff1b)
#define KKC_KEYSYMS_Delete ((guint) 0xffff)
#define KKC_KEYSYMS_Multi_key ((guint) 0xff20)
#define KKC_KEYSYMS_Codeinput ((guint) 0xff37)
#define KKC_KEYSYMS_SingleCandidate ((guint) 0xff3c)
#define KKC_KEYSYMS_MultipleCandidate ((guint) 0xff3d)
#define KKC_KEYSYMS_PreviousCandidate ((guint) 0xff3e)
#define KKC_KEYSYMS_Kanji ((guint) 0xff21)
#define KKC_KEYSYMS_Muhenkan ((guint) 0xff22)
#define KKC_KEYSYMS_Henkan_Mode ((guint) 0xff23)
#define KKC_KEYSYMS_Henkan ((guint) 0xff23)
#define KKC_KEYSYMS_Romaji ((guint) 0xff24)
#define KKC_KEYSYMS_Hiragana ((guint) 0xff25)
#define KKC_KEYSYMS_Katakana ((guint) 0xff26)
#define KKC_KEYSYMS_Hiragana_Katakana ((guint) 0xff27)
#define KKC_KEYSYMS_Zenkaku ((guint) 0xff28)
#define KKC_KEYSYMS_Hankaku ((guint) 0xff29)
#define KKC_KEYSYMS_Zenkaku_Hankaku ((guint) 0xff2a)
#define KKC_KEYSYMS_Touroku ((guint) 0xff2b)
#define KKC_KEYSYMS_Massyo ((guint) 0xff2c)
#define KKC_KEYSYMS_Kana_Lock ((guint) 0xff2d)
#define KKC_KEYSYMS_Kana_Shift ((guint) 0xff2e)
#define KKC_KEYSYMS_Eisu_Shift ((guint) 0xff2f)
#define KKC_KEYSYMS_Eisu_toggle ((guint) 0xff30)
#define KKC_KEYSYMS_Kanji_Bangou ((guint) 0xff37)
#define KKC_KEYSYMS_Zen_Koho ((guint) 0xff3d)
#define KKC_KEYSYMS_Mae_Koho ((guint) 0xff3e)
#define KKC_KEYSYMS_Home ((guint) 0xff50)
#define KKC_KEYSYMS_Left ((guint) 0xff51)
#define KKC_KEYSYMS_Up ((guint) 0xff52)
#define KKC_KEYSYMS_Right ((guint) 0xff53)
#define KKC_KEYSYMS_Down ((guint) 0xff54)
#define KKC_KEYSYMS_Prior ((guint) 0xff55)
#define KKC_KEYSYMS_Page_Up ((guint) 0xff55)
#define KKC_KEYSYMS_Next ((guint) 0xff56)
#define KKC_KEYSYMS_Page_Down ((guint) 0xff56)
#define KKC_KEYSYMS_End ((guint) 0xff57)
#define KKC_KEYSYMS_Begin ((guint) 0xff58)
#define KKC_KEYSYMS_Select ((guint) 0xff60)
#define KKC_KEYSYMS_Print ((guint) 0xff61)
#define KKC_KEYSYMS_Execute ((guint) 0xff62)
#define KKC_KEYSYMS_Insert ((guint) 0xff63)
#define KKC_KEYSYMS_Undo ((guint) 0xff65)
#define KKC_KEYSYMS_Redo ((guint) 0xff66)
#define KKC_KEYSYMS_Menu ((guint) 0xff67)
#define KKC_KEYSYMS_Find ((guint) 0xff68)
#define KKC_KEYSYMS_Cancel ((guint) 0xff69)
#define KKC_KEYSYMS_Help ((guint) 0xff6a)
#define KKC_KEYSYMS_Break ((guint) 0xff6b)
#define KKC_KEYSYMS_Mode_switch ((guint) 0xff7e)
#define KKC_KEYSYMS_script_switch ((guint) 0xff7e)
#define KKC_KEYSYMS_Num_Lock ((guint) 0xff7f)
#define KKC_KEYSYMS_KP_Space ((guint) 0xff80)
#define KKC_KEYSYMS_KP_Tab ((guint) 0xff89)
#define KKC_KEYSYMS_KP_Enter ((guint) 0xff8d)
#define KKC_KEYSYMS_KP_F1 ((guint) 0xff91)
#define KKC_KEYSYMS_KP_F2 ((guint) 0xff92)
#define KKC_KEYSYMS_KP_F3 ((guint) 0xff93)
#define KKC_KEYSYMS_KP_F4 ((guint) 0xff94)
#define KKC_KEYSYMS_KP_Home ((guint) 0xff95)
#define KKC_KEYSYMS_KP_Left ((guint) 0xff96)
#define KKC_KEYSYMS_KP_Up ((guint) 0xff97)
#define KKC_KEYSYMS_KP_Right ((guint) 0xff98)
#define KKC_KEYSYMS_KP_Down ((guint) 0xff99)
#define KKC_KEYSYMS_KP_Prior ((guint) 0xff9a)
#define KKC_KEYSYMS_KP_Page_Up ((guint) 0xff9a)
#define KKC_KEYSYMS_KP_Next ((guint) 0xff9b)
#define KKC_KEYSYMS_KP_Page_Down ((guint) 0xff9b)
#define KKC_KEYSYMS_KP_End ((guint) 0xff9c)
#define KKC_KEYSYMS_KP_Begin ((guint) 0xff9d)
#define KKC_KEYSYMS_KP_Insert ((guint) 0xff9e)
#define KKC_KEYSYMS_KP_Delete ((guint) 0xff9f)
#define KKC_KEYSYMS_KP_Equal ((guint) 0xffbd)
#define KKC_KEYSYMS_KP_Multiply ((guint) 0xffaa)
#define KKC_KEYSYMS_KP_Add ((guint) 0xffab)
#define KKC_KEYSYMS_KP_Separator ((guint) 0xffac)
#define KKC_KEYSYMS_KP_Subtract ((guint) 0xffad)
#define KKC_KEYSYMS_KP_Decimal ((guint) 0xffae)
#define KKC_KEYSYMS_KP_Divide ((guint) 0xffaf)
#define KKC_KEYSYMS_KP_0 ((guint) 0xffb0)
#define KKC_KEYSYMS_KP_1 ((guint) 0xffb1)
#define KKC_KEYSYMS_KP_2 ((guint) 0xffb2)
#define KKC_KEYSYMS_KP_3 ((guint) 0xffb3)
#define KKC_KEYSYMS_KP_4 ((guint) 0xffb4)
#define KKC_KEYSYMS_KP_5 ((guint) 0xffb5)
#define KKC_KEYSYMS_KP_6 ((guint) 0xffb6)
#define KKC_KEYSYMS_KP_7 ((guint) 0xffb7)
#define KKC_KEYSYMS_KP_8 ((guint) 0xffb8)
#define KKC_KEYSYMS_KP_9 ((guint) 0xffb9)
#define KKC_KEYSYMS_F1 ((guint) 0xffbe)
#define KKC_KEYSYMS_F2 ((guint) 0xffbf)
#define KKC_KEYSYMS_F3 ((guint) 0xffc0)
#define KKC_KEYSYMS_F4 ((guint) 0xffc1)
#define KKC_KEYSYMS_F5 ((guint) 0xffc2)
#define KKC_KEYSYMS_F6 ((guint) 0xffc3)
#define KKC_KEYSYMS_F7 ((guint) 0xffc4)
#define KKC_KEYSYMS_F8 ((guint) 0xffc5)
#define KKC_KEYSYMS_F9 ((guint) 0xffc6)
#define KKC_KEYSYMS_F10 ((guint) 0xffc7)
#define KKC_KEYSYMS_F11 ((guint) 0xffc8)
#define KKC_KEYSYMS_L1 ((guint) 0xffc8)
#define KKC_KEYSYMS_F12 ((guint) 0xffc9)
#define KKC_KEYSYMS_L2 ((guint) 0xffc9)
#define KKC_KEYSYMS_F13 ((guint) 0xffca)
#define KKC_KEYSYMS_L3 ((guint) 0xffca)
#define KKC_KEYSYMS_F14 ((guint) 0xffcb)
#define KKC_KEYSYMS_L4 ((guint) 0xffcb)
#define KKC_KEYSYMS_F15 ((guint) 0xffcc)
#define KKC_KEYSYMS_L5 ((guint) 0xffcc)
#define KKC_KEYSYMS_F16 ((guint) 0xffcd)
#define KKC_KEYSYMS_L6 ((guint) 0xffcd)
#define KKC_KEYSYMS_F17 ((guint) 0xffce)
#define KKC_KEYSYMS_L7 ((guint) 0xffce)
#define KKC_KEYSYMS_F18 ((guint) 0xffcf)
#define KKC_KEYSYMS_L8 ((guint) 0xffcf)
#define KKC_KEYSYMS_F19 ((guint) 0xffd0)
#define KKC_KEYSYMS_L9 ((guint) 0xffd0)
#define KKC_KEYSYMS_F20 ((guint) 0xffd1)
#define KKC_KEYSYMS_L10 ((guint) 0xffd1)
#define KKC_KEYSYMS_F21 ((guint) 0xffd2)
#define KKC_KEYSYMS_R1 ((guint) 0xffd2)
#define KKC_KEYSYMS_F22 ((guint) 0xffd3)
#define KKC_KEYSYMS_R2 ((guint) 0xffd3)
#define KKC_KEYSYMS_F23 ((guint) 0xffd4)
#define KKC_KEYSYMS_R3 ((guint) 0xffd4)
#define KKC_KEYSYMS_F24 ((guint) 0xffd5)
#define KKC_KEYSYMS_R4 ((guint) 0xffd5)
#define KKC_KEYSYMS_F25 ((guint) 0xffd6)
#define KKC_KEYSYMS_R5 ((guint) 0xffd6)
#define KKC_KEYSYMS_F26 ((guint) 0xffd7)
#define KKC_KEYSYMS_R6 ((guint) 0xffd7)
#define KKC_KEYSYMS_F27 ((guint) 0xffd8)
#define KKC_KEYSYMS_R7 ((guint) 0xffd8)
#define KKC_KEYSYMS_F28 ((guint) 0xffd9)
#define KKC_KEYSYMS_R8 ((guint) 0xffd9)
#define KKC_KEYSYMS_F29 ((guint) 0xffda)
#define KKC_KEYSYMS_R9 ((guint) 0xffda)
#define KKC_KEYSYMS_F30 ((guint) 0xffdb)
#define KKC_KEYSYMS_R10 ((guint) 0xffdb)
#define KKC_KEYSYMS_F31 ((guint) 0xffdc)
#define KKC_KEYSYMS_R11 ((guint) 0xffdc)
#define KKC_KEYSYMS_F32 ((guint) 0xffdd)
#define KKC_KEYSYMS_R12 ((guint) 0xffdd)
#define KKC_KEYSYMS_F33 ((guint) 0xffde)
#define KKC_KEYSYMS_R13 ((guint) 0xffde)
#define KKC_KEYSYMS_F34 ((guint) 0xffdf)
#define KKC_KEYSYMS_R14 ((guint) 0xffdf)
#define KKC_KEYSYMS_F35 ((guint) 0xffe0)
#define KKC_KEYSYMS_R15 ((guint) 0xffe0)
#define KKC_KEYSYMS_Shift_L ((guint) 0xffe1)
#define KKC_KEYSYMS_Shift_R ((guint) 0xffe2)
#define KKC_KEYSYMS_Control_L ((guint) 0xffe3)
#define KKC_KEYSYMS_Control_R ((guint) 0xffe4)
#define KKC_KEYSYMS_Caps_Lock ((guint) 0xffe5)
#define KKC_KEYSYMS_Shift_Lock ((guint) 0xffe6)
#define KKC_KEYSYMS_Meta_L ((guint) 0xffe7)
#define KKC_KEYSYMS_Meta_R ((guint) 0xffe8)
#define KKC_KEYSYMS_Alt_L ((guint) 0xffe9)
#define KKC_KEYSYMS_Alt_R ((guint) 0xffea)
#define KKC_KEYSYMS_Super_L ((guint) 0xffeb)
#define KKC_KEYSYMS_Super_R ((guint) 0xffec)
#define KKC_KEYSYMS_Hyper_L ((guint) 0xffed)
#define KKC_KEYSYMS_Hyper_R ((guint) 0xffee)
#define KKC_KEYSYMS_ISO_Lock ((guint) 0xfe01)
#define KKC_KEYSYMS_ISO_Level2_Latch ((guint) 0xfe02)
#define KKC_KEYSYMS_ISO_Level3_Shift ((guint) 0xfe03)
#define KKC_KEYSYMS_ISO_Level3_Latch ((guint) 0xfe04)
#define KKC_KEYSYMS_ISO_Level3_Lock ((guint) 0xfe05)
#define KKC_KEYSYMS_ISO_Level5_Shift ((guint) 0xfe11)
#define KKC_KEYSYMS_ISO_Level5_Latch ((guint) 0xfe12)
#define KKC_KEYSYMS_ISO_Level5_Lock ((guint) 0xfe13)
#define KKC_KEYSYMS_ISO_Group_Shift ((guint) 0xff7e)
#define KKC_KEYSYMS_ISO_Group_Latch ((guint) 0xfe06)
#define KKC_KEYSYMS_ISO_Group_Lock ((guint) 0xfe07)
#define KKC_KEYSYMS_ISO_Next_Group ((guint) 0xfe08)
#define KKC_KEYSYMS_ISO_Next_Group_Lock ((guint) 0xfe09)
#define KKC_KEYSYMS_ISO_Prev_Group ((guint) 0xfe0a)
#define KKC_KEYSYMS_ISO_Prev_Group_Lock ((guint) 0xfe0b)
#define KKC_KEYSYMS_ISO_First_Group ((guint) 0xfe0c)
#define KKC_KEYSYMS_ISO_First_Group_Lock ((guint) 0xfe0d)
#define KKC_KEYSYMS_ISO_Last_Group ((guint) 0xfe0e)
#define KKC_KEYSYMS_ISO_Last_Group_Lock ((guint) 0xfe0f)
#define KKC_KEYSYMS_ISO_Left_Tab ((guint) 0xfe20)
#define KKC_KEYSYMS_ISO_Move_Line_Up ((guint) 0xfe21)
#define KKC_KEYSYMS_ISO_Move_Line_Down ((guint) 0xfe22)
#define KKC_KEYSYMS_ISO_Partial_Line_Up ((guint) 0xfe23)
#define KKC_KEYSYMS_ISO_Partial_Line_Down ((guint) 0xfe24)
#define KKC_KEYSYMS_ISO_Partial_Space_Left ((guint) 0xfe25)
#define KKC_KEYSYMS_ISO_Partial_Space_Right ((guint) 0xfe26)
#define KKC_KEYSYMS_ISO_Set_Margin_Left ((guint) 0xfe27)
#define KKC_KEYSYMS_ISO_Set_Margin_Right ((guint) 0xfe28)
#define KKC_KEYSYMS_ISO_Release_Margin_Left ((guint) 0xfe29)
#define KKC_KEYSYMS_ISO_Release_Margin_Right ((guint) 0xfe2a)
#define KKC_KEYSYMS_ISO_Release_Both_Margins ((guint) 0xfe2b)
#define KKC_KEYSYMS_ISO_Fast_Cursor_Left ((guint) 0xfe2c)
#define KKC_KEYSYMS_ISO_Fast_Cursor_Right ((guint) 0xfe2d)
#define KKC_KEYSYMS_ISO_Fast_Cursor_Up ((guint) 0xfe2e)
#define KKC_KEYSYMS_ISO_Fast_Cursor_Down ((guint) 0xfe2f)
#define KKC_KEYSYMS_ISO_Continuous_Underline ((guint) 0xfe30)
#define KKC_KEYSYMS_ISO_Discontinuous_Underline ((guint) 0xfe31)
#define KKC_KEYSYMS_ISO_Emphasize ((guint) 0xfe32)
#define KKC_KEYSYMS_ISO_Center_Object ((guint) 0xfe33)
#define KKC_KEYSYMS_ISO_Enter ((guint) 0xfe34)
#define KKC_KEYSYMS_dead_grave ((guint) 0xfe50)
#define KKC_KEYSYMS_dead_acute ((guint) 0xfe51)
#define KKC_KEYSYMS_dead_circumflex ((guint) 0xfe52)
#define KKC_KEYSYMS_dead_tilde ((guint) 0xfe53)
#define KKC_KEYSYMS_dead_perispomeni ((guint) 0xfe53)
#define KKC_KEYSYMS_dead_macron ((guint) 0xfe54)
#define KKC_KEYSYMS_dead_breve ((guint) 0xfe55)
#define KKC_KEYSYMS_dead_abovedot ((guint) 0xfe56)
#define KKC_KEYSYMS_dead_diaeresis ((guint) 0xfe57)
#define KKC_KEYSYMS_dead_abovering ((guint) 0xfe58)
#define KKC_KEYSYMS_dead_doubleacute ((guint) 0xfe59)
#define KKC_KEYSYMS_dead_caron ((guint) 0xfe5a)
#define KKC_KEYSYMS_dead_cedilla ((guint) 0xfe5b)
#define KKC_KEYSYMS_dead_ogonek ((guint) 0xfe5c)
#define KKC_KEYSYMS_dead_iota ((guint) 0xfe5d)
#define KKC_KEYSYMS_dead_voiced_sound ((guint) 0xfe5e)
#define KKC_KEYSYMS_dead_semivoiced_sound ((guint) 0xfe5f)
#define KKC_KEYSYMS_dead_belowdot ((guint) 0xfe60)
#define KKC_KEYSYMS_dead_hook ((guint) 0xfe61)
#define KKC_KEYSYMS_dead_horn ((guint) 0xfe62)
#define KKC_KEYSYMS_dead_stroke ((guint) 0xfe63)
#define KKC_KEYSYMS_dead_abovecomma ((guint) 0xfe64)
#define KKC_KEYSYMS_dead_psili ((guint) 0xfe64)
#define KKC_KEYSYMS_dead_abovereversedcomma ((guint) 0xfe65)
#define KKC_KEYSYMS_dead_dasia ((guint) 0xfe65)
#define KKC_KEYSYMS_dead_doublegrave ((guint) 0xfe66)
#define KKC_KEYSYMS_dead_belowring ((guint) 0xfe67)
#define KKC_KEYSYMS_dead_belowmacron ((guint) 0xfe68)
#define KKC_KEYSYMS_dead_belowcircumflex ((guint) 0xfe69)
#define KKC_KEYSYMS_dead_belowtilde ((guint) 0xfe6a)
#define KKC_KEYSYMS_dead_belowbreve ((guint) 0xfe6b)
#define KKC_KEYSYMS_dead_belowdiaeresis ((guint) 0xfe6c)
#define KKC_KEYSYMS_dead_invertedbreve ((guint) 0xfe6d)
#define KKC_KEYSYMS_dead_belowcomma ((guint) 0xfe6e)
#define KKC_KEYSYMS_dead_currency ((guint) 0xfe6f)
#define KKC_KEYSYMS_dead_a ((guint) 0xfe80)
#define KKC_KEYSYMS_dead_A ((guint) 0xfe81)
#define KKC_KEYSYMS_dead_e ((guint) 0xfe82)
#define KKC_KEYSYMS_dead_E ((guint) 0xfe83)
#define KKC_KEYSYMS_dead_i ((guint) 0xfe84)
#define KKC_KEYSYMS_dead_I ((guint) 0xfe85)
#define KKC_KEYSYMS_dead_o ((guint) 0xfe86)
#define KKC_KEYSYMS_dead_O ((guint) 0xfe87)
#define KKC_KEYSYMS_dead_u ((guint) 0xfe88)
#define KKC_KEYSYMS_dead_U ((guint) 0xfe89)
#define KKC_KEYSYMS_dead_small_schwa ((guint) 0xfe8a)
#define KKC_KEYSYMS_dead_capital_schwa ((guint) 0xfe8b)
#define KKC_KEYSYMS_First_Virtual_Screen ((guint) 0xfed0)
#define KKC_KEYSYMS_Prev_Virtual_Screen ((guint) 0xfed1)
#define KKC_KEYSYMS_Next_Virtual_Screen ((guint) 0xfed2)
#define KKC_KEYSYMS_Last_Virtual_Screen ((guint) 0xfed4)
#define KKC_KEYSYMS_Terminate_Server ((guint) 0xfed5)
#define KKC_KEYSYMS_AccessX_Enable ((guint) 0xfe70)
#define KKC_KEYSYMS_AccessX_Feedback_Enable ((guint) 0xfe71)
#define KKC_KEYSYMS_RepeatKeys_Enable ((guint) 0xfe72)
#define KKC_KEYSYMS_SlowKeys_Enable ((guint) 0xfe73)
#define KKC_KEYSYMS_BounceKeys_Enable ((guint) 0xfe74)
#define KKC_KEYSYMS_StickyKeys_Enable ((guint) 0xfe75)
#define KKC_KEYSYMS_MouseKeys_Enable ((guint) 0xfe76)
#define KKC_KEYSYMS_MouseKeys_Accel_Enable ((guint) 0xfe77)
#define KKC_KEYSYMS_Overlay1_Enable ((guint) 0xfe78)
#define KKC_KEYSYMS_Overlay2_Enable ((guint) 0xfe79)
#define KKC_KEYSYMS_AudibleBell_Enable ((guint) 0xfe7a)
#define KKC_KEYSYMS_Pointer_Left ((guint) 0xfee0)
#define KKC_KEYSYMS_Pointer_Right ((guint) 0xfee1)
#define KKC_KEYSYMS_Pointer_Up ((guint) 0xfee2)
#define KKC_KEYSYMS_Pointer_Down ((guint) 0xfee3)
#define KKC_KEYSYMS_Pointer_UpLeft ((guint) 0xfee4)
#define KKC_KEYSYMS_Pointer_UpRight ((guint) 0xfee5)
#define KKC_KEYSYMS_Pointer_DownLeft ((guint) 0xfee6)
#define KKC_KEYSYMS_Pointer_DownRight ((guint) 0xfee7)
#define KKC_KEYSYMS_Pointer_Button_Dflt ((guint) 0xfee8)
#define KKC_KEYSYMS_Pointer_Button1 ((guint) 0xfee9)
#define KKC_KEYSYMS_Pointer_Button2 ((guint) 0xfeea)
#define KKC_KEYSYMS_Pointer_Button3 ((guint) 0xfeeb)
#define KKC_KEYSYMS_Pointer_Button4 ((guint) 0xfeec)
#define KKC_KEYSYMS_Pointer_Button5 ((guint) 0xfeed)
#define KKC_KEYSYMS_Pointer_DblClick_Dflt ((guint) 0xfeee)
#define KKC_KEYSYMS_Pointer_DblClick1 ((guint) 0xfeef)
#define KKC_KEYSYMS_Pointer_DblClick2 ((guint) 0xfef0)
#define KKC_KEYSYMS_Pointer_DblClick3 ((guint) 0xfef1)
#define KKC_KEYSYMS_Pointer_DblClick4 ((guint) 0xfef2)
#define KKC_KEYSYMS_Pointer_DblClick5 ((guint) 0xfef3)
#define KKC_KEYSYMS_Pointer_Drag_Dflt ((guint) 0xfef4)
#define KKC_KEYSYMS_Pointer_Drag1 ((guint) 0xfef5)
#define KKC_KEYSYMS_Pointer_Drag2 ((guint) 0xfef6)
#define KKC_KEYSYMS_Pointer_Drag3 ((guint) 0xfef7)
#define KKC_KEYSYMS_Pointer_Drag4 ((guint) 0xfef8)
#define KKC_KEYSYMS_Pointer_Drag5 ((guint) 0xfefd)
#define KKC_KEYSYMS_Pointer_EnableKeys ((guint) 0xfef9)
#define KKC_KEYSYMS_Pointer_Accelerate ((guint) 0xfefa)
#define KKC_KEYSYMS_Pointer_DfltBtnNext ((guint) 0xfefb)
#define KKC_KEYSYMS_Pointer_DfltBtnPrev ((guint) 0xfefc)
#define KKC_KEYSYMS_3270_Duplicate ((guint) 0xfd01)
#define KKC_KEYSYMS_3270_FieldMark ((guint) 0xfd02)
#define KKC_KEYSYMS_3270_Right2 ((guint) 0xfd03)
#define KKC_KEYSYMS_3270_Left2 ((guint) 0xfd04)
#define KKC_KEYSYMS_3270_BackTab ((guint) 0xfd05)
#define KKC_KEYSYMS_3270_EraseEOF ((guint) 0xfd06)
#define KKC_KEYSYMS_3270_EraseInput ((guint) 0xfd07)
#define KKC_KEYSYMS_3270_Reset ((guint) 0xfd08)
#define KKC_KEYSYMS_3270_Quit ((guint) 0xfd09)
#define KKC_KEYSYMS_3270_PA1 ((guint) 0xfd0a)
#define KKC_KEYSYMS_3270_PA2 ((guint) 0xfd0b)
#define KKC_KEYSYMS_3270_PA3 ((guint) 0xfd0c)
#define KKC_KEYSYMS_3270_Test ((guint) 0xfd0d)
#define KKC_KEYSYMS_3270_Attn ((guint) 0xfd0e)
#define KKC_KEYSYMS_3270_CursorBlink ((guint) 0xfd0f)
#define KKC_KEYSYMS_3270_AltCursor ((guint) 0xfd10)
#define KKC_KEYSYMS_3270_KeyClick ((guint) 0xfd11)
#define KKC_KEYSYMS_3270_Jump ((guint) 0xfd12)
#define KKC_KEYSYMS_3270_Ident ((guint) 0xfd13)
#define KKC_KEYSYMS_3270_Rule ((guint) 0xfd14)
#define KKC_KEYSYMS_3270_Copy ((guint) 0xfd15)
#define KKC_KEYSYMS_3270_Play ((guint) 0xfd16)
#define KKC_KEYSYMS_3270_Setup ((guint) 0xfd17)
#define KKC_KEYSYMS_3270_Record ((guint) 0xfd18)
#define KKC_KEYSYMS_3270_ChangeScreen ((guint) 0xfd19)
#define KKC_KEYSYMS_3270_DeleteWord ((guint) 0xfd1a)
#define KKC_KEYSYMS_3270_ExSelect ((guint) 0xfd1b)
#define KKC_KEYSYMS_3270_CursorSelect ((guint) 0xfd1c)
#define KKC_KEYSYMS_3270_PrintScreen ((guint) 0xfd1d)
#define KKC_KEYSYMS_3270_Enter ((guint) 0xfd1e)
#define KKC_KEYSYMS_space ((guint) 0x0020)
#define KKC_KEYSYMS_exclam ((guint) 0x0021)
#define KKC_KEYSYMS_quotedbl ((guint) 0x0022)
#define KKC_KEYSYMS_numbersign ((guint) 0x0023)
#define KKC_KEYSYMS_dollar ((guint) 0x0024)
#define KKC_KEYSYMS_percent ((guint) 0x0025)
#define KKC_KEYSYMS_ampersand ((guint) 0x0026)
#define KKC_KEYSYMS_apostrophe ((guint) 0x0027)
#define KKC_KEYSYMS_quoteright ((guint) 0x0027)
#define KKC_KEYSYMS_parenleft ((guint) 0x0028)
#define KKC_KEYSYMS_parenright ((guint) 0x0029)
#define KKC_KEYSYMS_asterisk ((guint) 0x002a)
#define KKC_KEYSYMS_plus ((guint) 0x002b)
#define KKC_KEYSYMS_comma ((guint) 0x002c)
#define KKC_KEYSYMS_minus ((guint) 0x002d)
#define KKC_KEYSYMS_period ((guint) 0x002e)
#define KKC_KEYSYMS_slash ((guint) 0x002f)
#define KKC_KEYSYMS_0 ((guint) 0x0030)
#define KKC_KEYSYMS_1 ((guint) 0x0031)
#define KKC_KEYSYMS_2 ((guint) 0x0032)
#define KKC_KEYSYMS_3 ((guint) 0x0033)
#define KKC_KEYSYMS_4 ((guint) 0x0034)
#define KKC_KEYSYMS_5 ((guint) 0x0035)
#define KKC_KEYSYMS_6 ((guint) 0x0036)
#define KKC_KEYSYMS_7 ((guint) 0x0037)
#define KKC_KEYSYMS_8 ((guint) 0x0038)
#define KKC_KEYSYMS_9 ((guint) 0x0039)
#define KKC_KEYSYMS_colon ((guint) 0x003a)
#define KKC_KEYSYMS_semicolon ((guint) 0x003b)
#define KKC_KEYSYMS_less ((guint) 0x003c)
#define KKC_KEYSYMS_equal ((guint) 0x003d)
#define KKC_KEYSYMS_greater ((guint) 0x003e)
#define KKC_KEYSYMS_question ((guint) 0x003f)
#define KKC_KEYSYMS_at ((guint) 0x0040)
#define KKC_KEYSYMS_A ((guint) 0x0041)
#define KKC_KEYSYMS_B ((guint) 0x0042)
#define KKC_KEYSYMS_C ((guint) 0x0043)
#define KKC_KEYSYMS_D ((guint) 0x0044)
#define KKC_KEYSYMS_E ((guint) 0x0045)
#define KKC_KEYSYMS_F ((guint) 0x0046)
#define KKC_KEYSYMS_G ((guint) 0x0047)
#define KKC_KEYSYMS_H ((guint) 0x0048)
#define KKC_KEYSYMS_I ((guint) 0x0049)
#define KKC_KEYSYMS_J ((guint) 0x004a)
#define KKC_KEYSYMS_K ((guint) 0x004b)
#define KKC_KEYSYMS_L ((guint) 0x004c)
#define KKC_KEYSYMS_M ((guint) 0x004d)
#define KKC_KEYSYMS_N ((guint) 0x004e)
#define KKC_KEYSYMS_O ((guint) 0x004f)
#define KKC_KEYSYMS_P ((guint) 0x0050)
#define KKC_KEYSYMS_Q ((guint) 0x0051)
#define KKC_KEYSYMS_R ((guint) 0x0052)
#define KKC_KEYSYMS_S ((guint) 0x0053)
#define KKC_KEYSYMS_T ((guint) 0x0054)
#define KKC_KEYSYMS_U ((guint) 0x0055)
#define KKC_KEYSYMS_V ((guint) 0x0056)
#define KKC_KEYSYMS_W ((guint) 0x0057)
#define KKC_KEYSYMS_X ((guint) 0x0058)
#define KKC_KEYSYMS_Y ((guint) 0x0059)
#define KKC_KEYSYMS_Z ((guint) 0x005a)
#define KKC_KEYSYMS_bracketleft ((guint) 0x005b)
#define KKC_KEYSYMS_backslash ((guint) 0x005c)
#define KKC_KEYSYMS_bracketright ((guint) 0x005d)
#define KKC_KEYSYMS_asciicircum ((guint) 0x005e)
#define KKC_KEYSYMS_underscore ((guint) 0x005f)
#define KKC_KEYSYMS_grave ((guint) 0x0060)
#define KKC_KEYSYMS_quoteleft ((guint) 0x0060)
#define KKC_KEYSYMS_a ((guint) 0x0061)
#define KKC_KEYSYMS_b ((guint) 0x0062)
#define KKC_KEYSYMS_c ((guint) 0x0063)
#define KKC_KEYSYMS_d ((guint) 0x0064)
#define KKC_KEYSYMS_e ((guint) 0x0065)
#define KKC_KEYSYMS_f ((guint) 0x0066)
#define KKC_KEYSYMS_g ((guint) 0x0067)
#define KKC_KEYSYMS_h ((guint) 0x0068)
#define KKC_KEYSYMS_i ((guint) 0x0069)
#define KKC_KEYSYMS_j ((guint) 0x006a)
#define KKC_KEYSYMS_k ((guint) 0x006b)
#define KKC_KEYSYMS_l ((guint) 0x006c)
#define KKC_KEYSYMS_m ((guint) 0x006d)
#define KKC_KEYSYMS_n ((guint) 0x006e)
#define KKC_KEYSYMS_o ((guint) 0x006f)
#define KKC_KEYSYMS_p ((guint) 0x0070)
#define KKC_KEYSYMS_q ((guint) 0x0071)
#define KKC_KEYSYMS_r ((guint) 0x0072)
#define KKC_KEYSYMS_s ((guint) 0x0073)
#define KKC_KEYSYMS_t ((guint) 0x0074)
#define KKC_KEYSYMS_u ((guint) 0x0075)
#define KKC_KEYSYMS_v ((guint) 0x0076)
#define KKC_KEYSYMS_w ((guint) 0x0077)
#define KKC_KEYSYMS_x ((guint) 0x0078)
#define KKC_KEYSYMS_y ((guint) 0x0079)
#define KKC_KEYSYMS_z ((guint) 0x007a)
#define KKC_KEYSYMS_braceleft ((guint) 0x007b)
#define KKC_KEYSYMS_bar ((guint) 0x007c)
#define KKC_KEYSYMS_braceright ((guint) 0x007d)
#define KKC_KEYSYMS_asciitilde ((guint) 0x007e)
#define KKC_KEYSYMS_nobreakspace ((guint) 0x00a0)
#define KKC_KEYSYMS_exclamdown ((guint) 0x00a1)
#define KKC_KEYSYMS_cent ((guint) 0x00a2)
#define KKC_KEYSYMS_sterling ((guint) 0x00a3)
#define KKC_KEYSYMS_currency ((guint) 0x00a4)
#define KKC_KEYSYMS_yen ((guint) 0x00a5)
#define KKC_KEYSYMS_brokenbar ((guint) 0x00a6)
#define KKC_KEYSYMS_section ((guint) 0x00a7)
#define KKC_KEYSYMS_diaeresis ((guint) 0x00a8)
#define KKC_KEYSYMS_copyright ((guint) 0x00a9)
#define KKC_KEYSYMS_ordfeminine ((guint) 0x00aa)
#define KKC_KEYSYMS_guillemotleft ((guint) 0x00ab)
#define KKC_KEYSYMS_notsign ((guint) 0x00ac)
#define KKC_KEYSYMS_hyphen ((guint) 0x00ad)
#define KKC_KEYSYMS_registered ((guint) 0x00ae)
#define KKC_KEYSYMS_macron ((guint) 0x00af)
#define KKC_KEYSYMS_degree ((guint) 0x00b0)
#define KKC_KEYSYMS_plusminus ((guint) 0x00b1)
#define KKC_KEYSYMS_twosuperior ((guint) 0x00b2)
#define KKC_KEYSYMS_threesuperior ((guint) 0x00b3)
#define KKC_KEYSYMS_acute ((guint) 0x00b4)
#define KKC_KEYSYMS_mu ((guint) 0x00b5)
#define KKC_KEYSYMS_paragraph ((guint) 0x00b6)
#define KKC_KEYSYMS_periodcentered ((guint) 0x00b7)
#define KKC_KEYSYMS_cedilla ((guint) 0x00b8)
#define KKC_KEYSYMS_onesuperior ((guint) 0x00b9)
#define KKC_KEYSYMS_masculine ((guint) 0x00ba)
#define KKC_KEYSYMS_guillemotright ((guint) 0x00bb)
#define KKC_KEYSYMS_onequarter ((guint) 0x00bc)
#define KKC_KEYSYMS_onehalf ((guint) 0x00bd)
#define KKC_KEYSYMS_threequarters ((guint) 0x00be)
#define KKC_KEYSYMS_questiondown ((guint) 0x00bf)
#define KKC_KEYSYMS_Agrave ((guint) 0x00c0)
#define KKC_KEYSYMS_Aacute ((guint) 0x00c1)
#define KKC_KEYSYMS_Acircumflex ((guint) 0x00c2)
#define KKC_KEYSYMS_Atilde ((guint) 0x00c3)
#define KKC_KEYSYMS_Adiaeresis ((guint) 0x00c4)
#define KKC_KEYSYMS_Aring ((guint) 0x00c5)
#define KKC_KEYSYMS_AE ((guint) 0x00c6)
#define KKC_KEYSYMS_Ccedilla ((guint) 0x00c7)
#define KKC_KEYSYMS_Egrave ((guint) 0x00c8)
#define KKC_KEYSYMS_Eacute ((guint) 0x00c9)
#define KKC_KEYSYMS_Ecircumflex ((guint) 0x00ca)
#define KKC_KEYSYMS_Ediaeresis ((guint) 0x00cb)
#define KKC_KEYSYMS_Igrave ((guint) 0x00cc)
#define KKC_KEYSYMS_Iacute ((guint) 0x00cd)
#define KKC_KEYSYMS_Icircumflex ((guint) 0x00ce)
#define KKC_KEYSYMS_Idiaeresis ((guint) 0x00cf)
#define KKC_KEYSYMS_ETH ((guint) 0x00d0)
#define KKC_KEYSYMS_Eth ((guint) 0x00d0)
#define KKC_KEYSYMS_Ntilde ((guint) 0x00d1)
#define KKC_KEYSYMS_Ograve ((guint) 0x00d2)
#define KKC_KEYSYMS_Oacute ((guint) 0x00d3)
#define KKC_KEYSYMS_Ocircumflex ((guint) 0x00d4)
#define KKC_KEYSYMS_Otilde ((guint) 0x00d5)
#define KKC_KEYSYMS_Odiaeresis ((guint) 0x00d6)
#define KKC_KEYSYMS_multiply ((guint) 0x00d7)
#define KKC_KEYSYMS_Oslash ((guint) 0x00d8)
#define KKC_KEYSYMS_Ooblique ((guint) 0x00d8)
#define KKC_KEYSYMS_Ugrave ((guint) 0x00d9)
#define KKC_KEYSYMS_Uacute ((guint) 0x00da)
#define KKC_KEYSYMS_Ucircumflex ((guint) 0x00db)
#define KKC_KEYSYMS_Udiaeresis ((guint) 0x00dc)
#define KKC_KEYSYMS_Yacute ((guint) 0x00dd)
#define KKC_KEYSYMS_THORN ((guint) 0x00de)
#define KKC_KEYSYMS_Thorn ((guint) 0x00de)
#define KKC_KEYSYMS_ssharp ((guint) 0x00df)
#define KKC_KEYSYMS_agrave ((guint) 0x00e0)
#define KKC_KEYSYMS_aacute ((guint) 0x00e1)
#define KKC_KEYSYMS_acircumflex ((guint) 0x00e2)
#define KKC_KEYSYMS_atilde ((guint) 0x00e3)
#define KKC_KEYSYMS_adiaeresis ((guint) 0x00e4)
#define KKC_KEYSYMS_aring ((guint) 0x00e5)
#define KKC_KEYSYMS_ae ((guint) 0x00e6)
#define KKC_KEYSYMS_ccedilla ((guint) 0x00e7)
#define KKC_KEYSYMS_egrave ((guint) 0x00e8)
#define KKC_KEYSYMS_eacute ((guint) 0x00e9)
#define KKC_KEYSYMS_ecircumflex ((guint) 0x00ea)
#define KKC_KEYSYMS_ediaeresis ((guint) 0x00eb)
#define KKC_KEYSYMS_igrave ((guint) 0x00ec)
#define KKC_KEYSYMS_iacute ((guint) 0x00ed)
#define KKC_KEYSYMS_icircumflex ((guint) 0x00ee)
#define KKC_KEYSYMS_idiaeresis ((guint) 0x00ef)
#define KKC_KEYSYMS_eth ((guint) 0x00f0)
#define KKC_KEYSYMS_ntilde ((guint) 0x00f1)
#define KKC_KEYSYMS_ograve ((guint) 0x00f2)
#define KKC_KEYSYMS_oacute ((guint) 0x00f3)
#define KKC_KEYSYMS_ocircumflex ((guint) 0x00f4)
#define KKC_KEYSYMS_otilde ((guint) 0x00f5)
#define KKC_KEYSYMS_odiaeresis ((guint) 0x00f6)
#define KKC_KEYSYMS_division ((guint) 0x00f7)
#define KKC_KEYSYMS_oslash ((guint) 0x00f8)
#define KKC_KEYSYMS_ooblique ((guint) 0x00f8)
#define KKC_KEYSYMS_ugrave ((guint) 0x00f9)
#define KKC_KEYSYMS_uacute ((guint) 0x00fa)
#define KKC_KEYSYMS_ucircumflex ((guint) 0x00fb)
#define KKC_KEYSYMS_udiaeresis ((guint) 0x00fc)
#define KKC_KEYSYMS_yacute ((guint) 0x00fd)
#define KKC_KEYSYMS_thorn ((guint) 0x00fe)
#define KKC_KEYSYMS_ydiaeresis ((guint) 0x00ff)
#define KKC_KEYSYMS_Aogonek ((guint) 0x01a1)
#define KKC_KEYSYMS_breve ((guint) 0x01a2)
#define KKC_KEYSYMS_Lstroke ((guint) 0x01a3)
#define KKC_KEYSYMS_Lcaron ((guint) 0x01a5)
#define KKC_KEYSYMS_Sacute ((guint) 0x01a6)
#define KKC_KEYSYMS_Scaron ((guint) 0x01a9)
#define KKC_KEYSYMS_Scedilla ((guint) 0x01aa)
#define KKC_KEYSYMS_Tcaron ((guint) 0x01ab)
#define KKC_KEYSYMS_Zacute ((guint) 0x01ac)
#define KKC_KEYSYMS_Zcaron ((guint) 0x01ae)
#define KKC_KEYSYMS_Zabovedot ((guint) 0x01af)
#define KKC_KEYSYMS_aogonek ((guint) 0x01b1)
#define KKC_KEYSYMS_ogonek ((guint) 0x01b2)
#define KKC_KEYSYMS_lstroke ((guint) 0x01b3)
#define KKC_KEYSYMS_lcaron ((guint) 0x01b5)
#define KKC_KEYSYMS_sacute ((guint) 0x01b6)
#define KKC_KEYSYMS_caron ((guint) 0x01b7)
#define KKC_KEYSYMS_scaron ((guint) 0x01b9)
#define KKC_KEYSYMS_scedilla ((guint) 0x01ba)
#define KKC_KEYSYMS_tcaron ((guint) 0x01bb)
#define KKC_KEYSYMS_zacute ((guint) 0x01bc)
#define KKC_KEYSYMS_doubleacute ((guint) 0x01bd)
#define KKC_KEYSYMS_zcaron ((guint) 0x01be)
#define KKC_KEYSYMS_zabovedot ((guint) 0x01bf)
#define KKC_KEYSYMS_Racute ((guint) 0x01c0)
#define KKC_KEYSYMS_Abreve ((guint) 0x01c3)
#define KKC_KEYSYMS_Lacute ((guint) 0x01c5)
#define KKC_KEYSYMS_Cacute ((guint) 0x01c6)
#define KKC_KEYSYMS_Ccaron ((guint) 0x01c8)
#define KKC_KEYSYMS_Eogonek ((guint) 0x01ca)
#define KKC_KEYSYMS_Ecaron ((guint) 0x01cc)
#define KKC_KEYSYMS_Dcaron ((guint) 0x01cf)
#define KKC_KEYSYMS_Dstroke ((guint) 0x01d0)
#define KKC_KEYSYMS_Nacute ((guint) 0x01d1)
#define KKC_KEYSYMS_Ncaron ((guint) 0x01d2)
#define KKC_KEYSYMS_Odoubleacute ((guint) 0x01d5)
#define KKC_KEYSYMS_Rcaron ((guint) 0x01d8)
#define KKC_KEYSYMS_Uring ((guint) 0x01d9)
#define KKC_KEYSYMS_Udoubleacute ((guint) 0x01db)
#define KKC_KEYSYMS_Tcedilla ((guint) 0x01de)
#define KKC_KEYSYMS_racute ((guint) 0x01e0)
#define KKC_KEYSYMS_abreve ((guint) 0x01e3)
#define KKC_KEYSYMS_lacute ((guint) 0x01e5)
#define KKC_KEYSYMS_cacute ((guint) 0x01e6)
#define KKC_KEYSYMS_ccaron ((guint) 0x01e8)
#define KKC_KEYSYMS_eogonek ((guint) 0x01ea)
#define KKC_KEYSYMS_ecaron ((guint) 0x01ec)
#define KKC_KEYSYMS_dcaron ((guint) 0x01ef)
#define KKC_KEYSYMS_dstroke ((guint) 0x01f0)
#define KKC_KEYSYMS_nacute ((guint) 0x01f1)
#define KKC_KEYSYMS_ncaron ((guint) 0x01f2)
#define KKC_KEYSYMS_odoubleacute ((guint) 0x01f5)
#define KKC_KEYSYMS_rcaron ((guint) 0x01f8)
#define KKC_KEYSYMS_uring ((guint) 0x01f9)
#define KKC_KEYSYMS_udoubleacute ((guint) 0x01fb)
#define KKC_KEYSYMS_tcedilla ((guint) 0x01fe)
#define KKC_KEYSYMS_abovedot ((guint) 0x01ff)
#define KKC_KEYSYMS_Hstroke ((guint) 0x02a1)
#define KKC_KEYSYMS_Hcircumflex ((guint) 0x02a6)
#define KKC_KEYSYMS_Iabovedot ((guint) 0x02a9)
#define KKC_KEYSYMS_Gbreve ((guint) 0x02ab)
#define KKC_KEYSYMS_Jcircumflex ((guint) 0x02ac)
#define KKC_KEYSYMS_hstroke ((guint) 0x02b1)
#define KKC_KEYSYMS_hcircumflex ((guint) 0x02b6)
#define KKC_KEYSYMS_idotless ((guint) 0x02b9)
#define KKC_KEYSYMS_gbreve ((guint) 0x02bb)
#define KKC_KEYSYMS_jcircumflex ((guint) 0x02bc)
#define KKC_KEYSYMS_Cabovedot ((guint) 0x02c5)
#define KKC_KEYSYMS_Ccircumflex ((guint) 0x02c6)
#define KKC_KEYSYMS_Gabovedot ((guint) 0x02d5)
#define KKC_KEYSYMS_Gcircumflex ((guint) 0x02d8)
#define KKC_KEYSYMS_Ubreve ((guint) 0x02dd)
#define KKC_KEYSYMS_Scircumflex ((guint) 0x02de)
#define KKC_KEYSYMS_cabovedot ((guint) 0x02e5)
#define KKC_KEYSYMS_ccircumflex ((guint) 0x02e6)
#define KKC_KEYSYMS_gabovedot ((guint) 0x02f5)
#define KKC_KEYSYMS_gcircumflex ((guint) 0x02f8)
#define KKC_KEYSYMS_ubreve ((guint) 0x02fd)
#define KKC_KEYSYMS_scircumflex ((guint) 0x02fe)
#define KKC_KEYSYMS_kra ((guint) 0x03a2)
#define KKC_KEYSYMS_kappa ((guint) 0x03a2)
#define KKC_KEYSYMS_Rcedilla ((guint) 0x03a3)
#define KKC_KEYSYMS_Itilde ((guint) 0x03a5)
#define KKC_KEYSYMS_Lcedilla ((guint) 0x03a6)
#define KKC_KEYSYMS_Emacron ((guint) 0x03aa)
#define KKC_KEYSYMS_Gcedilla ((guint) 0x03ab)
#define KKC_KEYSYMS_Tslash ((guint) 0x03ac)
#define KKC_KEYSYMS_rcedilla ((guint) 0x03b3)
#define KKC_KEYSYMS_itilde ((guint) 0x03b5)
#define KKC_KEYSYMS_lcedilla ((guint) 0x03b6)
#define KKC_KEYSYMS_emacron ((guint) 0x03ba)
#define KKC_KEYSYMS_gcedilla ((guint) 0x03bb)
#define KKC_KEYSYMS_tslash ((guint) 0x03bc)
#define KKC_KEYSYMS_ENG ((guint) 0x03bd)
#define KKC_KEYSYMS_eng ((guint) 0x03bf)
#define KKC_KEYSYMS_Amacron ((guint) 0x03c0)
#define KKC_KEYSYMS_Iogonek ((guint) 0x03c7)
#define KKC_KEYSYMS_Eabovedot ((guint) 0x03cc)
#define KKC_KEYSYMS_Imacron ((guint) 0x03cf)
#define KKC_KEYSYMS_Ncedilla ((guint) 0x03d1)
#define KKC_KEYSYMS_Omacron ((guint) 0x03d2)
#define KKC_KEYSYMS_Kcedilla ((guint) 0x03d3)
#define KKC_KEYSYMS_Uogonek ((guint) 0x03d9)
#define KKC_KEYSYMS_Utilde ((guint) 0x03dd)
#define KKC_KEYSYMS_Umacron ((guint) 0x03de)
#define KKC_KEYSYMS_amacron ((guint) 0x03e0)
#define KKC_KEYSYMS_iogonek ((guint) 0x03e7)
#define KKC_KEYSYMS_eabovedot ((guint) 0x03ec)
#define KKC_KEYSYMS_imacron ((guint) 0x03ef)
#define KKC_KEYSYMS_ncedilla ((guint) 0x03f1)
#define KKC_KEYSYMS_omacron ((guint) 0x03f2)
#define KKC_KEYSYMS_kcedilla ((guint) 0x03f3)
#define KKC_KEYSYMS_uogonek ((guint) 0x03f9)
#define KKC_KEYSYMS_utilde ((guint) 0x03fd)
#define KKC_KEYSYMS_umacron ((guint) 0x03fe)
#define KKC_KEYSYMS_Wcircumflex ((guint) 0x1000174)
#define KKC_KEYSYMS_wcircumflex ((guint) 0x1000175)
#define KKC_KEYSYMS_Ycircumflex ((guint) 0x1000176)
#define KKC_KEYSYMS_ycircumflex ((guint) 0x1000177)
#define KKC_KEYSYMS_Babovedot ((guint) 0x1001e02)
#define KKC_KEYSYMS_babovedot ((guint) 0x1001e03)
#define KKC_KEYSYMS_Dabovedot ((guint) 0x1001e0a)
#define KKC_KEYSYMS_dabovedot ((guint) 0x1001e0b)
#define KKC_KEYSYMS_Fabovedot ((guint) 0x1001e1e)
#define KKC_KEYSYMS_fabovedot ((guint) 0x1001e1f)
#define KKC_KEYSYMS_Mabovedot ((guint) 0x1001e40)
#define KKC_KEYSYMS_mabovedot ((guint) 0x1001e41)
#define KKC_KEYSYMS_Pabovedot ((guint) 0x1001e56)
#define KKC_KEYSYMS_pabovedot ((guint) 0x1001e57)
#define KKC_KEYSYMS_Sabovedot ((guint) 0x1001e60)
#define KKC_KEYSYMS_sabovedot ((guint) 0x1001e61)
#define KKC_KEYSYMS_Tabovedot ((guint) 0x1001e6a)
#define KKC_KEYSYMS_tabovedot ((guint) 0x1001e6b)
#define KKC_KEYSYMS_Wgrave ((guint) 0x1001e80)
#define KKC_KEYSYMS_wgrave ((guint) 0x1001e81)
#define KKC_KEYSYMS_Wacute ((guint) 0x1001e82)
#define KKC_KEYSYMS_wacute ((guint) 0x1001e83)
#define KKC_KEYSYMS_Wdiaeresis ((guint) 0x1001e84)
#define KKC_KEYSYMS_wdiaeresis ((guint) 0x1001e85)
#define KKC_KEYSYMS_Ygrave ((guint) 0x1001ef2)
#define KKC_KEYSYMS_ygrave ((guint) 0x1001ef3)
#define KKC_KEYSYMS_OE ((guint) 0x13bc)
#define KKC_KEYSYMS_oe ((guint) 0x13bd)
#define KKC_KEYSYMS_Ydiaeresis ((guint) 0x13be)
#define KKC_KEYSYMS_overline ((guint) 0x047e)
#define KKC_KEYSYMS_kana_fullstop ((guint) 0x04a1)
#define KKC_KEYSYMS_kana_openingbracket ((guint) 0x04a2)
#define KKC_KEYSYMS_kana_closingbracket ((guint) 0x04a3)
#define KKC_KEYSYMS_kana_comma ((guint) 0x04a4)
#define KKC_KEYSYMS_kana_conjunctive ((guint) 0x04a5)
#define KKC_KEYSYMS_kana_middledot ((guint) 0x04a5)
#define KKC_KEYSYMS_kana_WO ((guint) 0x04a6)
#define KKC_KEYSYMS_kana_a ((guint) 0x04a7)
#define KKC_KEYSYMS_kana_i ((guint) 0x04a8)
#define KKC_KEYSYMS_kana_u ((guint) 0x04a9)
#define KKC_KEYSYMS_kana_e ((guint) 0x04aa)
#define KKC_KEYSYMS_kana_o ((guint) 0x04ab)
#define KKC_KEYSYMS_kana_ya ((guint) 0x04ac)
#define KKC_KEYSYMS_kana_yu ((guint) 0x04ad)
#define KKC_KEYSYMS_kana_yo ((guint) 0x04ae)
#define KKC_KEYSYMS_kana_tsu ((guint) 0x04af)
#define KKC_KEYSYMS_kana_tu ((guint) 0x04af)
#define KKC_KEYSYMS_prolongedsound ((guint) 0x04b0)
#define KKC_KEYSYMS_kana_A ((guint) 0x04b1)
#define KKC_KEYSYMS_kana_I ((guint) 0x04b2)
#define KKC_KEYSYMS_kana_U ((guint) 0x04b3)
#define KKC_KEYSYMS_kana_E ((guint) 0x04b4)
#define KKC_KEYSYMS_kana_O ((guint) 0x04b5)
#define KKC_KEYSYMS_kana_KA ((guint) 0x04b6)
#define KKC_KEYSYMS_kana_KI ((guint) 0x04b7)
#define KKC_KEYSYMS_kana_KU ((guint) 0x04b8)
#define KKC_KEYSYMS_kana_KE ((guint) 0x04b9)
#define KKC_KEYSYMS_kana_KO ((guint) 0x04ba)
#define KKC_KEYSYMS_kana_SA ((guint) 0x04bb)
#define KKC_KEYSYMS_kana_SHI ((guint) 0x04bc)
#define KKC_KEYSYMS_kana_SU ((guint) 0x04bd)
#define KKC_KEYSYMS_kana_SE ((guint) 0x04be)
#define KKC_KEYSYMS_kana_SO ((guint) 0x04bf)
#define KKC_KEYSYMS_kana_TA ((guint) 0x04c0)
#define KKC_KEYSYMS_kana_CHI ((guint) 0x04c1)
#define KKC_KEYSYMS_kana_TI ((guint) 0x04c1)
#define KKC_KEYSYMS_kana_TSU ((guint) 0x04c2)
#define KKC_KEYSYMS_kana_TU ((guint) 0x04c2)
#define KKC_KEYSYMS_kana_TE ((guint) 0x04c3)
#define KKC_KEYSYMS_kana_TO ((guint) 0x04c4)
#define KKC_KEYSYMS_kana_NA ((guint) 0x04c5)
#define KKC_KEYSYMS_kana_NI ((guint) 0x04c6)
#define KKC_KEYSYMS_kana_NU ((guint) 0x04c7)
#define KKC_KEYSYMS_kana_NE ((guint) 0x04c8)
#define KKC_KEYSYMS_kana_NO ((guint) 0x04c9)
#define KKC_KEYSYMS_kana_HA ((guint) 0x04ca)
#define KKC_KEYSYMS_kana_HI ((guint) 0x04cb)
#define KKC_KEYSYMS_kana_FU ((guint) 0x04cc)
#define KKC_KEYSYMS_kana_HU ((guint) 0x04cc)
#define KKC_KEYSYMS_kana_HE ((guint) 0x04cd)
#define KKC_KEYSYMS_kana_HO ((guint) 0x04ce)
#define KKC_KEYSYMS_kana_MA ((guint) 0x04cf)
#define KKC_KEYSYMS_kana_MI ((guint) 0x04d0)
#define KKC_KEYSYMS_kana_MU ((guint) 0x04d1)
#define KKC_KEYSYMS_kana_ME ((guint) 0x04d2)
#define KKC_KEYSYMS_kana_MO ((guint) 0x04d3)
#define KKC_KEYSYMS_kana_YA ((guint) 0x04d4)
#define KKC_KEYSYMS_kana_YU ((guint) 0x04d5)
#define KKC_KEYSYMS_kana_YO ((guint) 0x04d6)
#define KKC_KEYSYMS_kana_RA ((guint) 0x04d7)
#define KKC_KEYSYMS_kana_RI ((guint) 0x04d8)
#define KKC_KEYSYMS_kana_RU ((guint) 0x04d9)
#define KKC_KEYSYMS_kana_RE ((guint) 0x04da)
#define KKC_KEYSYMS_kana_RO ((guint) 0x04db)
#define KKC_KEYSYMS_kana_WA ((guint) 0x04dc)
#define KKC_KEYSYMS_kana_N ((guint) 0x04dd)
#define KKC_KEYSYMS_voicedsound ((guint) 0x04de)
#define KKC_KEYSYMS_semivoicedsound ((guint) 0x04df)
#define KKC_KEYSYMS_kana_switch ((guint) 0xff7e)
#define KKC_KEYSYMS_Farsi_0 ((guint) 0x10006f0)
#define KKC_KEYSYMS_Farsi_1 ((guint) 0x10006f1)
#define KKC_KEYSYMS_Farsi_2 ((guint) 0x10006f2)
#define KKC_KEYSYMS_Farsi_3 ((guint) 0x10006f3)
#define KKC_KEYSYMS_Farsi_4 ((guint) 0x10006f4)
#define KKC_KEYSYMS_Farsi_5 ((guint) 0x10006f5)
#define KKC_KEYSYMS_Farsi_6 ((guint) 0x10006f6)
#define KKC_KEYSYMS_Farsi_7 ((guint) 0x10006f7)
#define KKC_KEYSYMS_Farsi_8 ((guint) 0x10006f8)
#define KKC_KEYSYMS_Farsi_9 ((guint) 0x10006f9)
#define KKC_KEYSYMS_Arabic_percent ((guint) 0x100066a)
#define KKC_KEYSYMS_Arabic_superscript_alef ((guint) 0x1000670)
#define KKC_KEYSYMS_Arabic_tteh ((guint) 0x1000679)
#define KKC_KEYSYMS_Arabic_peh ((guint) 0x100067e)
#define KKC_KEYSYMS_Arabic_tcheh ((guint) 0x1000686)
#define KKC_KEYSYMS_Arabic_ddal ((guint) 0x1000688)
#define KKC_KEYSYMS_Arabic_rreh ((guint) 0x1000691)
#define KKC_KEYSYMS_Arabic_comma ((guint) 0x05ac)
#define KKC_KEYSYMS_Arabic_fullstop ((guint) 0x10006d4)
#define KKC_KEYSYMS_Arabic_0 ((guint) 0x1000660)
#define KKC_KEYSYMS_Arabic_1 ((guint) 0x1000661)
#define KKC_KEYSYMS_Arabic_2 ((guint) 0x1000662)
#define KKC_KEYSYMS_Arabic_3 ((guint) 0x1000663)
#define KKC_KEYSYMS_Arabic_4 ((guint) 0x1000664)
#define KKC_KEYSYMS_Arabic_5 ((guint) 0x1000665)
#define KKC_KEYSYMS_Arabic_6 ((guint) 0x1000666)
#define KKC_KEYSYMS_Arabic_7 ((guint) 0x1000667)
#define KKC_KEYSYMS_Arabic_8 ((guint) 0x1000668)
#define KKC_KEYSYMS_Arabic_9 ((guint) 0x1000669)
#define KKC_KEYSYMS_Arabic_semicolon ((guint) 0x05bb)
#define KKC_KEYSYMS_Arabic_question_mark ((guint) 0x05bf)
#define KKC_KEYSYMS_Arabic_hamza ((guint) 0x05c1)
#define KKC_KEYSYMS_Arabic_maddaonalef ((guint) 0x05c2)
#define KKC_KEYSYMS_Arabic_hamzaonalef ((guint) 0x05c3)
#define KKC_KEYSYMS_Arabic_hamzaonwaw ((guint) 0x05c4)
#define KKC_KEYSYMS_Arabic_hamzaunderalef ((guint) 0x05c5)
#define KKC_KEYSYMS_Arabic_hamzaonyeh ((guint) 0x05c6)
#define KKC_KEYSYMS_Arabic_alef ((guint) 0x05c7)
#define KKC_KEYSYMS_Arabic_beh ((guint) 0x05c8)
#define KKC_KEYSYMS_Arabic_tehmarbuta ((guint) 0x05c9)
#define KKC_KEYSYMS_Arabic_teh ((guint) 0x05ca)
#define KKC_KEYSYMS_Arabic_theh ((guint) 0x05cb)
#define KKC_KEYSYMS_Arabic_jeem ((guint) 0x05cc)
#define KKC_KEYSYMS_Arabic_hah ((guint) 0x05cd)
#define KKC_KEYSYMS_Arabic_khah ((guint) 0x05ce)
#define KKC_KEYSYMS_Arabic_dal ((guint) 0x05cf)
#define KKC_KEYSYMS_Arabic_thal ((guint) 0x05d0)
#define KKC_KEYSYMS_Arabic_ra ((guint) 0x05d1)
#define KKC_KEYSYMS_Arabic_zain ((guint) 0x05d2)
#define KKC_KEYSYMS_Arabic_seen ((guint) 0x05d3)
#define KKC_KEYSYMS_Arabic_sheen ((guint) 0x05d4)
#define KKC_KEYSYMS_Arabic_sad ((guint) 0x05d5)
#define KKC_KEYSYMS_Arabic_dad ((guint) 0x05d6)
#define KKC_KEYSYMS_Arabic_tah ((guint) 0x05d7)
#define KKC_KEYSYMS_Arabic_zah ((guint) 0x05d8)
#define KKC_KEYSYMS_Arabic_ain ((guint) 0x05d9)
#define KKC_KEYSYMS_Arabic_ghain ((guint) 0x05da)
#define KKC_KEYSYMS_Arabic_tatweel ((guint) 0x05e0)
#define KKC_KEYSYMS_Arabic_feh ((guint) 0x05e1)
#define KKC_KEYSYMS_Arabic_qaf ((guint) 0x05e2)
#define KKC_KEYSYMS_Arabic_kaf ((guint) 0x05e3)
#define KKC_KEYSYMS_Arabic_lam ((guint) 0x05e4)
#define KKC_KEYSYMS_Arabic_meem ((guint) 0x05e5)
#define KKC_KEYSYMS_Arabic_noon ((guint) 0x05e6)
#define KKC_KEYSYMS_Arabic_ha ((guint) 0x05e7)
#define KKC_KEYSYMS_Arabic_heh ((guint) 0x05e7)
#define KKC_KEYSYMS_Arabic_waw ((guint) 0x05e8)
#define KKC_KEYSYMS_Arabic_alefmaksura ((guint) 0x05e9)
#define KKC_KEYSYMS_Arabic_yeh ((guint) 0x05ea)
#define KKC_KEYSYMS_Arabic_fathatan ((guint) 0x05eb)
#define KKC_KEYSYMS_Arabic_dammatan ((guint) 0x05ec)
#define KKC_KEYSYMS_Arabic_kasratan ((guint) 0x05ed)
#define KKC_KEYSYMS_Arabic_fatha ((guint) 0x05ee)
#define KKC_KEYSYMS_Arabic_damma ((guint) 0x05ef)
#define KKC_KEYSYMS_Arabic_kasra ((guint) 0x05f0)
#define KKC_KEYSYMS_Arabic_shadda ((guint) 0x05f1)
#define KKC_KEYSYMS_Arabic_sukun ((guint) 0x05f2)
#define KKC_KEYSYMS_Arabic_madda_above ((guint) 0x1000653)
#define KKC_KEYSYMS_Arabic_hamza_above ((guint) 0x1000654)
#define KKC_KEYSYMS_Arabic_hamza_below ((guint) 0x1000655)
#define KKC_KEYSYMS_Arabic_jeh ((guint) 0x1000698)
#define KKC_KEYSYMS_Arabic_veh ((guint) 0x10006a4)
#define KKC_KEYSYMS_Arabic_keheh ((guint) 0x10006a9)
#define KKC_KEYSYMS_Arabic_gaf ((guint) 0x10006af)
#define KKC_KEYSYMS_Arabic_noon_ghunna ((guint) 0x10006ba)
#define KKC_KEYSYMS_Arabic_heh_doachashmee ((guint) 0x10006be)
#define KKC_KEYSYMS_Farsi_yeh ((guint) 0x10006cc)
#define KKC_KEYSYMS_Arabic_farsi_yeh ((guint) 0x10006cc)
#define KKC_KEYSYMS_Arabic_yeh_baree ((guint) 0x10006d2)
#define KKC_KEYSYMS_Arabic_heh_goal ((guint) 0x10006c1)
#define KKC_KEYSYMS_Arabic_switch ((guint) 0xff7e)
#define KKC_KEYSYMS_Cyrillic_GHE_bar ((guint) 0x1000492)
#define KKC_KEYSYMS_Cyrillic_ghe_bar ((guint) 0x1000493)
#define KKC_KEYSYMS_Cyrillic_ZHE_descender ((guint) 0x1000496)
#define KKC_KEYSYMS_Cyrillic_zhe_descender ((guint) 0x1000497)
#define KKC_KEYSYMS_Cyrillic_KA_descender ((guint) 0x100049a)
#define KKC_KEYSYMS_Cyrillic_ka_descender ((guint) 0x100049b)
#define KKC_KEYSYMS_Cyrillic_KA_vertstroke ((guint) 0x100049c)
#define KKC_KEYSYMS_Cyrillic_ka_vertstroke ((guint) 0x100049d)
#define KKC_KEYSYMS_Cyrillic_EN_descender ((guint) 0x10004a2)
#define KKC_KEYSYMS_Cyrillic_en_descender ((guint) 0x10004a3)
#define KKC_KEYSYMS_Cyrillic_U_straight ((guint) 0x10004ae)
#define KKC_KEYSYMS_Cyrillic_u_straight ((guint) 0x10004af)
#define KKC_KEYSYMS_Cyrillic_U_straight_bar ((guint) 0x10004b0)
#define KKC_KEYSYMS_Cyrillic_u_straight_bar ((guint) 0x10004b1)
#define KKC_KEYSYMS_Cyrillic_HA_descender ((guint) 0x10004b2)
#define KKC_KEYSYMS_Cyrillic_ha_descender ((guint) 0x10004b3)
#define KKC_KEYSYMS_Cyrillic_CHE_descender ((guint) 0x10004b6)
#define KKC_KEYSYMS_Cyrillic_che_descender ((guint) 0x10004b7)
#define KKC_KEYSYMS_Cyrillic_CHE_vertstroke ((guint) 0x10004b8)
#define KKC_KEYSYMS_Cyrillic_che_vertstroke ((guint) 0x10004b9)
#define KKC_KEYSYMS_Cyrillic_SHHA ((guint) 0x10004ba)
#define KKC_KEYSYMS_Cyrillic_shha ((guint) 0x10004bb)
#define KKC_KEYSYMS_Cyrillic_SCHWA ((guint) 0x10004d8)
#define KKC_KEYSYMS_Cyrillic_schwa ((guint) 0x10004d9)
#define KKC_KEYSYMS_Cyrillic_I_macron ((guint) 0x10004e2)
#define KKC_KEYSYMS_Cyrillic_i_macron ((guint) 0x10004e3)
#define KKC_KEYSYMS_Cyrillic_O_bar ((guint) 0x10004e8)
#define KKC_KEYSYMS_Cyrillic_o_bar ((guint) 0x10004e9)
#define KKC_KEYSYMS_Cyrillic_U_macron ((guint) 0x10004ee)
#define KKC_KEYSYMS_Cyrillic_u_macron ((guint) 0x10004ef)
#define KKC_KEYSYMS_Serbian_dje ((guint) 0x06a1)
#define KKC_KEYSYMS_Macedonia_gje ((guint) 0x06a2)
#define KKC_KEYSYMS_Cyrillic_io ((guint) 0x06a3)
#define KKC_KEYSYMS_Ukrainian_ie ((guint) 0x06a4)
#define KKC_KEYSYMS_Ukranian_je ((guint) 0x06a4)
#define KKC_KEYSYMS_Macedonia_dse ((guint) 0x06a5)
#define KKC_KEYSYMS_Ukrainian_i ((guint) 0x06a6)
#define KKC_KEYSYMS_Ukranian_i ((guint) 0x06a6)
#define KKC_KEYSYMS_Ukrainian_yi ((guint) 0x06a7)
#define KKC_KEYSYMS_Ukranian_yi ((guint) 0x06a7)
#define KKC_KEYSYMS_Cyrillic_je ((guint) 0x06a8)
#define KKC_KEYSYMS_Serbian_je ((guint) 0x06a8)
#define KKC_KEYSYMS_Cyrillic_lje ((guint) 0x06a9)
#define KKC_KEYSYMS_Serbian_lje ((guint) 0x06a9)
#define KKC_KEYSYMS_Cyrillic_nje ((guint) 0x06aa)
#define KKC_KEYSYMS_Serbian_nje ((guint) 0x06aa)
#define KKC_KEYSYMS_Serbian_tshe ((guint) 0x06ab)
#define KKC_KEYSYMS_Macedonia_kje ((guint) 0x06ac)
#define KKC_KEYSYMS_Ukrainian_ghe_with_upturn ((guint) 0x06ad)
#define KKC_KEYSYMS_Byelorussian_shortu ((guint) 0x06ae)
#define KKC_KEYSYMS_Cyrillic_dzhe ((guint) 0x06af)
#define KKC_KEYSYMS_Serbian_dze ((guint) 0x06af)
#define KKC_KEYSYMS_numerosign ((guint) 0x06b0)
#define KKC_KEYSYMS_Serbian_DJE ((guint) 0x06b1)
#define KKC_KEYSYMS_Macedonia_GJE ((guint) 0x06b2)
#define KKC_KEYSYMS_Cyrillic_IO ((guint) 0x06b3)
#define KKC_KEYSYMS_Ukrainian_IE ((guint) 0x06b4)
#define KKC_KEYSYMS_Ukranian_JE ((guint) 0x06b4)
#define KKC_KEYSYMS_Macedonia_DSE ((guint) 0x06b5)
#define KKC_KEYSYMS_Ukrainian_I ((guint) 0x06b6)
#define KKC_KEYSYMS_Ukranian_I ((guint) 0x06b6)
#define KKC_KEYSYMS_Ukrainian_YI ((guint) 0x06b7)
#define KKC_KEYSYMS_Ukranian_YI ((guint) 0x06b7)
#define KKC_KEYSYMS_Cyrillic_JE ((guint) 0x06b8)
#define KKC_KEYSYMS_Serbian_JE ((guint) 0x06b8)
#define KKC_KEYSYMS_Cyrillic_LJE ((guint) 0x06b9)
#define KKC_KEYSYMS_Serbian_LJE ((guint) 0x06b9)
#define KKC_KEYSYMS_Cyrillic_NJE ((guint) 0x06ba)
#define KKC_KEYSYMS_Serbian_NJE ((guint) 0x06ba)
#define KKC_KEYSYMS_Serbian_TSHE ((guint) 0x06bb)
#define KKC_KEYSYMS_Macedonia_KJE ((guint) 0x06bc)
#define KKC_KEYSYMS_Ukrainian_GHE_WITH_UPTURN ((guint) 0x06bd)
#define KKC_KEYSYMS_Byelorussian_SHORTU ((guint) 0x06be)
#define KKC_KEYSYMS_Cyrillic_DZHE ((guint) 0x06bf)
#define KKC_KEYSYMS_Serbian_DZE ((guint) 0x06bf)
#define KKC_KEYSYMS_Cyrillic_yu ((guint) 0x06c0)
#define KKC_KEYSYMS_Cyrillic_a ((guint) 0x06c1)
#define KKC_KEYSYMS_Cyrillic_be ((guint) 0x06c2)
#define KKC_KEYSYMS_Cyrillic_tse ((guint) 0x06c3)
#define KKC_KEYSYMS_Cyrillic_de ((guint) 0x06c4)
#define KKC_KEYSYMS_Cyrillic_ie ((guint) 0x06c5)
#define KKC_KEYSYMS_Cyrillic_ef ((guint) 0x06c6)
#define KKC_KEYSYMS_Cyrillic_ghe ((guint) 0x06c7)
#define KKC_KEYSYMS_Cyrillic_ha ((guint) 0x06c8)
#define KKC_KEYSYMS_Cyrillic_i ((guint) 0x06c9)
#define KKC_KEYSYMS_Cyrillic_shorti ((guint) 0x06ca)
#define KKC_KEYSYMS_Cyrillic_ka ((guint) 0x06cb)
#define KKC_KEYSYMS_Cyrillic_el ((guint) 0x06cc)
#define KKC_KEYSYMS_Cyrillic_em ((guint) 0x06cd)
#define KKC_KEYSYMS_Cyrillic_en ((guint) 0x06ce)
#define KKC_KEYSYMS_Cyrillic_o ((guint) 0x06cf)
#define KKC_KEYSYMS_Cyrillic_pe ((guint) 0x06d0)
#define KKC_KEYSYMS_Cyrillic_ya ((guint) 0x06d1)
#define KKC_KEYSYMS_Cyrillic_er ((guint) 0x06d2)
#define KKC_KEYSYMS_Cyrillic_es ((guint) 0x06d3)
#define KKC_KEYSYMS_Cyrillic_te ((guint) 0x06d4)
#define KKC_KEYSYMS_Cyrillic_u ((guint) 0x06d5)
#define KKC_KEYSYMS_Cyrillic_zhe ((guint) 0x06d6)
#define KKC_KEYSYMS_Cyrillic_ve ((guint) 0x06d7)
#define KKC_KEYSYMS_Cyrillic_softsign ((guint) 0x06d8)
#define KKC_KEYSYMS_Cyrillic_yeru ((guint) 0x06d9)
#define KKC_KEYSYMS_Cyrillic_ze ((guint) 0x06da)
#define KKC_KEYSYMS_Cyrillic_sha ((guint) 0x06db)
#define KKC_KEYSYMS_Cyrillic_e ((guint) 0x06dc)
#define KKC_KEYSYMS_Cyrillic_shcha ((guint) 0x06dd)
#define KKC_KEYSYMS_Cyrillic_che ((guint) 0x06de)
#define KKC_KEYSYMS_Cyrillic_hardsign ((guint) 0x06df)
#define KKC_KEYSYMS_Cyrillic_YU ((guint) 0x06e0)
#define KKC_KEYSYMS_Cyrillic_A ((guint) 0x06e1)
#define KKC_KEYSYMS_Cyrillic_BE ((guint) 0x06e2)
#define KKC_KEYSYMS_Cyrillic_TSE ((guint) 0x06e3)
#define KKC_KEYSYMS_Cyrillic_DE ((guint) 0x06e4)
#define KKC_KEYSYMS_Cyrillic_IE ((guint) 0x06e5)
#define KKC_KEYSYMS_Cyrillic_EF ((guint) 0x06e6)
#define KKC_KEYSYMS_Cyrillic_GHE ((guint) 0x06e7)
#define KKC_KEYSYMS_Cyrillic_HA ((guint) 0x06e8)
#define KKC_KEYSYMS_Cyrillic_I ((guint) 0x06e9)
#define KKC_KEYSYMS_Cyrillic_SHORTI ((guint) 0x06ea)
#define KKC_KEYSYMS_Cyrillic_KA ((guint) 0x06eb)
#define KKC_KEYSYMS_Cyrillic_EL ((guint) 0x06ec)
#define KKC_KEYSYMS_Cyrillic_EM ((guint) 0x06ed)
#define KKC_KEYSYMS_Cyrillic_EN ((guint) 0x06ee)
#define KKC_KEYSYMS_Cyrillic_O ((guint) 0x06ef)
#define KKC_KEYSYMS_Cyrillic_PE ((guint) 0x06f0)
#define KKC_KEYSYMS_Cyrillic_YA ((guint) 0x06f1)
#define KKC_KEYSYMS_Cyrillic_ER ((guint) 0x06f2)
#define KKC_KEYSYMS_Cyrillic_ES ((guint) 0x06f3)
#define KKC_KEYSYMS_Cyrillic_TE ((guint) 0x06f4)
#define KKC_KEYSYMS_Cyrillic_U ((guint) 0x06f5)
#define KKC_KEYSYMS_Cyrillic_ZHE ((guint) 0x06f6)
#define KKC_KEYSYMS_Cyrillic_VE ((guint) 0x06f7)
#define KKC_KEYSYMS_Cyrillic_SOFTSIGN ((guint) 0x06f8)
#define KKC_KEYSYMS_Cyrillic_YERU ((guint) 0x06f9)
#define KKC_KEYSYMS_Cyrillic_ZE ((guint) 0x06fa)
#define KKC_KEYSYMS_Cyrillic_SHA ((guint) 0x06fb)
#define KKC_KEYSYMS_Cyrillic_E ((guint) 0x06fc)
#define KKC_KEYSYMS_Cyrillic_SHCHA ((guint) 0x06fd)
#define KKC_KEYSYMS_Cyrillic_CHE ((guint) 0x06fe)
#define KKC_KEYSYMS_Cyrillic_HARDSIGN ((guint) 0x06ff)
#define KKC_KEYSYMS_Greek_ALPHAaccent ((guint) 0x07a1)
#define KKC_KEYSYMS_Greek_EPSILONaccent ((guint) 0x07a2)
#define KKC_KEYSYMS_Greek_ETAaccent ((guint) 0x07a3)
#define KKC_KEYSYMS_Greek_IOTAaccent ((guint) 0x07a4)
#define KKC_KEYSYMS_Greek_IOTAdieresis ((guint) 0x07a5)
#define KKC_KEYSYMS_Greek_IOTAdiaeresis ((guint) 0x07a5)
#define KKC_KEYSYMS_Greek_OMICRONaccent ((guint) 0x07a7)
#define KKC_KEYSYMS_Greek_UPSILONaccent ((guint) 0x07a8)
#define KKC_KEYSYMS_Greek_UPSILONdieresis ((guint) 0x07a9)
#define KKC_KEYSYMS_Greek_OMEGAaccent ((guint) 0x07ab)
#define KKC_KEYSYMS_Greek_accentdieresis ((guint) 0x07ae)
#define KKC_KEYSYMS_Greek_horizbar ((guint) 0x07af)
#define KKC_KEYSYMS_Greek_alphaaccent ((guint) 0x07b1)
#define KKC_KEYSYMS_Greek_epsilonaccent ((guint) 0x07b2)
#define KKC_KEYSYMS_Greek_etaaccent ((guint) 0x07b3)
#define KKC_KEYSYMS_Greek_iotaaccent ((guint) 0x07b4)
#define KKC_KEYSYMS_Greek_iotadieresis ((guint) 0x07b5)
#define KKC_KEYSYMS_Greek_iotaaccentdieresis ((guint) 0x07b6)
#define KKC_KEYSYMS_Greek_omicronaccent ((guint) 0x07b7)
#define KKC_KEYSYMS_Greek_upsilonaccent ((guint) 0x07b8)
#define KKC_KEYSYMS_Greek_upsilondieresis ((guint) 0x07b9)
#define KKC_KEYSYMS_Greek_upsilonaccentdieresis ((guint) 0x07ba)
#define KKC_KEYSYMS_Greek_omegaaccent ((guint) 0x07bb)
#define KKC_KEYSYMS_Greek_ALPHA ((guint) 0x07c1)
#define KKC_KEYSYMS_Greek_BETA ((guint) 0x07c2)
#define KKC_KEYSYMS_Greek_GAMMA ((guint) 0x07c3)
#define KKC_KEYSYMS_Greek_DELTA ((guint) 0x07c4)
#define KKC_KEYSYMS_Greek_EPSILON ((guint) 0x07c5)
#define KKC_KEYSYMS_Greek_ZETA ((guint) 0x07c6)
#define KKC_KEYSYMS_Greek_ETA ((guint) 0x07c7)
#define KKC_KEYSYMS_Greek_THETA ((guint) 0x07c8)
#define KKC_KEYSYMS_Greek_IOTA ((guint) 0x07c9)
#define KKC_KEYSYMS_Greek_KAPPA ((guint) 0x07ca)
#define KKC_KEYSYMS_Greek_LAMDA ((guint) 0x07cb)
#define KKC_KEYSYMS_Greek_LAMBDA ((guint) 0x07cb)
#define KKC_KEYSYMS_Greek_MU ((guint) 0x07cc)
#define KKC_KEYSYMS_Greek_NU ((guint) 0x07cd)
#define KKC_KEYSYMS_Greek_XI ((guint) 0x07ce)
#define KKC_KEYSYMS_Greek_OMICRON ((guint) 0x07cf)
#define KKC_KEYSYMS_Greek_PI ((guint) 0x07d0)
#define KKC_KEYSYMS_Greek_RHO ((guint) 0x07d1)
#define KKC_KEYSYMS_Greek_SIGMA ((guint) 0x07d2)
#define KKC_KEYSYMS_Greek_TAU ((guint) 0x07d4)
#define KKC_KEYSYMS_Greek_UPSILON ((guint) 0x07d5)
#define KKC_KEYSYMS_Greek_PHI ((guint) 0x07d6)
#define KKC_KEYSYMS_Greek_CHI ((guint) 0x07d7)
#define KKC_KEYSYMS_Greek_PSI ((guint) 0x07d8)
#define KKC_KEYSYMS_Greek_OMEGA ((guint) 0x07d9)
#define KKC_KEYSYMS_Greek_alpha ((guint) 0x07e1)
#define KKC_KEYSYMS_Greek_beta ((guint) 0x07e2)
#define KKC_KEYSYMS_Greek_gamma ((guint) 0x07e3)
#define KKC_KEYSYMS_Greek_delta ((guint) 0x07e4)
#define KKC_KEYSYMS_Greek_epsilon ((guint) 0x07e5)
#define KKC_KEYSYMS_Greek_zeta ((guint) 0x07e6)
#define KKC_KEYSYMS_Greek_eta ((guint) 0x07e7)
#define KKC_KEYSYMS_Greek_theta ((guint) 0x07e8)
#define KKC_KEYSYMS_Greek_iota ((guint) 0x07e9)
#define KKC_KEYSYMS_Greek_kappa ((guint) 0x07ea)
#define KKC_KEYSYMS_Greek_lamda ((guint) 0x07eb)
#define KKC_KEYSYMS_Greek_lambda ((guint) 0x07eb)
#define KKC_KEYSYMS_Greek_mu ((guint) 0x07ec)
#define KKC_KEYSYMS_Greek_nu ((guint) 0x07ed)
#define KKC_KEYSYMS_Greek_xi ((guint) 0x07ee)
#define KKC_KEYSYMS_Greek_omicron ((guint) 0x07ef)
#define KKC_KEYSYMS_Greek_pi ((guint) 0x07f0)
#define KKC_KEYSYMS_Greek_rho ((guint) 0x07f1)
#define KKC_KEYSYMS_Greek_sigma ((guint) 0x07f2)
#define KKC_KEYSYMS_Greek_finalsmallsigma ((guint) 0x07f3)
#define KKC_KEYSYMS_Greek_tau ((guint) 0x07f4)
#define KKC_KEYSYMS_Greek_upsilon ((guint) 0x07f5)
#define KKC_KEYSYMS_Greek_phi ((guint) 0x07f6)
#define KKC_KEYSYMS_Greek_chi ((guint) 0x07f7)
#define KKC_KEYSYMS_Greek_psi ((guint) 0x07f8)
#define KKC_KEYSYMS_Greek_omega ((guint) 0x07f9)
#define KKC_KEYSYMS_Greek_switch ((guint) 0xff7e)
#define KKC_KEYSYMS_leftradical ((guint) 0x08a1)
#define KKC_KEYSYMS_topleftradical ((guint) 0x08a2)
#define KKC_KEYSYMS_horizconnector ((guint) 0x08a3)
#define KKC_KEYSYMS_topintegral ((guint) 0x08a4)
#define KKC_KEYSYMS_botintegral ((guint) 0x08a5)
#define KKC_KEYSYMS_vertconnector ((guint) 0x08a6)
#define KKC_KEYSYMS_topleftsqbracket ((guint) 0x08a7)
#define KKC_KEYSYMS_botleftsqbracket ((guint) 0x08a8)
#define KKC_KEYSYMS_toprightsqbracket ((guint) 0x08a9)
#define KKC_KEYSYMS_botrightsqbracket ((guint) 0x08aa)
#define KKC_KEYSYMS_topleftparens ((guint) 0x08ab)
#define KKC_KEYSYMS_botleftparens ((guint) 0x08ac)
#define KKC_KEYSYMS_toprightparens ((guint) 0x08ad)
#define KKC_KEYSYMS_botrightparens ((guint) 0x08ae)
#define KKC_KEYSYMS_leftmiddlecurlybrace ((guint) 0x08af)
#define KKC_KEYSYMS_rightmiddlecurlybrace ((guint) 0x08b0)
#define KKC_KEYSYMS_topleftsummation ((guint) 0x08b1)
#define KKC_KEYSYMS_botleftsummation ((guint) 0x08b2)
#define KKC_KEYSYMS_topvertsummationconnector ((guint) 0x08b3)
#define KKC_KEYSYMS_botvertsummationconnector ((guint) 0x08b4)
#define KKC_KEYSYMS_toprightsummation ((guint) 0x08b5)
#define KKC_KEYSYMS_botrightsummation ((guint) 0x08b6)
#define KKC_KEYSYMS_rightmiddlesummation ((guint) 0x08b7)
#define KKC_KEYSYMS_lessthanequal ((guint) 0x08bc)
#define KKC_KEYSYMS_notequal ((guint) 0x08bd)
#define KKC_KEYSYMS_greaterthanequal ((guint) 0x08be)
#define KKC_KEYSYMS_integral ((guint) 0x08bf)
#define KKC_KEYSYMS_therefore ((guint) 0x08c0)
#define KKC_KEYSYMS_variation ((guint) 0x08c1)
#define KKC_KEYSYMS_infinity ((guint) 0x08c2)
#define KKC_KEYSYMS_nabla ((guint) 0x08c5)
#define KKC_KEYSYMS_approximate ((guint) 0x08c8)
#define KKC_KEYSYMS_similarequal ((guint) 0x08c9)
#define KKC_KEYSYMS_ifonlyif ((guint) 0x08cd)
#define KKC_KEYSYMS_implies ((guint) 0x08ce)
#define KKC_KEYSYMS_identical ((guint) 0x08cf)
#define KKC_KEYSYMS_radical ((guint) 0x08d6)
#define KKC_KEYSYMS_includedin ((guint) 0x08da)
#define KKC_KEYSYMS_includes ((guint) 0x08db)
#define KKC_KEYSYMS_intersection ((guint) 0x08dc)
#define KKC_KEYSYMS_union ((guint) 0x08dd)
#define KKC_KEYSYMS_logicaland ((guint) 0x08de)
#define KKC_KEYSYMS_logicalor ((guint) 0x08df)
#define KKC_KEYSYMS_partialderivative ((guint) 0x08ef)
#define KKC_KEYSYMS_function ((guint) 0x08f6)
#define KKC_KEYSYMS_leftarrow ((guint) 0x08fb)
#define KKC_KEYSYMS_uparrow ((guint) 0x08fc)
#define KKC_KEYSYMS_rightarrow ((guint) 0x08fd)
#define KKC_KEYSYMS_downarrow ((guint) 0x08fe)
#define KKC_KEYSYMS_blank ((guint) 0x09df)
#define KKC_KEYSYMS_soliddiamond ((guint) 0x09e0)
#define KKC_KEYSYMS_checkerboard ((guint) 0x09e1)
#define KKC_KEYSYMS_ht ((guint) 0x09e2)
#define KKC_KEYSYMS_ff ((guint) 0x09e3)
#define KKC_KEYSYMS_cr ((guint) 0x09e4)
#define KKC_KEYSYMS_lf ((guint) 0x09e5)
#define KKC_KEYSYMS_nl ((guint) 0x09e8)
#define KKC_KEYSYMS_vt ((guint) 0x09e9)
#define KKC_KEYSYMS_lowrightcorner ((guint) 0x09ea)
#define KKC_KEYSYMS_uprightcorner ((guint) 0x09eb)
#define KKC_KEYSYMS_upleftcorner ((guint) 0x09ec)
#define KKC_KEYSYMS_lowleftcorner ((guint) 0x09ed)
#define KKC_KEYSYMS_crossinglines ((guint) 0x09ee)
#define KKC_KEYSYMS_horizlinescan1 ((guint) 0x09ef)
#define KKC_KEYSYMS_horizlinescan3 ((guint) 0x09f0)
#define KKC_KEYSYMS_horizlinescan5 ((guint) 0x09f1)
#define KKC_KEYSYMS_horizlinescan7 ((guint) 0x09f2)
#define KKC_KEYSYMS_horizlinescan9 ((guint) 0x09f3)
#define KKC_KEYSYMS_leftt ((guint) 0x09f4)
#define KKC_KEYSYMS_rightt ((guint) 0x09f5)
#define KKC_KEYSYMS_bott ((guint) 0x09f6)
#define KKC_KEYSYMS_topt ((guint) 0x09f7)
#define KKC_KEYSYMS_vertbar ((guint) 0x09f8)
#define KKC_KEYSYMS_emspace ((guint) 0x0aa1)
#define KKC_KEYSYMS_enspace ((guint) 0x0aa2)
#define KKC_KEYSYMS_em3space ((guint) 0x0aa3)
#define KKC_KEYSYMS_em4space ((guint) 0x0aa4)
#define KKC_KEYSYMS_digitspace ((guint) 0x0aa5)
#define KKC_KEYSYMS_punctspace ((guint) 0x0aa6)
#define KKC_KEYSYMS_thinspace ((guint) 0x0aa7)
#define KKC_KEYSYMS_hairspace ((guint) 0x0aa8)
#define KKC_KEYSYMS_emdash ((guint) 0x0aa9)
#define KKC_KEYSYMS_endash ((guint) 0x0aaa)
#define KKC_KEYSYMS_signifblank ((guint) 0x0aac)
#define KKC_KEYSYMS_ellipsis ((guint) 0x0aae)
#define KKC_KEYSYMS_doubbaselinedot ((guint) 0x0aaf)
#define KKC_KEYSYMS_onethird ((guint) 0x0ab0)
#define KKC_KEYSYMS_twothirds ((guint) 0x0ab1)
#define KKC_KEYSYMS_onefifth ((guint) 0x0ab2)
#define KKC_KEYSYMS_twofifths ((guint) 0x0ab3)
#define KKC_KEYSYMS_threefifths ((guint) 0x0ab4)
#define KKC_KEYSYMS_fourfifths ((guint) 0x0ab5)
#define KKC_KEYSYMS_onesixth ((guint) 0x0ab6)
#define KKC_KEYSYMS_fivesixths ((guint) 0x0ab7)
#define KKC_KEYSYMS_careof ((guint) 0x0ab8)
#define KKC_KEYSYMS_figdash ((guint) 0x0abb)
#define KKC_KEYSYMS_leftanglebracket ((guint) 0x0abc)
#define KKC_KEYSYMS_decimalpoint ((guint) 0x0abd)
#define KKC_KEYSYMS_rightanglebracket ((guint) 0x0abe)
#define KKC_KEYSYMS_marker ((guint) 0x0abf)
#define KKC_KEYSYMS_oneeighth ((guint) 0x0ac3)
#define KKC_KEYSYMS_threeeighths ((guint) 0x0ac4)
#define KKC_KEYSYMS_fiveeighths ((guint) 0x0ac5)
#define KKC_KEYSYMS_seveneighths ((guint) 0x0ac6)
#define KKC_KEYSYMS_trademark ((guint) 0x0ac9)
#define KKC_KEYSYMS_signaturemark ((guint) 0x0aca)
#define KKC_KEYSYMS_trademarkincircle ((guint) 0x0acb)
#define KKC_KEYSYMS_leftopentriangle ((guint) 0x0acc)
#define KKC_KEYSYMS_rightopentriangle ((guint) 0x0acd)
#define KKC_KEYSYMS_emopencircle ((guint) 0x0ace)
#define KKC_KEYSYMS_emopenrectangle ((guint) 0x0acf)
#define KKC_KEYSYMS_leftsinglequotemark ((guint) 0x0ad0)
#define KKC_KEYSYMS_rightsinglequotemark ((guint) 0x0ad1)
#define KKC_KEYSYMS_leftdoublequotemark ((guint) 0x0ad2)
#define KKC_KEYSYMS_rightdoublequotemark ((guint) 0x0ad3)
#define KKC_KEYSYMS_prescription ((guint) 0x0ad4)
#define KKC_KEYSYMS_minutes ((guint) 0x0ad6)
#define KKC_KEYSYMS_seconds ((guint) 0x0ad7)
#define KKC_KEYSYMS_latincross ((guint) 0x0ad9)
#define KKC_KEYSYMS_hexagram ((guint) 0x0ada)
#define KKC_KEYSYMS_filledrectbullet ((guint) 0x0adb)
#define KKC_KEYSYMS_filledlefttribullet ((guint) 0x0adc)
#define KKC_KEYSYMS_filledrighttribullet ((guint) 0x0add)
#define KKC_KEYSYMS_emfilledcircle ((guint) 0x0ade)
#define KKC_KEYSYMS_emfilledrect ((guint) 0x0adf)
#define KKC_KEYSYMS_enopencircbullet ((guint) 0x0ae0)
#define KKC_KEYSYMS_enopensquarebullet ((guint) 0x0ae1)
#define KKC_KEYSYMS_openrectbullet ((guint) 0x0ae2)
#define KKC_KEYSYMS_opentribulletup ((guint) 0x0ae3)
#define KKC_KEYSYMS_opentribulletdown ((guint) 0x0ae4)
#define KKC_KEYSYMS_openstar ((guint) 0x0ae5)
#define KKC_KEYSYMS_enfilledcircbullet ((guint) 0x0ae6)
#define KKC_KEYSYMS_enfilledsqbullet ((guint) 0x0ae7)
#define KKC_KEYSYMS_filledtribulletup ((guint) 0x0ae8)
#define KKC_KEYSYMS_filledtribulletdown ((guint) 0x0ae9)
#define KKC_KEYSYMS_leftpointer ((guint) 0x0aea)
#define KKC_KEYSYMS_rightpointer ((guint) 0x0aeb)
#define KKC_KEYSYMS_club ((guint) 0x0aec)
#define KKC_KEYSYMS_diamond ((guint) 0x0aed)
#define KKC_KEYSYMS_heart ((guint) 0x0aee)
#define KKC_KEYSYMS_maltesecross ((guint) 0x0af0)
#define KKC_KEYSYMS_dagger ((guint) 0x0af1)
#define KKC_KEYSYMS_doubledagger ((guint) 0x0af2)
#define KKC_KEYSYMS_checkmark ((guint) 0x0af3)
#define KKC_KEYSYMS_ballotcross ((guint) 0x0af4)
#define KKC_KEYSYMS_musicalsharp ((guint) 0x0af5)
#define KKC_KEYSYMS_musicalflat ((guint) 0x0af6)
#define KKC_KEYSYMS_malesymbol ((guint) 0x0af7)
#define KKC_KEYSYMS_femalesymbol ((guint) 0x0af8)
#define KKC_KEYSYMS_telephone ((guint) 0x0af9)
#define KKC_KEYSYMS_telephonerecorder ((guint) 0x0afa)
#define KKC_KEYSYMS_phonographcopyright ((guint) 0x0afb)
#define KKC_KEYSYMS_caret ((guint) 0x0afc)
#define KKC_KEYSYMS_singlelowquotemark ((guint) 0x0afd)
#define KKC_KEYSYMS_doublelowquotemark ((guint) 0x0afe)
#define KKC_KEYSYMS_cursor ((guint) 0x0aff)
#define KKC_KEYSYMS_leftcaret ((guint) 0x0ba3)
#define KKC_KEYSYMS_rightcaret ((guint) 0x0ba6)
#define KKC_KEYSYMS_downcaret ((guint) 0x0ba8)
#define KKC_KEYSYMS_upcaret ((guint) 0x0ba9)
#define KKC_KEYSYMS_overbar ((guint) 0x0bc0)
#define KKC_KEYSYMS_downtack ((guint) 0x0bc2)
#define KKC_KEYSYMS_upshoe ((guint) 0x0bc3)
#define KKC_KEYSYMS_downstile ((guint) 0x0bc4)
#define KKC_KEYSYMS_underbar ((guint) 0x0bc6)
#define KKC_KEYSYMS_jot ((guint) 0x0bca)
#define KKC_KEYSYMS_quad ((guint) 0x0bcc)
#define KKC_KEYSYMS_uptack ((guint) 0x0bce)
#define KKC_KEYSYMS_circle ((guint) 0x0bcf)
#define KKC_KEYSYMS_upstile ((guint) 0x0bd3)
#define KKC_KEYSYMS_downshoe ((guint) 0x0bd6)
#define KKC_KEYSYMS_rightshoe ((guint) 0x0bd8)
#define KKC_KEYSYMS_leftshoe ((guint) 0x0bda)
#define KKC_KEYSYMS_lefttack ((guint) 0x0bdc)
#define KKC_KEYSYMS_righttack ((guint) 0x0bfc)
#define KKC_KEYSYMS_hebrew_doublelowline ((guint) 0x0cdf)
#define KKC_KEYSYMS_hebrew_aleph ((guint) 0x0ce0)
#define KKC_KEYSYMS_hebrew_bet ((guint) 0x0ce1)
#define KKC_KEYSYMS_hebrew_beth ((guint) 0x0ce1)
#define KKC_KEYSYMS_hebrew_gimel ((guint) 0x0ce2)
#define KKC_KEYSYMS_hebrew_gimmel ((guint) 0x0ce2)
#define KKC_KEYSYMS_hebrew_dalet ((guint) 0x0ce3)
#define KKC_KEYSYMS_hebrew_daleth ((guint) 0x0ce3)
#define KKC_KEYSYMS_hebrew_he ((guint) 0x0ce4)
#define KKC_KEYSYMS_hebrew_waw ((guint) 0x0ce5)
#define KKC_KEYSYMS_hebrew_zain ((guint) 0x0ce6)
#define KKC_KEYSYMS_hebrew_zayin ((guint) 0x0ce6)
#define KKC_KEYSYMS_hebrew_chet ((guint) 0x0ce7)
#define KKC_KEYSYMS_hebrew_het ((guint) 0x0ce7)
#define KKC_KEYSYMS_hebrew_tet ((guint) 0x0ce8)
#define KKC_KEYSYMS_hebrew_teth ((guint) 0x0ce8)
#define KKC_KEYSYMS_hebrew_yod ((guint) 0x0ce9)
#define KKC_KEYSYMS_hebrew_finalkaph ((guint) 0x0cea)
#define KKC_KEYSYMS_hebrew_kaph ((guint) 0x0ceb)
#define KKC_KEYSYMS_hebrew_lamed ((guint) 0x0cec)
#define KKC_KEYSYMS_hebrew_finalmem ((guint) 0x0ced)
#define KKC_KEYSYMS_hebrew_mem ((guint) 0x0cee)
#define KKC_KEYSYMS_hebrew_finalnun ((guint) 0x0cef)
#define KKC_KEYSYMS_hebrew_nun ((guint) 0x0cf0)
#define KKC_KEYSYMS_hebrew_samech ((guint) 0x0cf1)
#define KKC_KEYSYMS_hebrew_samekh ((guint) 0x0cf1)
#define KKC_KEYSYMS_hebrew_ayin ((guint) 0x0cf2)
#define KKC_KEYSYMS_hebrew_finalpe ((guint) 0x0cf3)
#define KKC_KEYSYMS_hebrew_pe ((guint) 0x0cf4)
#define KKC_KEYSYMS_hebrew_finalzade ((guint) 0x0cf5)
#define KKC_KEYSYMS_hebrew_finalzadi ((guint) 0x0cf5)
#define KKC_KEYSYMS_hebrew_zade ((guint) 0x0cf6)
#define KKC_KEYSYMS_hebrew_zadi ((guint) 0x0cf6)
#define KKC_KEYSYMS_hebrew_qoph ((guint) 0x0cf7)
#define KKC_KEYSYMS_hebrew_kuf ((guint) 0x0cf7)
#define KKC_KEYSYMS_hebrew_resh ((guint) 0x0cf8)
#define KKC_KEYSYMS_hebrew_shin ((guint) 0x0cf9)
#define KKC_KEYSYMS_hebrew_taw ((guint) 0x0cfa)
#define KKC_KEYSYMS_hebrew_taf ((guint) 0x0cfa)
#define KKC_KEYSYMS_Hebrew_switch ((guint) 0xff7e)
#define KKC_KEYSYMS_Thai_kokai ((guint) 0x0da1)
#define KKC_KEYSYMS_Thai_khokhai ((guint) 0x0da2)
#define KKC_KEYSYMS_Thai_khokhuat ((guint) 0x0da3)
#define KKC_KEYSYMS_Thai_khokhwai ((guint) 0x0da4)
#define KKC_KEYSYMS_Thai_khokhon ((guint) 0x0da5)
#define KKC_KEYSYMS_Thai_khorakhang ((guint) 0x0da6)
#define KKC_KEYSYMS_Thai_ngongu ((guint) 0x0da7)
#define KKC_KEYSYMS_Thai_chochan ((guint) 0x0da8)
#define KKC_KEYSYMS_Thai_choching ((guint) 0x0da9)
#define KKC_KEYSYMS_Thai_chochang ((guint) 0x0daa)
#define KKC_KEYSYMS_Thai_soso ((guint) 0x0dab)
#define KKC_KEYSYMS_Thai_chochoe ((guint) 0x0dac)
#define KKC_KEYSYMS_Thai_yoying ((guint) 0x0dad)
#define KKC_KEYSYMS_Thai_dochada ((guint) 0x0dae)
#define KKC_KEYSYMS_Thai_topatak ((guint) 0x0daf)
#define KKC_KEYSYMS_Thai_thothan ((guint) 0x0db0)
#define KKC_KEYSYMS_Thai_thonangmontho ((guint) 0x0db1)
#define KKC_KEYSYMS_Thai_thophuthao ((guint) 0x0db2)
#define KKC_KEYSYMS_Thai_nonen ((guint) 0x0db3)
#define KKC_KEYSYMS_Thai_dodek ((guint) 0x0db4)
#define KKC_KEYSYMS_Thai_totao ((guint) 0x0db5)
#define KKC_KEYSYMS_Thai_thothung ((guint) 0x0db6)
#define KKC_KEYSYMS_Thai_thothahan ((guint) 0x0db7)
#define KKC_KEYSYMS_Thai_thothong ((guint) 0x0db8)
#define KKC_KEYSYMS_Thai_nonu ((guint) 0x0db9)
#define KKC_KEYSYMS_Thai_bobaimai ((guint) 0x0dba)
#define KKC_KEYSYMS_Thai_popla ((guint) 0x0dbb)
#define KKC_KEYSYMS_Thai_phophung ((guint) 0x0dbc)
#define KKC_KEYSYMS_Thai_fofa ((guint) 0x0dbd)
#define KKC_KEYSYMS_Thai_phophan ((guint) 0x0dbe)
#define KKC_KEYSYMS_Thai_fofan ((guint) 0x0dbf)
#define KKC_KEYSYMS_Thai_phosamphao ((guint) 0x0dc0)
#define KKC_KEYSYMS_Thai_moma ((guint) 0x0dc1)
#define KKC_KEYSYMS_Thai_yoyak ((guint) 0x0dc2)
#define KKC_KEYSYMS_Thai_rorua ((guint) 0x0dc3)
#define KKC_KEYSYMS_Thai_ru ((guint) 0x0dc4)
#define KKC_KEYSYMS_Thai_loling ((guint) 0x0dc5)
#define KKC_KEYSYMS_Thai_lu ((guint) 0x0dc6)
#define KKC_KEYSYMS_Thai_wowaen ((guint) 0x0dc7)
#define KKC_KEYSYMS_Thai_sosala ((guint) 0x0dc8)
#define KKC_KEYSYMS_Thai_sorusi ((guint) 0x0dc9)
#define KKC_KEYSYMS_Thai_sosua ((guint) 0x0dca)
#define KKC_KEYSYMS_Thai_hohip ((guint) 0x0dcb)
#define KKC_KEYSYMS_Thai_lochula ((guint) 0x0dcc)
#define KKC_KEYSYMS_Thai_oang ((guint) 0x0dcd)
#define KKC_KEYSYMS_Thai_honokhuk ((guint) 0x0dce)
#define KKC_KEYSYMS_Thai_paiyannoi ((guint) 0x0dcf)
#define KKC_KEYSYMS_Thai_saraa ((guint) 0x0dd0)
#define KKC_KEYSYMS_Thai_maihanakat ((guint) 0x0dd1)
#define KKC_KEYSYMS_Thai_saraaa ((guint) 0x0dd2)
#define KKC_KEYSYMS_Thai_saraam ((guint) 0x0dd3)
#define KKC_KEYSYMS_Thai_sarai ((guint) 0x0dd4)
#define KKC_KEYSYMS_Thai_saraii ((guint) 0x0dd5)
#define KKC_KEYSYMS_Thai_saraue ((guint) 0x0dd6)
#define KKC_KEYSYMS_Thai_sarauee ((guint) 0x0dd7)
#define KKC_KEYSYMS_Thai_sarau ((guint) 0x0dd8)
#define KKC_KEYSYMS_Thai_sarauu ((guint) 0x0dd9)
#define KKC_KEYSYMS_Thai_phinthu ((guint) 0x0dda)
#define KKC_KEYSYMS_Thai_maihanakat_maitho ((guint) 0x0dde)
#define KKC_KEYSYMS_Thai_baht ((guint) 0x0ddf)
#define KKC_KEYSYMS_Thai_sarae ((guint) 0x0de0)
#define KKC_KEYSYMS_Thai_saraae ((guint) 0x0de1)
#define KKC_KEYSYMS_Thai_sarao ((guint) 0x0de2)
#define KKC_KEYSYMS_Thai_saraaimaimuan ((guint) 0x0de3)
#define KKC_KEYSYMS_Thai_saraaimaimalai ((guint) 0x0de4)
#define KKC_KEYSYMS_Thai_lakkhangyao ((guint) 0x0de5)
#define KKC_KEYSYMS_Thai_maiyamok ((guint) 0x0de6)
#define KKC_KEYSYMS_Thai_maitaikhu ((guint) 0x0de7)
#define KKC_KEYSYMS_Thai_maiek ((guint) 0x0de8)
#define KKC_KEYSYMS_Thai_maitho ((guint) 0x0de9)
#define KKC_KEYSYMS_Thai_maitri ((guint) 0x0dea)
#define KKC_KEYSYMS_Thai_maichattawa ((guint) 0x0deb)
#define KKC_KEYSYMS_Thai_thanthakhat ((guint) 0x0dec)
#define KKC_KEYSYMS_Thai_nikhahit ((guint) 0x0ded)
#define KKC_KEYSYMS_Thai_leksun ((guint) 0x0df0)
#define KKC_KEYSYMS_Thai_leknung ((guint) 0x0df1)
#define KKC_KEYSYMS_Thai_leksong ((guint) 0x0df2)
#define KKC_KEYSYMS_Thai_leksam ((guint) 0x0df3)
#define KKC_KEYSYMS_Thai_leksi ((guint) 0x0df4)
#define KKC_KEYSYMS_Thai_lekha ((guint) 0x0df5)
#define KKC_KEYSYMS_Thai_lekhok ((guint) 0x0df6)
#define KKC_KEYSYMS_Thai_lekchet ((guint) 0x0df7)
#define KKC_KEYSYMS_Thai_lekpaet ((guint) 0x0df8)
#define KKC_KEYSYMS_Thai_lekkao ((guint) 0x0df9)
#define KKC_KEYSYMS_Hangul ((guint) 0xff31)
#define KKC_KEYSYMS_Hangul_Start ((guint) 0xff32)
#define KKC_KEYSYMS_Hangul_End ((guint) 0xff33)
#define KKC_KEYSYMS_Hangul_Hanja ((guint) 0xff34)
#define KKC_KEYSYMS_Hangul_Jamo ((guint) 0xff35)
#define KKC_KEYSYMS_Hangul_Romaja ((guint) 0xff36)
#define KKC_KEYSYMS_Hangul_Codeinput ((guint) 0xff37)
#define KKC_KEYSYMS_Hangul_Jeonja ((guint) 0xff38)
#define KKC_KEYSYMS_Hangul_Banja ((guint) 0xff39)
#define KKC_KEYSYMS_Hangul_PreHanja ((guint) 0xff3a)
#define KKC_KEYSYMS_Hangul_PostHanja ((guint) 0xff3b)
#define KKC_KEYSYMS_Hangul_SingleCandidate ((guint) 0xff3c)
#define KKC_KEYSYMS_Hangul_MultipleCandidate ((guint) 0xff3d)
#define KKC_KEYSYMS_Hangul_PreviousCandidate ((guint) 0xff3e)
#define KKC_KEYSYMS_Hangul_Special ((guint) 0xff3f)
#define KKC_KEYSYMS_Hangul_switch ((guint) 0xff7e)
#define KKC_KEYSYMS_Hangul_Kiyeog ((guint) 0x0ea1)
#define KKC_KEYSYMS_Hangul_SsangKiyeog ((guint) 0x0ea2)
#define KKC_KEYSYMS_Hangul_KiyeogSios ((guint) 0x0ea3)
#define KKC_KEYSYMS_Hangul_Nieun ((guint) 0x0ea4)
#define KKC_KEYSYMS_Hangul_NieunJieuj ((guint) 0x0ea5)
#define KKC_KEYSYMS_Hangul_NieunHieuh ((guint) 0x0ea6)
#define KKC_KEYSYMS_Hangul_Dikeud ((guint) 0x0ea7)
#define KKC_KEYSYMS_Hangul_SsangDikeud ((guint) 0x0ea8)
#define KKC_KEYSYMS_Hangul_Rieul ((guint) 0x0ea9)
#define KKC_KEYSYMS_Hangul_RieulKiyeog ((guint) 0x0eaa)
#define KKC_KEYSYMS_Hangul_RieulMieum ((guint) 0x0eab)
#define KKC_KEYSYMS_Hangul_RieulPieub ((guint) 0x0eac)
#define KKC_KEYSYMS_Hangul_RieulSios ((guint) 0x0ead)
#define KKC_KEYSYMS_Hangul_RieulTieut ((guint) 0x0eae)
#define KKC_KEYSYMS_Hangul_RieulPhieuf ((guint) 0x0eaf)
#define KKC_KEYSYMS_Hangul_RieulHieuh ((guint) 0x0eb0)
#define KKC_KEYSYMS_Hangul_Mieum ((guint) 0x0eb1)
#define KKC_KEYSYMS_Hangul_Pieub ((guint) 0x0eb2)
#define KKC_KEYSYMS_Hangul_SsangPieub ((guint) 0x0eb3)
#define KKC_KEYSYMS_Hangul_PieubSios ((guint) 0x0eb4)
#define KKC_KEYSYMS_Hangul_Sios ((guint) 0x0eb5)
#define KKC_KEYSYMS_Hangul_SsangSios ((guint) 0x0eb6)
#define KKC_KEYSYMS_Hangul_Ieung ((guint) 0x0eb7)
#define KKC_KEYSYMS_Hangul_Jieuj ((guint) 0x0eb8)
#define KKC_KEYSYMS_Hangul_SsangJieuj ((guint) 0x0eb9)
#define KKC_KEYSYMS_Hangul_Cieuc ((guint) 0x0eba)
#define KKC_KEYSYMS_Hangul_Khieuq ((guint) 0x0ebb)
#define KKC_KEYSYMS_Hangul_Tieut ((guint) 0x0ebc)
#define KKC_KEYSYMS_Hangul_Phieuf ((guint) 0x0ebd)
#define KKC_KEYSYMS_Hangul_Hieuh ((guint) 0x0ebe)
#define KKC_KEYSYMS_Hangul_A ((guint) 0x0ebf)
#define KKC_KEYSYMS_Hangul_AE ((guint) 0x0ec0)
#define KKC_KEYSYMS_Hangul_YA ((guint) 0x0ec1)
#define KKC_KEYSYMS_Hangul_YAE ((guint) 0x0ec2)
#define KKC_KEYSYMS_Hangul_EO ((guint) 0x0ec3)
#define KKC_KEYSYMS_Hangul_E ((guint) 0x0ec4)
#define KKC_KEYSYMS_Hangul_YEO ((guint) 0x0ec5)
#define KKC_KEYSYMS_Hangul_YE ((guint) 0x0ec6)
#define KKC_KEYSYMS_Hangul_O ((guint) 0x0ec7)
#define KKC_KEYSYMS_Hangul_WA ((guint) 0x0ec8)
#define KKC_KEYSYMS_Hangul_WAE ((guint) 0x0ec9)
#define KKC_KEYSYMS_Hangul_OE ((guint) 0x0eca)
#define KKC_KEYSYMS_Hangul_YO ((guint) 0x0ecb)
#define KKC_KEYSYMS_Hangul_U ((guint) 0x0ecc)
#define KKC_KEYSYMS_Hangul_WEO ((guint) 0x0ecd)
#define KKC_KEYSYMS_Hangul_WE ((guint) 0x0ece)
#define KKC_KEYSYMS_Hangul_WI ((guint) 0x0ecf)
#define KKC_KEYSYMS_Hangul_YU ((guint) 0x0ed0)
#define KKC_KEYSYMS_Hangul_EU ((guint) 0x0ed1)
#define KKC_KEYSYMS_Hangul_YI ((guint) 0x0ed2)
#define KKC_KEYSYMS_Hangul_I ((guint) 0x0ed3)
#define KKC_KEYSYMS_Hangul_J_Kiyeog ((guint) 0x0ed4)
#define KKC_KEYSYMS_Hangul_J_SsangKiyeog ((guint) 0x0ed5)
#define KKC_KEYSYMS_Hangul_J_KiyeogSios ((guint) 0x0ed6)
#define KKC_KEYSYMS_Hangul_J_Nieun ((guint) 0x0ed7)
#define KKC_KEYSYMS_Hangul_J_NieunJieuj ((guint) 0x0ed8)
#define KKC_KEYSYMS_Hangul_J_NieunHieuh ((guint) 0x0ed9)
#define KKC_KEYSYMS_Hangul_J_Dikeud ((guint) 0x0eda)
#define KKC_KEYSYMS_Hangul_J_Rieul ((guint) 0x0edb)
#define KKC_KEYSYMS_Hangul_J_RieulKiyeog ((guint) 0x0edc)
#define KKC_KEYSYMS_Hangul_J_RieulMieum ((guint) 0x0edd)
#define KKC_KEYSYMS_Hangul_J_RieulPieub ((guint) 0x0ede)
#define KKC_KEYSYMS_Hangul_J_RieulSios ((guint) 0x0edf)
#define KKC_KEYSYMS_Hangul_J_RieulTieut ((guint) 0x0ee0)
#define KKC_KEYSYMS_Hangul_J_RieulPhieuf ((guint) 0x0ee1)
#define KKC_KEYSYMS_Hangul_J_RieulHieuh ((guint) 0x0ee2)
#define KKC_KEYSYMS_Hangul_J_Mieum ((guint) 0x0ee3)
#define KKC_KEYSYMS_Hangul_J_Pieub ((guint) 0x0ee4)
#define KKC_KEYSYMS_Hangul_J_PieubSios ((guint) 0x0ee5)
#define KKC_KEYSYMS_Hangul_J_Sios ((guint) 0x0ee6)
#define KKC_KEYSYMS_Hangul_J_SsangSios ((guint) 0x0ee7)
#define KKC_KEYSYMS_Hangul_J_Ieung ((guint) 0x0ee8)
#define KKC_KEYSYMS_Hangul_J_Jieuj ((guint) 0x0ee9)
#define KKC_KEYSYMS_Hangul_J_Cieuc ((guint) 0x0eea)
#define KKC_KEYSYMS_Hangul_J_Khieuq ((guint) 0x0eeb)
#define KKC_KEYSYMS_Hangul_J_Tieut ((guint) 0x0eec)
#define KKC_KEYSYMS_Hangul_J_Phieuf ((guint) 0x0eed)
#define KKC_KEYSYMS_Hangul_J_Hieuh ((guint) 0x0eee)
#define KKC_KEYSYMS_Hangul_RieulYeorinHieuh ((guint) 0x0eef)
#define KKC_KEYSYMS_Hangul_SunkyeongeumMieum ((guint) 0x0ef0)
#define KKC_KEYSYMS_Hangul_SunkyeongeumPieub ((guint) 0x0ef1)
#define KKC_KEYSYMS_Hangul_PanSios ((guint) 0x0ef2)
#define KKC_KEYSYMS_Hangul_KkogjiDalrinIeung ((guint) 0x0ef3)
#define KKC_KEYSYMS_Hangul_SunkyeongeumPhieuf ((guint) 0x0ef4)
#define KKC_KEYSYMS_Hangul_YeorinHieuh ((guint) 0x0ef5)
#define KKC_KEYSYMS_Hangul_AraeA ((guint) 0x0ef6)
#define KKC_KEYSYMS_Hangul_AraeAE ((guint) 0x0ef7)
#define KKC_KEYSYMS_Hangul_J_PanSios ((guint) 0x0ef8)
#define KKC_KEYSYMS_Hangul_J_KkogjiDalrinIeung ((guint) 0x0ef9)
#define KKC_KEYSYMS_Hangul_J_YeorinHieuh ((guint) 0x0efa)
#define KKC_KEYSYMS_Korean_Won ((guint) 0x0eff)
#define KKC_KEYSYMS_Armenian_ligature_ew ((guint) 0x1000587)
#define KKC_KEYSYMS_Armenian_full_stop ((guint) 0x1000589)
#define KKC_KEYSYMS_Armenian_verjaket ((guint) 0x1000589)
#define KKC_KEYSYMS_Armenian_separation_mark ((guint) 0x100055d)
#define KKC_KEYSYMS_Armenian_but ((guint) 0x100055d)
#define KKC_KEYSYMS_Armenian_hyphen ((guint) 0x100058a)
#define KKC_KEYSYMS_Armenian_yentamna ((guint) 0x100058a)
#define KKC_KEYSYMS_Armenian_exclam ((guint) 0x100055c)
#define KKC_KEYSYMS_Armenian_amanak ((guint) 0x100055c)
#define KKC_KEYSYMS_Armenian_accent ((guint) 0x100055b)
#define KKC_KEYSYMS_Armenian_shesht ((guint) 0x100055b)
#define KKC_KEYSYMS_Armenian_question ((guint) 0x100055e)
#define KKC_KEYSYMS_Armenian_paruyk ((guint) 0x100055e)
#define KKC_KEYSYMS_Armenian_AYB ((guint) 0x1000531)
#define KKC_KEYSYMS_Armenian_ayb ((guint) 0x1000561)
#define KKC_KEYSYMS_Armenian_BEN ((guint) 0x1000532)
#define KKC_KEYSYMS_Armenian_ben ((guint) 0x1000562)
#define KKC_KEYSYMS_Armenian_GIM ((guint) 0x1000533)
#define KKC_KEYSYMS_Armenian_gim ((guint) 0x1000563)
#define KKC_KEYSYMS_Armenian_DA ((guint) 0x1000534)
#define KKC_KEYSYMS_Armenian_da ((guint) 0x1000564)
#define KKC_KEYSYMS_Armenian_YECH ((guint) 0x1000535)
#define KKC_KEYSYMS_Armenian_yech ((guint) 0x1000565)
#define KKC_KEYSYMS_Armenian_ZA ((guint) 0x1000536)
#define KKC_KEYSYMS_Armenian_za ((guint) 0x1000566)
#define KKC_KEYSYMS_Armenian_E ((guint) 0x1000537)
#define KKC_KEYSYMS_Armenian_e ((guint) 0x1000567)
#define KKC_KEYSYMS_Armenian_AT ((guint) 0x1000538)
#define KKC_KEYSYMS_Armenian_at ((guint) 0x1000568)
#define KKC_KEYSYMS_Armenian_TO ((guint) 0x1000539)
#define KKC_KEYSYMS_Armenian_to ((guint) 0x1000569)
#define KKC_KEYSYMS_Armenian_ZHE ((guint) 0x100053a)
#define KKC_KEYSYMS_Armenian_zhe ((guint) 0x100056a)
#define KKC_KEYSYMS_Armenian_INI ((guint) 0x100053b)
#define KKC_KEYSYMS_Armenian_ini ((guint) 0x100056b)
#define KKC_KEYSYMS_Armenian_LYUN ((guint) 0x100053c)
#define KKC_KEYSYMS_Armenian_lyun ((guint) 0x100056c)
#define KKC_KEYSYMS_Armenian_KHE ((guint) 0x100053d)
#define KKC_KEYSYMS_Armenian_khe ((guint) 0x100056d)
#define KKC_KEYSYMS_Armenian_TSA ((guint) 0x100053e)
#define KKC_KEYSYMS_Armenian_tsa ((guint) 0x100056e)
#define KKC_KEYSYMS_Armenian_KEN ((guint) 0x100053f)
#define KKC_KEYSYMS_Armenian_ken ((guint) 0x100056f)
#define KKC_KEYSYMS_Armenian_HO ((guint) 0x1000540)
#define KKC_KEYSYMS_Armenian_ho ((guint) 0x1000570)
#define KKC_KEYSYMS_Armenian_DZA ((guint) 0x1000541)
#define KKC_KEYSYMS_Armenian_dza ((guint) 0x1000571)
#define KKC_KEYSYMS_Armenian_GHAT ((guint) 0x1000542)
#define KKC_KEYSYMS_Armenian_ghat ((guint) 0x1000572)
#define KKC_KEYSYMS_Armenian_TCHE ((guint) 0x1000543)
#define KKC_KEYSYMS_Armenian_tche ((guint) 0x1000573)
#define KKC_KEYSYMS_Armenian_MEN ((guint) 0x1000544)
#define KKC_KEYSYMS_Armenian_men ((guint) 0x1000574)
#define KKC_KEYSYMS_Armenian_HI ((guint) 0x1000545)
#define KKC_KEYSYMS_Armenian_hi ((guint) 0x1000575)
#define KKC_KEYSYMS_Armenian_NU ((guint) 0x1000546)
#define KKC_KEYSYMS_Armenian_nu ((guint) 0x1000576)
#define KKC_KEYSYMS_Armenian_SHA ((guint) 0x1000547)
#define KKC_KEYSYMS_Armenian_sha ((guint) 0x1000577)
#define KKC_KEYSYMS_Armenian_VO ((guint) 0x1000548)
#define KKC_KEYSYMS_Armenian_vo ((guint) 0x1000578)
#define KKC_KEYSYMS_Armenian_CHA ((guint) 0x1000549)
#define KKC_KEYSYMS_Armenian_cha ((guint) 0x1000579)
#define KKC_KEYSYMS_Armenian_PE ((guint) 0x100054a)
#define KKC_KEYSYMS_Armenian_pe ((guint) 0x100057a)
#define KKC_KEYSYMS_Armenian_JE ((guint) 0x100054b)
#define KKC_KEYSYMS_Armenian_je ((guint) 0x100057b)
#define KKC_KEYSYMS_Armenian_RA ((guint) 0x100054c)
#define KKC_KEYSYMS_Armenian_ra ((guint) 0x100057c)
#define KKC_KEYSYMS_Armenian_SE ((guint) 0x100054d)
#define KKC_KEYSYMS_Armenian_se ((guint) 0x100057d)
#define KKC_KEYSYMS_Armenian_VEV ((guint) 0x100054e)
#define KKC_KEYSYMS_Armenian_vev ((guint) 0x100057e)
#define KKC_KEYSYMS_Armenian_TYUN ((guint) 0x100054f)
#define KKC_KEYSYMS_Armenian_tyun ((guint) 0x100057f)
#define KKC_KEYSYMS_Armenian_RE ((guint) 0x1000550)
#define KKC_KEYSYMS_Armenian_re ((guint) 0x1000580)
#define KKC_KEYSYMS_Armenian_TSO ((guint) 0x1000551)
#define KKC_KEYSYMS_Armenian_tso ((guint) 0x1000581)
#define KKC_KEYSYMS_Armenian_VYUN ((guint) 0x1000552)
#define KKC_KEYSYMS_Armenian_vyun ((guint) 0x1000582)
#define KKC_KEYSYMS_Armenian_PYUR ((guint) 0x1000553)
#define KKC_KEYSYMS_Armenian_pyur ((guint) 0x1000583)
#define KKC_KEYSYMS_Armenian_KE ((guint) 0x1000554)
#define KKC_KEYSYMS_Armenian_ke ((guint) 0x1000584)
#define KKC_KEYSYMS_Armenian_O ((guint) 0x1000555)
#define KKC_KEYSYMS_Armenian_o ((guint) 0x1000585)
#define KKC_KEYSYMS_Armenian_FE ((guint) 0x1000556)
#define KKC_KEYSYMS_Armenian_fe ((guint) 0x1000586)
#define KKC_KEYSYMS_Armenian_apostrophe ((guint) 0x100055a)
#define KKC_KEYSYMS_Georgian_an ((guint) 0x10010d0)
#define KKC_KEYSYMS_Georgian_ban ((guint) 0x10010d1)
#define KKC_KEYSYMS_Georgian_gan ((guint) 0x10010d2)
#define KKC_KEYSYMS_Georgian_don ((guint) 0x10010d3)
#define KKC_KEYSYMS_Georgian_en ((guint) 0x10010d4)
#define KKC_KEYSYMS_Georgian_vin ((guint) 0x10010d5)
#define KKC_KEYSYMS_Georgian_zen ((guint) 0x10010d6)
#define KKC_KEYSYMS_Georgian_tan ((guint) 0x10010d7)
#define KKC_KEYSYMS_Georgian_in ((guint) 0x10010d8)
#define KKC_KEYSYMS_Georgian_kan ((guint) 0x10010d9)
#define KKC_KEYSYMS_Georgian_las ((guint) 0x10010da)
#define KKC_KEYSYMS_Georgian_man ((guint) 0x10010db)
#define KKC_KEYSYMS_Georgian_nar ((guint) 0x10010dc)
#define KKC_KEYSYMS_Georgian_on ((guint) 0x10010dd)
#define KKC_KEYSYMS_Georgian_par ((guint) 0x10010de)
#define KKC_KEYSYMS_Georgian_zhar ((guint) 0x10010df)
#define KKC_KEYSYMS_Georgian_rae ((guint) 0x10010e0)
#define KKC_KEYSYMS_Georgian_san ((guint) 0x10010e1)
#define KKC_KEYSYMS_Georgian_tar ((guint) 0x10010e2)
#define KKC_KEYSYMS_Georgian_un ((guint) 0x10010e3)
#define KKC_KEYSYMS_Georgian_phar ((guint) 0x10010e4)
#define KKC_KEYSYMS_Georgian_khar ((guint) 0x10010e5)
#define KKC_KEYSYMS_Georgian_ghan ((guint) 0x10010e6)
#define KKC_KEYSYMS_Georgian_qar ((guint) 0x10010e7)
#define KKC_KEYSYMS_Georgian_shin ((guint) 0x10010e8)
#define KKC_KEYSYMS_Georgian_chin ((guint) 0x10010e9)
#define KKC_KEYSYMS_Georgian_can ((guint) 0x10010ea)
#define KKC_KEYSYMS_Georgian_jil ((guint) 0x10010eb)
#define KKC_KEYSYMS_Georgian_cil ((guint) 0x10010ec)
#define KKC_KEYSYMS_Georgian_char ((guint) 0x10010ed)
#define KKC_KEYSYMS_Georgian_xan ((guint) 0x10010ee)
#define KKC_KEYSYMS_Georgian_jhan ((guint) 0x10010ef)
#define KKC_KEYSYMS_Georgian_hae ((guint) 0x10010f0)
#define KKC_KEYSYMS_Georgian_he ((guint) 0x10010f1)
#define KKC_KEYSYMS_Georgian_hie ((guint) 0x10010f2)
#define KKC_KEYSYMS_Georgian_we ((guint) 0x10010f3)
#define KKC_KEYSYMS_Georgian_har ((guint) 0x10010f4)
#define KKC_KEYSYMS_Georgian_hoe ((guint) 0x10010f5)
#define KKC_KEYSYMS_Georgian_fi ((guint) 0x10010f6)
#define KKC_KEYSYMS_Xabovedot ((guint) 0x1001e8a)
#define KKC_KEYSYMS_Ibreve ((guint) 0x100012c)
#define KKC_KEYSYMS_Zstroke ((guint) 0x10001b5)
#define KKC_KEYSYMS_Gcaron ((guint) 0x10001e6)
#define KKC_KEYSYMS_Ocaron ((guint) 0x10001d1)
#define KKC_KEYSYMS_Obarred ((guint) 0x100019f)
#define KKC_KEYSYMS_xabovedot ((guint) 0x1001e8b)
#define KKC_KEYSYMS_ibreve ((guint) 0x100012d)
#define KKC_KEYSYMS_zstroke ((guint) 0x10001b6)
#define KKC_KEYSYMS_gcaron ((guint) 0x10001e7)
#define KKC_KEYSYMS_ocaron ((guint) 0x10001d2)
#define KKC_KEYSYMS_obarred ((guint) 0x1000275)
#define KKC_KEYSYMS_SCHWA ((guint) 0x100018f)
#define KKC_KEYSYMS_schwa ((guint) 0x1000259)
#define KKC_KEYSYMS_Lbelowdot ((guint) 0x1001e36)
#define KKC_KEYSYMS_lbelowdot ((guint) 0x1001e37)
#define KKC_KEYSYMS_Abelowdot ((guint) 0x1001ea0)
#define KKC_KEYSYMS_abelowdot ((guint) 0x1001ea1)
#define KKC_KEYSYMS_Ahook ((guint) 0x1001ea2)
#define KKC_KEYSYMS_ahook ((guint) 0x1001ea3)
#define KKC_KEYSYMS_Acircumflexacute ((guint) 0x1001ea4)
#define KKC_KEYSYMS_acircumflexacute ((guint) 0x1001ea5)
#define KKC_KEYSYMS_Acircumflexgrave ((guint) 0x1001ea6)
#define KKC_KEYSYMS_acircumflexgrave ((guint) 0x1001ea7)
#define KKC_KEYSYMS_Acircumflexhook ((guint) 0x1001ea8)
#define KKC_KEYSYMS_acircumflexhook ((guint) 0x1001ea9)
#define KKC_KEYSYMS_Acircumflextilde ((guint) 0x1001eaa)
#define KKC_KEYSYMS_acircumflextilde ((guint) 0x1001eab)
#define KKC_KEYSYMS_Acircumflexbelowdot ((guint) 0x1001eac)
#define KKC_KEYSYMS_acircumflexbelowdot ((guint) 0x1001ead)
#define KKC_KEYSYMS_Abreveacute ((guint) 0x1001eae)
#define KKC_KEYSYMS_abreveacute ((guint) 0x1001eaf)
#define KKC_KEYSYMS_Abrevegrave ((guint) 0x1001eb0)
#define KKC_KEYSYMS_abrevegrave ((guint) 0x1001eb1)
#define KKC_KEYSYMS_Abrevehook ((guint) 0x1001eb2)
#define KKC_KEYSYMS_abrevehook ((guint) 0x1001eb3)
#define KKC_KEYSYMS_Abrevetilde ((guint) 0x1001eb4)
#define KKC_KEYSYMS_abrevetilde ((guint) 0x1001eb5)
#define KKC_KEYSYMS_Abrevebelowdot ((guint) 0x1001eb6)
#define KKC_KEYSYMS_abrevebelowdot ((guint) 0x1001eb7)
#define KKC_KEYSYMS_Ebelowdot ((guint) 0x1001eb8)
#define KKC_KEYSYMS_ebelowdot ((guint) 0x1001eb9)
#define KKC_KEYSYMS_Ehook ((guint) 0x1001eba)
#define KKC_KEYSYMS_ehook ((guint) 0x1001ebb)
#define KKC_KEYSYMS_Etilde ((guint) 0x1001ebc)
#define KKC_KEYSYMS_etilde ((guint) 0x1001ebd)
#define KKC_KEYSYMS_Ecircumflexacute ((guint) 0x1001ebe)
#define KKC_KEYSYMS_ecircumflexacute ((guint) 0x1001ebf)
#define KKC_KEYSYMS_Ecircumflexgrave ((guint) 0x1001ec0)
#define KKC_KEYSYMS_ecircumflexgrave ((guint) 0x1001ec1)
#define KKC_KEYSYMS_Ecircumflexhook ((guint) 0x1001ec2)
#define KKC_KEYSYMS_ecircumflexhook ((guint) 0x1001ec3)
#define KKC_KEYSYMS_Ecircumflextilde ((guint) 0x1001ec4)
#define KKC_KEYSYMS_ecircumflextilde ((guint) 0x1001ec5)
#define KKC_KEYSYMS_Ecircumflexbelowdot ((guint) 0x1001ec6)
#define KKC_KEYSYMS_ecircumflexbelowdot ((guint) 0x1001ec7)
#define KKC_KEYSYMS_Ihook ((guint) 0x1001ec8)
#define KKC_KEYSYMS_ihook ((guint) 0x1001ec9)
#define KKC_KEYSYMS_Ibelowdot ((guint) 0x1001eca)
#define KKC_KEYSYMS_ibelowdot ((guint) 0x1001ecb)
#define KKC_KEYSYMS_Obelowdot ((guint) 0x1001ecc)
#define KKC_KEYSYMS_obelowdot ((guint) 0x1001ecd)
#define KKC_KEYSYMS_Ohook ((guint) 0x1001ece)
#define KKC_KEYSYMS_ohook ((guint) 0x1001ecf)
#define KKC_KEYSYMS_Ocircumflexacute ((guint) 0x1001ed0)
#define KKC_KEYSYMS_ocircumflexacute ((guint) 0x1001ed1)
#define KKC_KEYSYMS_Ocircumflexgrave ((guint) 0x1001ed2)
#define KKC_KEYSYMS_ocircumflexgrave ((guint) 0x1001ed3)
#define KKC_KEYSYMS_Ocircumflexhook ((guint) 0x1001ed4)
#define KKC_KEYSYMS_ocircumflexhook ((guint) 0x1001ed5)
#define KKC_KEYSYMS_Ocircumflextilde ((guint) 0x1001ed6)
#define KKC_KEYSYMS_ocircumflextilde ((guint) 0x1001ed7)
#define KKC_KEYSYMS_Ocircumflexbelowdot ((guint) 0x1001ed8)
#define KKC_KEYSYMS_ocircumflexbelowdot ((guint) 0x1001ed9)
#define KKC_KEYSYMS_Ohornacute ((guint) 0x1001eda)
#define KKC_KEYSYMS_ohornacute ((guint) 0x1001edb)
#define KKC_KEYSYMS_Ohorngrave ((guint) 0x1001edc)
#define KKC_KEYSYMS_ohorngrave ((guint) 0x1001edd)
#define KKC_KEYSYMS_Ohornhook ((guint) 0x1001ede)
#define KKC_KEYSYMS_ohornhook ((guint) 0x1001edf)
#define KKC_KEYSYMS_Ohorntilde ((guint) 0x1001ee0)
#define KKC_KEYSYMS_ohorntilde ((guint) 0x1001ee1)
#define KKC_KEYSYMS_Ohornbelowdot ((guint) 0x1001ee2)
#define KKC_KEYSYMS_ohornbelowdot ((guint) 0x1001ee3)
#define KKC_KEYSYMS_Ubelowdot ((guint) 0x1001ee4)
#define KKC_KEYSYMS_ubelowdot ((guint) 0x1001ee5)
#define KKC_KEYSYMS_Uhook ((guint) 0x1001ee6)
#define KKC_KEYSYMS_uhook ((guint) 0x1001ee7)
#define KKC_KEYSYMS_Uhornacute ((guint) 0x1001ee8)
#define KKC_KEYSYMS_uhornacute ((guint) 0x1001ee9)
#define KKC_KEYSYMS_Uhorngrave ((guint) 0x1001eea)
#define KKC_KEYSYMS_uhorngrave ((guint) 0x1001eeb)
#define KKC_KEYSYMS_Uhornhook ((guint) 0x1001eec)
#define KKC_KEYSYMS_uhornhook ((guint) 0x1001eed)
#define KKC_KEYSYMS_Uhorntilde ((guint) 0x1001eee)
#define KKC_KEYSYMS_uhorntilde ((guint) 0x1001eef)
#define KKC_KEYSYMS_Uhornbelowdot ((guint) 0x1001ef0)
#define KKC_KEYSYMS_uhornbelowdot ((guint) 0x1001ef1)
#define KKC_KEYSYMS_Ybelowdot ((guint) 0x1001ef4)
#define KKC_KEYSYMS_ybelowdot ((guint) 0x1001ef5)
#define KKC_KEYSYMS_Yhook ((guint) 0x1001ef6)
#define KKC_KEYSYMS_yhook ((guint) 0x1001ef7)
#define KKC_KEYSYMS_Ytilde ((guint) 0x1001ef8)
#define KKC_KEYSYMS_ytilde ((guint) 0x1001ef9)
#define KKC_KEYSYMS_Ohorn ((guint) 0x10001a0)
#define KKC_KEYSYMS_ohorn ((guint) 0x10001a1)
#define KKC_KEYSYMS_Uhorn ((guint) 0x10001af)
#define KKC_KEYSYMS_uhorn ((guint) 0x10001b0)
#define KKC_KEYSYMS_EcuSign ((guint) 0x10020a0)
#define KKC_KEYSYMS_ColonSign ((guint) 0x10020a1)
#define KKC_KEYSYMS_CruzeiroSign ((guint) 0x10020a2)
#define KKC_KEYSYMS_FFrancSign ((guint) 0x10020a3)
#define KKC_KEYSYMS_LiraSign ((guint) 0x10020a4)
#define KKC_KEYSYMS_MillSign ((guint) 0x10020a5)
#define KKC_KEYSYMS_NairaSign ((guint) 0x10020a6)
#define KKC_KEYSYMS_PesetaSign ((guint) 0x10020a7)
#define KKC_KEYSYMS_RupeeSign ((guint) 0x10020a8)
#define KKC_KEYSYMS_WonSign ((guint) 0x10020a9)
#define KKC_KEYSYMS_NewSheqelSign ((guint) 0x10020aa)
#define KKC_KEYSYMS_DongSign ((guint) 0x10020ab)
#define KKC_KEYSYMS_EuroSign ((guint) 0x20ac)
#define KKC_KEYSYMS_zerosuperior ((guint) 0x1002070)
#define KKC_KEYSYMS_foursuperior ((guint) 0x1002074)
#define KKC_KEYSYMS_fivesuperior ((guint) 0x1002075)
#define KKC_KEYSYMS_sixsuperior ((guint) 0x1002076)
#define KKC_KEYSYMS_sevensuperior ((guint) 0x1002077)
#define KKC_KEYSYMS_eightsuperior ((guint) 0x1002078)
#define KKC_KEYSYMS_ninesuperior ((guint) 0x1002079)
#define KKC_KEYSYMS_zerosubscript ((guint) 0x1002080)
#define KKC_KEYSYMS_onesubscript ((guint) 0x1002081)
#define KKC_KEYSYMS_twosubscript ((guint) 0x1002082)
#define KKC_KEYSYMS_threesubscript ((guint) 0x1002083)
#define KKC_KEYSYMS_foursubscript ((guint) 0x1002084)
#define KKC_KEYSYMS_fivesubscript ((guint) 0x1002085)
#define KKC_KEYSYMS_sixsubscript ((guint) 0x1002086)
#define KKC_KEYSYMS_sevensubscript ((guint) 0x1002087)
#define KKC_KEYSYMS_eightsubscript ((guint) 0x1002088)
#define KKC_KEYSYMS_ninesubscript ((guint) 0x1002089)
#define KKC_KEYSYMS_partdifferential ((guint) 0x1002202)
#define KKC_KEYSYMS_emptyset ((guint) 0x1002205)
#define KKC_KEYSYMS_elementof ((guint) 0x1002208)
#define KKC_KEYSYMS_notelementof ((guint) 0x1002209)
#define KKC_KEYSYMS_containsas ((guint) 0x100220B)
#define KKC_KEYSYMS_squareroot ((guint) 0x100221A)
#define KKC_KEYSYMS_cuberoot ((guint) 0x100221B)
#define KKC_KEYSYMS_fourthroot ((guint) 0x100221C)
#define KKC_KEYSYMS_dintegral ((guint) 0x100222C)
#define KKC_KEYSYMS_tintegral ((guint) 0x100222D)
#define KKC_KEYSYMS_because ((guint) 0x1002235)
#define KKC_KEYSYMS_approxeq ((guint) 0x1002248)
#define KKC_KEYSYMS_notapproxeq ((guint) 0x1002247)
#define KKC_KEYSYMS_notidentical ((guint) 0x1002262)
#define KKC_KEYSYMS_stricteq ((guint) 0x1002263)
#define KKC_KEYSYMS_braille_dot_1 ((guint) 0xfff1)
#define KKC_KEYSYMS_braille_dot_2 ((guint) 0xfff2)
#define KKC_KEYSYMS_braille_dot_3 ((guint) 0xfff3)
#define KKC_KEYSYMS_braille_dot_4 ((guint) 0xfff4)
#define KKC_KEYSYMS_braille_dot_5 ((guint) 0xfff5)
#define KKC_KEYSYMS_braille_dot_6 ((guint) 0xfff6)
#define KKC_KEYSYMS_braille_dot_7 ((guint) 0xfff7)
#define KKC_KEYSYMS_braille_dot_8 ((guint) 0xfff8)
#define KKC_KEYSYMS_braille_dot_9 ((guint) 0xfff9)
#define KKC_KEYSYMS_braille_dot_10 ((guint) 0xfffa)
#define KKC_KEYSYMS_braille_blank ((guint) 0x1002800)
#define KKC_KEYSYMS_braille_dots_1 ((guint) 0x1002801)
#define KKC_KEYSYMS_braille_dots_2 ((guint) 0x1002802)
#define KKC_KEYSYMS_braille_dots_12 ((guint) 0x1002803)
#define KKC_KEYSYMS_braille_dots_3 ((guint) 0x1002804)
#define KKC_KEYSYMS_braille_dots_13 ((guint) 0x1002805)
#define KKC_KEYSYMS_braille_dots_23 ((guint) 0x1002806)
#define KKC_KEYSYMS_braille_dots_123 ((guint) 0x1002807)
#define KKC_KEYSYMS_braille_dots_4 ((guint) 0x1002808)
#define KKC_KEYSYMS_braille_dots_14 ((guint) 0x1002809)
#define KKC_KEYSYMS_braille_dots_24 ((guint) 0x100280a)
#define KKC_KEYSYMS_braille_dots_124 ((guint) 0x100280b)
#define KKC_KEYSYMS_braille_dots_34 ((guint) 0x100280c)
#define KKC_KEYSYMS_braille_dots_134 ((guint) 0x100280d)
#define KKC_KEYSYMS_braille_dots_234 ((guint) 0x100280e)
#define KKC_KEYSYMS_braille_dots_1234 ((guint) 0x100280f)
#define KKC_KEYSYMS_braille_dots_5 ((guint) 0x1002810)
#define KKC_KEYSYMS_braille_dots_15 ((guint) 0x1002811)
#define KKC_KEYSYMS_braille_dots_25 ((guint) 0x1002812)
#define KKC_KEYSYMS_braille_dots_125 ((guint) 0x1002813)
#define KKC_KEYSYMS_braille_dots_35 ((guint) 0x1002814)
#define KKC_KEYSYMS_braille_dots_135 ((guint) 0x1002815)
#define KKC_KEYSYMS_braille_dots_235 ((guint) 0x1002816)
#define KKC_KEYSYMS_braille_dots_1235 ((guint) 0x1002817)
#define KKC_KEYSYMS_braille_dots_45 ((guint) 0x1002818)
#define KKC_KEYSYMS_braille_dots_145 ((guint) 0x1002819)
#define KKC_KEYSYMS_braille_dots_245 ((guint) 0x100281a)
#define KKC_KEYSYMS_braille_dots_1245 ((guint) 0x100281b)
#define KKC_KEYSYMS_braille_dots_345 ((guint) 0x100281c)
#define KKC_KEYSYMS_braille_dots_1345 ((guint) 0x100281d)
#define KKC_KEYSYMS_braille_dots_2345 ((guint) 0x100281e)
#define KKC_KEYSYMS_braille_dots_12345 ((guint) 0x100281f)
#define KKC_KEYSYMS_braille_dots_6 ((guint) 0x1002820)
#define KKC_KEYSYMS_braille_dots_16 ((guint) 0x1002821)
#define KKC_KEYSYMS_braille_dots_26 ((guint) 0x1002822)
#define KKC_KEYSYMS_braille_dots_126 ((guint) 0x1002823)
#define KKC_KEYSYMS_braille_dots_36 ((guint) 0x1002824)
#define KKC_KEYSYMS_braille_dots_136 ((guint) 0x1002825)
#define KKC_KEYSYMS_braille_dots_236 ((guint) 0x1002826)
#define KKC_KEYSYMS_braille_dots_1236 ((guint) 0x1002827)
#define KKC_KEYSYMS_braille_dots_46 ((guint) 0x1002828)
#define KKC_KEYSYMS_braille_dots_146 ((guint) 0x1002829)
#define KKC_KEYSYMS_braille_dots_246 ((guint) 0x100282a)
#define KKC_KEYSYMS_braille_dots_1246 ((guint) 0x100282b)
#define KKC_KEYSYMS_braille_dots_346 ((guint) 0x100282c)
#define KKC_KEYSYMS_braille_dots_1346 ((guint) 0x100282d)
#define KKC_KEYSYMS_braille_dots_2346 ((guint) 0x100282e)
#define KKC_KEYSYMS_braille_dots_12346 ((guint) 0x100282f)
#define KKC_KEYSYMS_braille_dots_56 ((guint) 0x1002830)
#define KKC_KEYSYMS_braille_dots_156 ((guint) 0x1002831)
#define KKC_KEYSYMS_braille_dots_256 ((guint) 0x1002832)
#define KKC_KEYSYMS_braille_dots_1256 ((guint) 0x1002833)
#define KKC_KEYSYMS_braille_dots_356 ((guint) 0x1002834)
#define KKC_KEYSYMS_braille_dots_1356 ((guint) 0x1002835)
#define KKC_KEYSYMS_braille_dots_2356 ((guint) 0x1002836)
#define KKC_KEYSYMS_braille_dots_12356 ((guint) 0x1002837)
#define KKC_KEYSYMS_braille_dots_456 ((guint) 0x1002838)
#define KKC_KEYSYMS_braille_dots_1456 ((guint) 0x1002839)
#define KKC_KEYSYMS_braille_dots_2456 ((guint) 0x100283a)
#define KKC_KEYSYMS_braille_dots_12456 ((guint) 0x100283b)
#define KKC_KEYSYMS_braille_dots_3456 ((guint) 0x100283c)
#define KKC_KEYSYMS_braille_dots_13456 ((guint) 0x100283d)
#define KKC_KEYSYMS_braille_dots_23456 ((guint) 0x100283e)
#define KKC_KEYSYMS_braille_dots_123456 ((guint) 0x100283f)
#define KKC_KEYSYMS_braille_dots_7 ((guint) 0x1002840)
#define KKC_KEYSYMS_braille_dots_17 ((guint) 0x1002841)
#define KKC_KEYSYMS_braille_dots_27 ((guint) 0x1002842)
#define KKC_KEYSYMS_braille_dots_127 ((guint) 0x1002843)
#define KKC_KEYSYMS_braille_dots_37 ((guint) 0x1002844)
#define KKC_KEYSYMS_braille_dots_137 ((guint) 0x1002845)
#define KKC_KEYSYMS_braille_dots_237 ((guint) 0x1002846)
#define KKC_KEYSYMS_braille_dots_1237 ((guint) 0x1002847)
#define KKC_KEYSYMS_braille_dots_47 ((guint) 0x1002848)
#define KKC_KEYSYMS_braille_dots_147 ((guint) 0x1002849)
#define KKC_KEYSYMS_braille_dots_247 ((guint) 0x100284a)
#define KKC_KEYSYMS_braille_dots_1247 ((guint) 0x100284b)
#define KKC_KEYSYMS_braille_dots_347 ((guint) 0x100284c)
#define KKC_KEYSYMS_braille_dots_1347 ((guint) 0x100284d)
#define KKC_KEYSYMS_braille_dots_2347 ((guint) 0x100284e)
#define KKC_KEYSYMS_braille_dots_12347 ((guint) 0x100284f)
#define KKC_KEYSYMS_braille_dots_57 ((guint) 0x1002850)
#define KKC_KEYSYMS_braille_dots_157 ((guint) 0x1002851)
#define KKC_KEYSYMS_braille_dots_257 ((guint) 0x1002852)
#define KKC_KEYSYMS_braille_dots_1257 ((guint) 0x1002853)
#define KKC_KEYSYMS_braille_dots_357 ((guint) 0x1002854)
#define KKC_KEYSYMS_braille_dots_1357 ((guint) 0x1002855)
#define KKC_KEYSYMS_braille_dots_2357 ((guint) 0x1002856)
#define KKC_KEYSYMS_braille_dots_12357 ((guint) 0x1002857)
#define KKC_KEYSYMS_braille_dots_457 ((guint) 0x1002858)
#define KKC_KEYSYMS_braille_dots_1457 ((guint) 0x1002859)
#define KKC_KEYSYMS_braille_dots_2457 ((guint) 0x100285a)
#define KKC_KEYSYMS_braille_dots_12457 ((guint) 0x100285b)
#define KKC_KEYSYMS_braille_dots_3457 ((guint) 0x100285c)
#define KKC_KEYSYMS_braille_dots_13457 ((guint) 0x100285d)
#define KKC_KEYSYMS_braille_dots_23457 ((guint) 0x100285e)
#define KKC_KEYSYMS_braille_dots_123457 ((guint) 0x100285f)
#define KKC_KEYSYMS_braille_dots_67 ((guint) 0x1002860)
#define KKC_KEYSYMS_braille_dots_167 ((guint) 0x1002861)
#define KKC_KEYSYMS_braille_dots_267 ((guint) 0x1002862)
#define KKC_KEYSYMS_braille_dots_1267 ((guint) 0x1002863)
#define KKC_KEYSYMS_braille_dots_367 ((guint) 0x1002864)
#define KKC_KEYSYMS_braille_dots_1367 ((guint) 0x1002865)
#define KKC_KEYSYMS_braille_dots_2367 ((guint) 0x1002866)
#define KKC_KEYSYMS_braille_dots_12367 ((guint) 0x1002867)
#define KKC_KEYSYMS_braille_dots_467 ((guint) 0x1002868)
#define KKC_KEYSYMS_braille_dots_1467 ((guint) 0x1002869)
#define KKC_KEYSYMS_braille_dots_2467 ((guint) 0x100286a)
#define KKC_KEYSYMS_braille_dots_12467 ((guint) 0x100286b)
#define KKC_KEYSYMS_braille_dots_3467 ((guint) 0x100286c)
#define KKC_KEYSYMS_braille_dots_13467 ((guint) 0x100286d)
#define KKC_KEYSYMS_braille_dots_23467 ((guint) 0x100286e)
#define KKC_KEYSYMS_braille_dots_123467 ((guint) 0x100286f)
#define KKC_KEYSYMS_braille_dots_567 ((guint) 0x1002870)
#define KKC_KEYSYMS_braille_dots_1567 ((guint) 0x1002871)
#define KKC_KEYSYMS_braille_dots_2567 ((guint) 0x1002872)
#define KKC_KEYSYMS_braille_dots_12567 ((guint) 0x1002873)
#define KKC_KEYSYMS_braille_dots_3567 ((guint) 0x1002874)
#define KKC_KEYSYMS_braille_dots_13567 ((guint) 0x1002875)
#define KKC_KEYSYMS_braille_dots_23567 ((guint) 0x1002876)
#define KKC_KEYSYMS_braille_dots_123567 ((guint) 0x1002877)
#define KKC_KEYSYMS_braille_dots_4567 ((guint) 0x1002878)
#define KKC_KEYSYMS_braille_dots_14567 ((guint) 0x1002879)
#define KKC_KEYSYMS_braille_dots_24567 ((guint) 0x100287a)
#define KKC_KEYSYMS_braille_dots_124567 ((guint) 0x100287b)
#define KKC_KEYSYMS_braille_dots_34567 ((guint) 0x100287c)
#define KKC_KEYSYMS_braille_dots_134567 ((guint) 0x100287d)
#define KKC_KEYSYMS_braille_dots_234567 ((guint) 0x100287e)
#define KKC_KEYSYMS_braille_dots_1234567 ((guint) 0x100287f)
#define KKC_KEYSYMS_braille_dots_8 ((guint) 0x1002880)
#define KKC_KEYSYMS_braille_dots_18 ((guint) 0x1002881)
#define KKC_KEYSYMS_braille_dots_28 ((guint) 0x1002882)
#define KKC_KEYSYMS_braille_dots_128 ((guint) 0x1002883)
#define KKC_KEYSYMS_braille_dots_38 ((guint) 0x1002884)
#define KKC_KEYSYMS_braille_dots_138 ((guint) 0x1002885)
#define KKC_KEYSYMS_braille_dots_238 ((guint) 0x1002886)
#define KKC_KEYSYMS_braille_dots_1238 ((guint) 0x1002887)
#define KKC_KEYSYMS_braille_dots_48 ((guint) 0x1002888)
#define KKC_KEYSYMS_braille_dots_148 ((guint) 0x1002889)
#define KKC_KEYSYMS_braille_dots_248 ((guint) 0x100288a)
#define KKC_KEYSYMS_braille_dots_1248 ((guint) 0x100288b)
#define KKC_KEYSYMS_braille_dots_348 ((guint) 0x100288c)
#define KKC_KEYSYMS_braille_dots_1348 ((guint) 0x100288d)
#define KKC_KEYSYMS_braille_dots_2348 ((guint) 0x100288e)
#define KKC_KEYSYMS_braille_dots_12348 ((guint) 0x100288f)
#define KKC_KEYSYMS_braille_dots_58 ((guint) 0x1002890)
#define KKC_KEYSYMS_braille_dots_158 ((guint) 0x1002891)
#define KKC_KEYSYMS_braille_dots_258 ((guint) 0x1002892)
#define KKC_KEYSYMS_braille_dots_1258 ((guint) 0x1002893)
#define KKC_KEYSYMS_braille_dots_358 ((guint) 0x1002894)
#define KKC_KEYSYMS_braille_dots_1358 ((guint) 0x1002895)
#define KKC_KEYSYMS_braille_dots_2358 ((guint) 0x1002896)
#define KKC_KEYSYMS_braille_dots_12358 ((guint) 0x1002897)
#define KKC_KEYSYMS_braille_dots_458 ((guint) 0x1002898)
#define KKC_KEYSYMS_braille_dots_1458 ((guint) 0x1002899)
#define KKC_KEYSYMS_braille_dots_2458 ((guint) 0x100289a)
#define KKC_KEYSYMS_braille_dots_12458 ((guint) 0x100289b)
#define KKC_KEYSYMS_braille_dots_3458 ((guint) 0x100289c)
#define KKC_KEYSYMS_braille_dots_13458 ((guint) 0x100289d)
#define KKC_KEYSYMS_braille_dots_23458 ((guint) 0x100289e)
#define KKC_KEYSYMS_braille_dots_123458 ((guint) 0x100289f)
#define KKC_KEYSYMS_braille_dots_68 ((guint) 0x10028a0)
#define KKC_KEYSYMS_braille_dots_168 ((guint) 0x10028a1)
#define KKC_KEYSYMS_braille_dots_268 ((guint) 0x10028a2)
#define KKC_KEYSYMS_braille_dots_1268 ((guint) 0x10028a3)
#define KKC_KEYSYMS_braille_dots_368 ((guint) 0x10028a4)
#define KKC_KEYSYMS_braille_dots_1368 ((guint) 0x10028a5)
#define KKC_KEYSYMS_braille_dots_2368 ((guint) 0x10028a6)
#define KKC_KEYSYMS_braille_dots_12368 ((guint) 0x10028a7)
#define KKC_KEYSYMS_braille_dots_468 ((guint) 0x10028a8)
#define KKC_KEYSYMS_braille_dots_1468 ((guint) 0x10028a9)
#define KKC_KEYSYMS_braille_dots_2468 ((guint) 0x10028aa)
#define KKC_KEYSYMS_braille_dots_12468 ((guint) 0x10028ab)
#define KKC_KEYSYMS_braille_dots_3468 ((guint) 0x10028ac)
#define KKC_KEYSYMS_braille_dots_13468 ((guint) 0x10028ad)
#define KKC_KEYSYMS_braille_dots_23468 ((guint) 0x10028ae)
#define KKC_KEYSYMS_braille_dots_123468 ((guint) 0x10028af)
#define KKC_KEYSYMS_braille_dots_568 ((guint) 0x10028b0)
#define KKC_KEYSYMS_braille_dots_1568 ((guint) 0x10028b1)
#define KKC_KEYSYMS_braille_dots_2568 ((guint) 0x10028b2)
#define KKC_KEYSYMS_braille_dots_12568 ((guint) 0x10028b3)
#define KKC_KEYSYMS_braille_dots_3568 ((guint) 0x10028b4)
#define KKC_KEYSYMS_braille_dots_13568 ((guint) 0x10028b5)
#define KKC_KEYSYMS_braille_dots_23568 ((guint) 0x10028b6)
#define KKC_KEYSYMS_braille_dots_123568 ((guint) 0x10028b7)
#define KKC_KEYSYMS_braille_dots_4568 ((guint) 0x10028b8)
#define KKC_KEYSYMS_braille_dots_14568 ((guint) 0x10028b9)
#define KKC_KEYSYMS_braille_dots_24568 ((guint) 0x10028ba)
#define KKC_KEYSYMS_braille_dots_124568 ((guint) 0x10028bb)
#define KKC_KEYSYMS_braille_dots_34568 ((guint) 0x10028bc)
#define KKC_KEYSYMS_braille_dots_134568 ((guint) 0x10028bd)
#define KKC_KEYSYMS_braille_dots_234568 ((guint) 0x10028be)
#define KKC_KEYSYMS_braille_dots_1234568 ((guint) 0x10028bf)
#define KKC_KEYSYMS_braille_dots_78 ((guint) 0x10028c0)
#define KKC_KEYSYMS_braille_dots_178 ((guint) 0x10028c1)
#define KKC_KEYSYMS_braille_dots_278 ((guint) 0x10028c2)
#define KKC_KEYSYMS_braille_dots_1278 ((guint) 0x10028c3)
#define KKC_KEYSYMS_braille_dots_378 ((guint) 0x10028c4)
#define KKC_KEYSYMS_braille_dots_1378 ((guint) 0x10028c5)
#define KKC_KEYSYMS_braille_dots_2378 ((guint) 0x10028c6)
#define KKC_KEYSYMS_braille_dots_12378 ((guint) 0x10028c7)
#define KKC_KEYSYMS_braille_dots_478 ((guint) 0x10028c8)
#define KKC_KEYSYMS_braille_dots_1478 ((guint) 0x10028c9)
#define KKC_KEYSYMS_braille_dots_2478 ((guint) 0x10028ca)
#define KKC_KEYSYMS_braille_dots_12478 ((guint) 0x10028cb)
#define KKC_KEYSYMS_braille_dots_3478 ((guint) 0x10028cc)
#define KKC_KEYSYMS_braille_dots_13478 ((guint) 0x10028cd)
#define KKC_KEYSYMS_braille_dots_23478 ((guint) 0x10028ce)
#define KKC_KEYSYMS_braille_dots_123478 ((guint) 0x10028cf)
#define KKC_KEYSYMS_braille_dots_578 ((guint) 0x10028d0)
#define KKC_KEYSYMS_braille_dots_1578 ((guint) 0x10028d1)
#define KKC_KEYSYMS_braille_dots_2578 ((guint) 0x10028d2)
#define KKC_KEYSYMS_braille_dots_12578 ((guint) 0x10028d3)
#define KKC_KEYSYMS_braille_dots_3578 ((guint) 0x10028d4)
#define KKC_KEYSYMS_braille_dots_13578 ((guint) 0x10028d5)
#define KKC_KEYSYMS_braille_dots_23578 ((guint) 0x10028d6)
#define KKC_KEYSYMS_braille_dots_123578 ((guint) 0x10028d7)
#define KKC_KEYSYMS_braille_dots_4578 ((guint) 0x10028d8)
#define KKC_KEYSYMS_braille_dots_14578 ((guint) 0x10028d9)
#define KKC_KEYSYMS_braille_dots_24578 ((guint) 0x10028da)
#define KKC_KEYSYMS_braille_dots_124578 ((guint) 0x10028db)
#define KKC_KEYSYMS_braille_dots_34578 ((guint) 0x10028dc)
#define KKC_KEYSYMS_braille_dots_134578 ((guint) 0x10028dd)
#define KKC_KEYSYMS_braille_dots_234578 ((guint) 0x10028de)
#define KKC_KEYSYMS_braille_dots_1234578 ((guint) 0x10028df)
#define KKC_KEYSYMS_braille_dots_678 ((guint) 0x10028e0)
#define KKC_KEYSYMS_braille_dots_1678 ((guint) 0x10028e1)
#define KKC_KEYSYMS_braille_dots_2678 ((guint) 0x10028e2)
#define KKC_KEYSYMS_braille_dots_12678 ((guint) 0x10028e3)
#define KKC_KEYSYMS_braille_dots_3678 ((guint) 0x10028e4)
#define KKC_KEYSYMS_braille_dots_13678 ((guint) 0x10028e5)
#define KKC_KEYSYMS_braille_dots_23678 ((guint) 0x10028e6)
#define KKC_KEYSYMS_braille_dots_123678 ((guint) 0x10028e7)
#define KKC_KEYSYMS_braille_dots_4678 ((guint) 0x10028e8)
#define KKC_KEYSYMS_braille_dots_14678 ((guint) 0x10028e9)
#define KKC_KEYSYMS_braille_dots_24678 ((guint) 0x10028ea)
#define KKC_KEYSYMS_braille_dots_124678 ((guint) 0x10028eb)
#define KKC_KEYSYMS_braille_dots_34678 ((guint) 0x10028ec)
#define KKC_KEYSYMS_braille_dots_134678 ((guint) 0x10028ed)
#define KKC_KEYSYMS_braille_dots_234678 ((guint) 0x10028ee)
#define KKC_KEYSYMS_braille_dots_1234678 ((guint) 0x10028ef)
#define KKC_KEYSYMS_braille_dots_5678 ((guint) 0x10028f0)
#define KKC_KEYSYMS_braille_dots_15678 ((guint) 0x10028f1)
#define KKC_KEYSYMS_braille_dots_25678 ((guint) 0x10028f2)
#define KKC_KEYSYMS_braille_dots_125678 ((guint) 0x10028f3)
#define KKC_KEYSYMS_braille_dots_35678 ((guint) 0x10028f4)
#define KKC_KEYSYMS_braille_dots_135678 ((guint) 0x10028f5)
#define KKC_KEYSYMS_braille_dots_235678 ((guint) 0x10028f6)
#define KKC_KEYSYMS_braille_dots_1235678 ((guint) 0x10028f7)
#define KKC_KEYSYMS_braille_dots_45678 ((guint) 0x10028f8)
#define KKC_KEYSYMS_braille_dots_145678 ((guint) 0x10028f9)
#define KKC_KEYSYMS_braille_dots_245678 ((guint) 0x10028fa)
#define KKC_KEYSYMS_braille_dots_1245678 ((guint) 0x10028fb)
#define KKC_KEYSYMS_braille_dots_345678 ((guint) 0x10028fc)
#define KKC_KEYSYMS_braille_dots_1345678 ((guint) 0x10028fd)
#define KKC_KEYSYMS_braille_dots_2345678 ((guint) 0x10028fe)
#define KKC_KEYSYMS_braille_dots_12345678 ((guint) 0x10028ff)
#define KKC_KEYSYMS_Sinh_ng ((guint) 0x1000d82)
#define KKC_KEYSYMS_Sinh_h2 ((guint) 0x1000d83)
#define KKC_KEYSYMS_Sinh_a ((guint) 0x1000d85)
#define KKC_KEYSYMS_Sinh_aa ((guint) 0x1000d86)
#define KKC_KEYSYMS_Sinh_ae ((guint) 0x1000d87)
#define KKC_KEYSYMS_Sinh_aee ((guint) 0x1000d88)
#define KKC_KEYSYMS_Sinh_i ((guint) 0x1000d89)
#define KKC_KEYSYMS_Sinh_ii ((guint) 0x1000d8a)
#define KKC_KEYSYMS_Sinh_u ((guint) 0x1000d8b)
#define KKC_KEYSYMS_Sinh_uu ((guint) 0x1000d8c)
#define KKC_KEYSYMS_Sinh_ri ((guint) 0x1000d8d)
#define KKC_KEYSYMS_Sinh_rii ((guint) 0x1000d8e)
#define KKC_KEYSYMS_Sinh_lu ((guint) 0x1000d8f)
#define KKC_KEYSYMS_Sinh_luu ((guint) 0x1000d90)
#define KKC_KEYSYMS_Sinh_e ((guint) 0x1000d91)
#define KKC_KEYSYMS_Sinh_ee ((guint) 0x1000d92)
#define KKC_KEYSYMS_Sinh_ai ((guint) 0x1000d93)
#define KKC_KEYSYMS_Sinh_o ((guint) 0x1000d94)
#define KKC_KEYSYMS_Sinh_oo ((guint) 0x1000d95)
#define KKC_KEYSYMS_Sinh_au ((guint) 0x1000d96)
#define KKC_KEYSYMS_Sinh_ka ((guint) 0x1000d9a)
#define KKC_KEYSYMS_Sinh_kha ((guint) 0x1000d9b)
#define KKC_KEYSYMS_Sinh_ga ((guint) 0x1000d9c)
#define KKC_KEYSYMS_Sinh_gha ((guint) 0x1000d9d)
#define KKC_KEYSYMS_Sinh_ng2 ((guint) 0x1000d9e)
#define KKC_KEYSYMS_Sinh_nga ((guint) 0x1000d9f)
#define KKC_KEYSYMS_Sinh_ca ((guint) 0x1000da0)
#define KKC_KEYSYMS_Sinh_cha ((guint) 0x1000da1)
#define KKC_KEYSYMS_Sinh_ja ((guint) 0x1000da2)
#define KKC_KEYSYMS_Sinh_jha ((guint) 0x1000da3)
#define KKC_KEYSYMS_Sinh_nya ((guint) 0x1000da4)
#define KKC_KEYSYMS_Sinh_jnya ((guint) 0x1000da5)
#define KKC_KEYSYMS_Sinh_nja ((guint) 0x1000da6)
#define KKC_KEYSYMS_Sinh_tta ((guint) 0x1000da7)
#define KKC_KEYSYMS_Sinh_ttha ((guint) 0x1000da8)
#define KKC_KEYSYMS_Sinh_dda ((guint) 0x1000da9)
#define KKC_KEYSYMS_Sinh_ddha ((guint) 0x1000daa)
#define KKC_KEYSYMS_Sinh_nna ((guint) 0x1000dab)
#define KKC_KEYSYMS_Sinh_ndda ((guint) 0x1000dac)
#define KKC_KEYSYMS_Sinh_tha ((guint) 0x1000dad)
#define KKC_KEYSYMS_Sinh_thha ((guint) 0x1000dae)
#define KKC_KEYSYMS_Sinh_dha ((guint) 0x1000daf)
#define KKC_KEYSYMS_Sinh_dhha ((guint) 0x1000db0)
#define KKC_KEYSYMS_Sinh_na ((guint) 0x1000db1)
#define KKC_KEYSYMS_Sinh_ndha ((guint) 0x1000db3)
#define KKC_KEYSYMS_Sinh_pa ((guint) 0x1000db4)
#define KKC_KEYSYMS_Sinh_pha ((guint) 0x1000db5)
#define KKC_KEYSYMS_Sinh_ba ((guint) 0x1000db6)
#define KKC_KEYSYMS_Sinh_bha ((guint) 0x1000db7)
#define KKC_KEYSYMS_Sinh_ma ((guint) 0x1000db8)
#define KKC_KEYSYMS_Sinh_mba ((guint) 0x1000db9)
#define KKC_KEYSYMS_Sinh_ya ((guint) 0x1000dba)
#define KKC_KEYSYMS_Sinh_ra ((guint) 0x1000dbb)
#define KKC_KEYSYMS_Sinh_la ((guint) 0x1000dbd)
#define KKC_KEYSYMS_Sinh_va ((guint) 0x1000dc0)
#define KKC_KEYSYMS_Sinh_sha ((guint) 0x1000dc1)
#define KKC_KEYSYMS_Sinh_ssha ((guint) 0x1000dc2)
#define KKC_KEYSYMS_Sinh_sa ((guint) 0x1000dc3)
#define KKC_KEYSYMS_Sinh_ha ((guint) 0x1000dc4)
#define KKC_KEYSYMS_Sinh_lla ((guint) 0x1000dc5)
#define KKC_KEYSYMS_Sinh_fa ((guint) 0x1000dc6)
#define KKC_KEYSYMS_Sinh_al ((guint) 0x1000dca)
#define KKC_KEYSYMS_Sinh_aa2 ((guint) 0x1000dcf)
#define KKC_KEYSYMS_Sinh_ae2 ((guint) 0x1000dd0)
#define KKC_KEYSYMS_Sinh_aee2 ((guint) 0x1000dd1)
#define KKC_KEYSYMS_Sinh_i2 ((guint) 0x1000dd2)
#define KKC_KEYSYMS_Sinh_ii2 ((guint) 0x1000dd3)
#define KKC_KEYSYMS_Sinh_u2 ((guint) 0x1000dd4)
#define KKC_KEYSYMS_Sinh_uu2 ((guint) 0x1000dd6)
#define KKC_KEYSYMS_Sinh_ru2 ((guint) 0x1000dd8)
#define KKC_KEYSYMS_Sinh_e2 ((guint) 0x1000dd9)
#define KKC_KEYSYMS_Sinh_ee2 ((guint) 0x1000dda)
#define KKC_KEYSYMS_Sinh_ai2 ((guint) 0x1000ddb)
#define KKC_KEYSYMS_Sinh_o2 ((guint) 0x1000ddc)
#define KKC_KEYSYMS_Sinh_oo2 ((guint) 0x1000ddd)
#define KKC_KEYSYMS_Sinh_au2 ((guint) 0x1000dde)
#define KKC_KEYSYMS_Sinh_lu2 ((guint) 0x1000ddf)
#define KKC_KEYSYMS_Sinh_ruu2 ((guint) 0x1000df2)
#define KKC_KEYSYMS_Sinh_luu2 ((guint) 0x1000df3)
#define KKC_KEYSYMS_Sinh_kunddaliya ((guint) 0x1000df4)
GType kkc_map_file_get_type (void) G_GNUC_CONST;
gchar* kkc_map_file_uniquify (KkcMapFile* self, const gchar* key);
GType kkc_rule_metadata_get_type (void) G_GNUC_CONST;
GQuark kkc_rule_parse_error_quark (void);
KkcMapFile* kkc_map_file_construct (GType object_type, KkcRuleMetadata* metadata, const gchar* type, const gchar* name, GError** error);
GeeMap* kkc_map_file_get (KkcMapFile* self, const gchar* name);
GeeMap* kkc_map_file_get_parent (KkcMapFile* self, const gchar* name);
GType kkc_nicola_key_event_filter_get_type (void) G_GNUC_CONST;
KkcNicolaKeyEventFilter* kkc_nicola_key_event_filter_new (void);
KkcNicolaKeyEventFilter* kkc_nicola_key_event_filter_construct (GType object_type);
GType kkc_numeric_conversion_type_get_type (void) G_GNUC_CONST;
GType kkc_rom_kana_utils_get_type (void) G_GNUC_CONST;
gchar* kkc_rom_kana_utils_get_okurigana_prefix (const gchar* okurigana);
gunichar kkc_rom_kana_utils_get_wide_latin_char (gunichar uc);
gchar* kkc_rom_kana_utils_get_wide_latin (const gchar* latin);
gchar* kkc_rom_kana_utils_get_latin (const gchar* wide_latin);
gchar* kkc_rom_kana_utils_normalize (const gchar* input);
gchar* kkc_rom_kana_utils_get_katakana (const gchar* kana);
gchar* kkc_rom_kana_utils_get_hiragana (const gchar* kana);
gchar* kkc_rom_kana_utils_get_hankaku_katakana (const gchar* kana);
GType kkc_kana_mode_get_type (void) G_GNUC_CONST;
gchar* kkc_rom_kana_utils_convert_by_kana_mode (const gchar* str, KkcKanaMode mode);
gchar* kkc_rom_kana_utils_get_numeric (gint numeric, KkcNumericConversionType type);
gboolean kkc_rom_kana_utils_is_katakana (const gchar* str);
gboolean kkc_rom_kana_utils_is_hiragana (const gchar* str);
KkcRomKanaUtils* kkc_rom_kana_utils_construct (GType object_type);
GType kkc_rom_kana_entry_get_type (void) G_GNUC_CONST;
KkcRomKanaEntry* kkc_rom_kana_entry_dup (const KkcRomKanaEntry* self);
void kkc_rom_kana_entry_free (KkcRomKanaEntry* self);
void kkc_rom_kana_entry_copy (const KkcRomKanaEntry* self, KkcRomKanaEntry* dest);
void kkc_rom_kana_entry_destroy (KkcRomKanaEntry* self);
gchar* kkc_rom_kana_entry_get_kana (KkcRomKanaEntry *self, KkcKanaMode mode, gboolean partial);
GType kkc_rom_kana_node_get_type (void) G_GNUC_CONST;
KkcRomKanaNode* kkc_rom_kana_node_new (KkcRomKanaEntry* entry);
KkcRomKanaNode* kkc_rom_kana_node_construct (GType object_type, KkcRomKanaEntry* entry);
void kkc_rom_kana_node_insert (KkcRomKanaNode* self, const gchar* key, KkcRomKanaEntry* entry);
GType kkc_punctuation_style_get_type (void) G_GNUC_CONST;
GType kkc_rom_kana_character_get_type (void) G_GNUC_CONST;
KkcRomKanaCharacter* kkc_rom_kana_character_dup (const KkcRomKanaCharacter* self);
void kkc_rom_kana_character_free (KkcRomKanaCharacter* self);
void kkc_rom_kana_character_copy (const KkcRomKanaCharacter* self, KkcRomKanaCharacter* dest);
void kkc_rom_kana_character_destroy (KkcRomKanaCharacter* self);
GType kkc_rom_kana_character_list_get_type (void) G_GNUC_CONST;
void kkc_rom_kana_character_list_add (KkcRomKanaCharacterList* self, KkcRomKanaCharacter* character);
void kkc_rom_kana_character_list_add_all (KkcRomKanaCharacterList* self, KkcRomKanaCharacterList* other);
void kkc_rom_kana_character_list_insert (KkcRomKanaCharacterList* self, gint index, KkcRomKanaCharacter* character);
void kkc_rom_kana_character_list_insert_all (KkcRomKanaCharacterList* self, gint index, KkcRomKanaCharacterList* other);
void kkc_rom_kana_character_list_get (KkcRomKanaCharacterList* self, gint index, KkcRomKanaCharacter* result);
void kkc_rom_kana_character_list_clear (KkcRomKanaCharacterList* self);
KkcRomKanaCharacterList* kkc_rom_kana_character_list_slice (KkcRomKanaCharacterList* self, gint start_char_pos, gint stop_char_pos);
void kkc_rom_kana_character_list_remove_at (KkcRomKanaCharacterList* self, gint index);
gchar* kkc_rom_kana_character_list_get_output (KkcRomKanaCharacterList* self);
gchar* kkc_rom_kana_character_list_get_input (KkcRomKanaCharacterList* self);
KkcRomKanaCharacterList* kkc_rom_kana_character_list_new (void);
KkcRomKanaCharacterList* kkc_rom_kana_character_list_construct (GType object_type);
gint kkc_rom_kana_character_list_get_size (KkcRomKanaCharacterList* self);
GType kkc_rom_kana_converter_get_type (void) G_GNUC_CONST;
gchar* kkc_rom_kana_converter_get_produced_output (KkcRomKanaConverter* self);
KkcRomKanaConverter* kkc_rom_kana_converter_new (void);
KkcRomKanaConverter* kkc_rom_kana_converter_construct (GType object_type);
gboolean kkc_rom_kana_converter_is_valid (KkcRomKanaConverter* self, gunichar uc);
gboolean kkc_rom_kana_converter_flush_partial (KkcRomKanaConverter* self);
void kkc_rom_kana_converter_append_text (KkcRomKanaConverter* self, const gchar* text);
gboolean kkc_rom_kana_converter_append (KkcRomKanaConverter* self, gunichar uc);
gboolean kkc_rom_kana_converter_can_consume (KkcRomKanaConverter* self, gunichar uc, gboolean no_carryover);
void kkc_rom_kana_converter_reset (KkcRomKanaConverter* self);
gboolean kkc_rom_kana_converter_delete (KkcRomKanaConverter* self);
GType kkc_rom_kana_map_file_get_type (void) G_GNUC_CONST;
KkcRomKanaMapFile* kkc_rom_kana_converter_get_rule (KkcRomKanaConverter* self);
void kkc_rom_kana_converter_set_rule (KkcRomKanaConverter* self, KkcRomKanaMapFile* value);
KkcKanaMode kkc_rom_kana_converter_get_kana_mode (KkcRomKanaConverter* self);
void kkc_rom_kana_converter_set_kana_mode (KkcRomKanaConverter* self, KkcKanaMode value);
KkcPunctuationStyle kkc_rom_kana_converter_get_punctuation_style (KkcRomKanaConverter* self);
void kkc_rom_kana_converter_set_punctuation_style (KkcRomKanaConverter* self, KkcPunctuationStyle value);
gboolean kkc_rom_kana_converter_get_auto_correct (KkcRomKanaConverter* self);
void kkc_rom_kana_converter_set_auto_correct (KkcRomKanaConverter* self, gboolean value);
const gchar* kkc_rom_kana_converter_get_pending_output (KkcRomKanaConverter* self);
const gchar* kkc_rom_kana_converter_get_pending_input (KkcRomKanaConverter* self);
KkcRomKanaCharacterList* kkc_rom_kana_converter_get_produced (KkcRomKanaConverter* self);
GType kkc_keymap_map_file_get_type (void) G_GNUC_CONST;
KkcKeymapMapFile* kkc_keymap_map_file_new (KkcRuleMetadata* metadata, const gchar* mode, GError** error);
KkcKeymapMapFile* kkc_keymap_map_file_construct (GType object_type, KkcRuleMetadata* metadata, const gchar* mode, GError** error);
KkcRomKanaMapFile* kkc_rom_kana_map_file_new (KkcRuleMetadata* metadata, GError** error);
KkcRomKanaMapFile* kkc_rom_kana_map_file_construct (GType object_type, KkcRuleMetadata* metadata, GError** error);
KkcRuleMetadata* kkc_rule_metadata_new (const gchar* name, const gchar* filename, GError** error);
KkcRuleMetadata* kkc_rule_metadata_construct (GType object_type, const gchar* name, const gchar* filename, GError** error);
KkcKeyEventFilter* kkc_rule_metadata_create_key_event_filter (KkcRuleMetadata* self);
gchar* kkc_rule_metadata_locate_map_file (KkcRuleMetadata* self, const gchar* type, const gchar* name);
KkcRuleMetadata* kkc_rule_metadata_find (const gchar* name);
const gchar* kkc_rule_metadata_get_filter (KkcRuleMetadata* self);
void kkc_rule_metadata_set_filter (KkcRuleMetadata* self, const gchar* value);
gint kkc_rule_metadata_get_priority (KkcRuleMetadata* self);
void kkc_rule_metadata_set_priority (KkcRuleMetadata* self, gint value);
GType kkc_rule_get_type (void) G_GNUC_CONST;
GType kkc_input_mode_get_type (void) G_GNUC_CONST;
KkcKeymap* kkc_rule_get_keymap (KkcRule* self, KkcInputMode mode);
KkcRule* kkc_rule_new (KkcRuleMetadata* metadata, GError** error);
KkcRule* kkc_rule_construct (GType object_type, KkcRuleMetadata* metadata, GError** error);
KkcRuleMetadata** kkc_rule_list (int* result_length1);
KkcRuleMetadata* kkc_rule_get_metadata (KkcRule* self);
void kkc_rule_set_metadata (KkcRule* self, KkcRuleMetadata* value);
KkcKeyEventFilter* kkc_rule_get_filter (KkcRule* self);
void kkc_rule_set_filter (KkcRule* self, KkcKeyEventFilter* value);
GType kkc_user_rule_get_type (void) G_GNUC_CONST;
KkcUserRule* kkc_user_rule_new (KkcRuleMetadata* parent, const gchar* base_dir, const gchar* prefix, GError** error);
KkcUserRule* kkc_user_rule_construct (GType object_type, KkcRuleMetadata* parent, const gchar* base_dir, const gchar* prefix, GError** error);
void kkc_user_rule_write (KkcUserRule* self, KkcInputMode input_mode, GError** error);
GType kkc_context_get_type (void) G_GNUC_CONST;
KkcContext* kkc_context_new (KkcLanguageModel* model);
KkcContext* kkc_context_construct (GType object_type, KkcLanguageModel* model);
void kkc_context_set_selection_text (KkcContext* self, const gchar* text);
gboolean kkc_context_process_key_events (KkcContext* self, const gchar* keyseq, GError** error);
gboolean kkc_context_process_key_event (KkcContext* self, KkcKeyEvent* key);
void kkc_context_reset (KkcContext* self);
gboolean kkc_context_has_output (KkcContext* self);
gchar* kkc_context_peek_output (KkcContext* self);
gchar* kkc_context_poll_output (KkcContext* self);
void kkc_context_clear_output (KkcContext* self);
GType kkc_dictionary_list_get_type (void) G_GNUC_CONST;
KkcDictionaryList* kkc_context_get_dictionaries (KkcContext* self);
void kkc_context_set_dictionaries (KkcContext* self, KkcDictionaryList* value);
KkcCandidateList* kkc_context_get_candidates (KkcContext* self);
KkcSegmentList* kkc_context_get_segments (KkcContext* self);
gchar* kkc_context_get_input (KkcContext* self);
gint kkc_context_get_input_cursor_pos (KkcContext* self);
guint kkc_context_get_input_cursor_width (KkcContext* self);
KkcInputMode kkc_context_get_input_mode (KkcContext* self);
void kkc_context_set_input_mode (KkcContext* self, KkcInputMode value);
KkcPunctuationStyle kkc_context_get_punctuation_style (KkcContext* self);
void kkc_context_set_punctuation_style (KkcContext* self, KkcPunctuationStyle value);
gboolean kkc_context_get_auto_correct (KkcContext* self);
void kkc_context_set_auto_correct (KkcContext* self, gboolean value);
KkcRule* kkc_context_get_typing_rule (KkcContext* self);
void kkc_context_set_typing_rule (KkcContext* self, KkcRule* value);
KkcKeyEventFilter* kkc_context_get_key_event_filter (KkcContext* self);
#define KKC_MIN_UNIGRAM_COST (-5.0)
#define KKC_DECODER_MAX_DISTANCE 2.0
#define KKC_DECODER_MIN_PATH_COST (-3.0)
#define KKC_DECODER_NBEST 20
GType kkc_state_get_type (void) G_GNUC_CONST;
void kkc_state_finish_input_editing (KkcState* self);
void kkc_state_convert_segment_by_kana_mode (KkcState* self, KkcKanaMode mode);
gchar* kkc_state_convert_rom_kana_characters_by_kana_mode (KkcState* self, KkcRomKanaCharacterList* characters, KkcKanaMode mode);
gchar* kkc_state_get_input (KkcState* self);
gchar* kkc_state_lookup_key (KkcState* self, KkcKeyEvent* key);
KkcState* kkc_state_new (KkcLanguageModel* model, KkcDictionaryList* dictionaries);
KkcState* kkc_state_construct (GType object_type, KkcLanguageModel* model, KkcDictionaryList* dictionaries);
void kkc_state_select_sentence (KkcState* self);
void kkc_state_reset (KkcState* self);
gchar* kkc_state_lookup_single (KkcState* self, const gchar* input);
void kkc_state_lookup (KkcState* self, KkcSegment* segment);
void kkc_state_convert_sentence (KkcState* self, const gchar* input, gint* constraint, int constraint_length1);
void kkc_state_resize_segment (KkcState* self, gint amount);
void kkc_state_purge_candidate (KkcState* self, KkcCandidate* candidate);
void kkc_state_completion_start (KkcState* self, const gchar* input);
KkcInputMode kkc_state_get_input_mode (KkcState* self);
void kkc_state_set_input_mode (KkcState* self, KkcInputMode value);
gint kkc_state_get_input_cursor_pos (KkcState* self);
guint kkc_state_get_input_cursor_width (KkcState* self);
KkcPunctuationStyle kkc_state_get_punctuation_style (KkcState* self);
void kkc_state_set_punctuation_style (KkcState* self, KkcPunctuationStyle value);
gboolean kkc_state_get_auto_correct (KkcState* self);
void kkc_state_set_auto_correct (KkcState* self, gboolean value);
KkcRule* kkc_state_get_typing_rule (KkcState* self);
void kkc_state_set_typing_rule (KkcState* self, KkcRule* value);
GType kkc_command_handler_get_type (void) G_GNUC_CONST;
gboolean kkc_command_handler_call (KkcCommandHandler* self, const gchar* command, KkcState* state, KkcKeyEvent* key);
GType kkc_callback_command_handler_get_type (void) G_GNUC_CONST;
KkcCallbackCommandHandler* kkc_callback_command_handler_new (KkcCommandCallback cb, void* cb_target);
KkcCallbackCommandHandler* kkc_callback_command_handler_construct (GType object_type, KkcCommandCallback cb, void* cb_target);
GType kkc_state_handler_get_type (void) G_GNUC_CONST;
void kkc_state_handler_register_command_handler (KkcStateHandler* self, const gchar* command, KkcCommandHandler* handler);
void kkc_state_handler_register_command_callback (KkcStateHandler* self, const gchar* command, KkcCommandCallback cb, void* cb_target);
gboolean kkc_state_handler_dispatch_command (KkcStateHandler* self, KkcState* state, KkcKeyEvent* key);
gboolean kkc_state_handler_process_key_event (KkcStateHandler* self, KkcState* state, KkcKeyEvent* key);
KkcStateHandler* kkc_state_handler_construct (GType object_type);
GType kkc_initial_state_handler_get_type (void) G_GNUC_CONST;
KkcInitialStateHandler* kkc_initial_state_handler_new (void);
KkcInitialStateHandler* kkc_initial_state_handler_construct (GType object_type);
GType kkc_convert_sentence_state_handler_get_type (void) G_GNUC_CONST;
KkcConvertSentenceStateHandler* kkc_convert_sentence_state_handler_new (void);
KkcConvertSentenceStateHandler* kkc_convert_sentence_state_handler_construct (GType object_type);
GType kkc_convert_segment_state_handler_get_type (void) G_GNUC_CONST;
KkcConvertSegmentStateHandler* kkc_convert_segment_state_handler_new (void);
KkcConvertSegmentStateHandler* kkc_convert_segment_state_handler_construct (GType object_type);
GType kkc_dictionary_utils_get_type (void) G_GNUC_CONST;
KkcCandidate** kkc_dictionary_utils_split_candidates (const gchar* midasi, gboolean okuri, const gchar* line, int* result_length1);
gchar* kkc_dictionary_utils_join_candidates (KkcCandidate** candidates, int candidates_length1);
gchar* kkc_dictionary_utils_escape (const gchar* input);
gchar* kkc_dictionary_utils_unescape (const gchar* input);
KkcDictionaryUtils* kkc_dictionary_utils_construct (GType object_type);
GType kkc_dictionary_get_type (void) G_GNUC_CONST;
void kkc_dictionary_reload (KkcDictionary* self, GError** error);
void kkc_dictionary_save (KkcDictionary* self, GError** error);
GQuark kkc_dictionary_error_quark (void);
GType kkc_segment_dictionary_get_type (void) G_GNUC_CONST;
gboolean kkc_segment_dictionary_lookup_candidates (KkcSegmentDictionary* self, const gchar* midasi, gboolean okuri, KkcCandidate*** candidates, int* candidates_length1);
gchar** kkc_segment_dictionary_complete (KkcSegmentDictionary* self, const gchar* midasi, int* result_length1);
gboolean kkc_segment_dictionary_select_candidate (KkcSegmentDictionary* self, KkcCandidate* candidate);
gboolean kkc_segment_dictionary_purge_candidate (KkcSegmentDictionary* self, KkcCandidate* candidate);
GType kkc_empty_segment_dictionary_get_type (void) G_GNUC_CONST;
KkcEmptySegmentDictionary* kkc_empty_segment_dictionary_new (void);
KkcEmptySegmentDictionary* kkc_empty_segment_dictionary_construct (GType object_type);
GType kkc_system_segment_dictionary_get_type (void) G_GNUC_CONST;
KkcSystemSegmentDictionary* kkc_system_segment_dictionary_new (const gchar* path, const gchar* encoding, GError** error);
KkcSystemSegmentDictionary* kkc_system_segment_dictionary_construct (GType object_type, const gchar* path, const gchar* encoding, GError** error);
GType kkc_user_segment_dictionary_get_type (void) G_GNUC_CONST;
KkcUserSegmentDictionary* kkc_user_segment_dictionary_new (const gchar* path, GError** error);
KkcUserSegmentDictionary* kkc_user_segment_dictionary_construct (GType object_type, const gchar* path, GError** error);
GType kkc_sentence_dictionary_get_type (void) G_GNUC_CONST;
gboolean kkc_sentence_dictionary_lookup_constraint (KkcSentenceDictionary* self, const gchar* input, gint** constraint, int* constraint_length1);
gboolean kkc_sentence_dictionary_lookup_phrase (KkcSentenceDictionary* self, gchar** input, int input_length1, gchar*** phrase, int* phrase_length1);
gboolean kkc_sentence_dictionary_select_segments (KkcSentenceDictionary* self, KkcSegment** input, int input_length1);
GType kkc_user_sentence_dictionary_get_type (void) G_GNUC_CONST;
KkcUserSentenceDictionary* kkc_user_sentence_dictionary_new (const gchar* path, GError** error);
KkcUserSentenceDictionary* kkc_user_sentence_dictionary_construct (GType object_type, const gchar* path, GError** error);
GType kkc_user_dictionary_get_type (void) G_GNUC_CONST;
KkcUserDictionary* kkc_user_dictionary_new (const gchar* basedir, GError** error);
KkcUserDictionary* kkc_user_dictionary_construct (GType object_type, const gchar* basedir, GError** error);
GType kkc_dictionary_callback_return_get_type (void) G_GNUC_CONST;
void kkc_dictionary_list_add (KkcDictionaryList* self, KkcDictionary* dictionary);
void kkc_dictionary_list_remove (KkcDictionaryList* self, KkcDictionary* dictionary);
void kkc_dictionary_list_clear (KkcDictionaryList* self);
void kkc_dictionary_list_call (KkcDictionaryList* self, GType* type, KkcDictionaryListDictionaryCallback callback, void* callback_target);
void kkc_dictionary_list_save (KkcDictionaryList* self);
KkcDictionaryList* kkc_dictionary_list_new (void);
KkcDictionaryList* kkc_dictionary_list_construct (GType object_type);
gint kkc_dictionary_list_get_size (KkcDictionaryList* self);
GType kkc_encoding_converter_get_type (void) G_GNUC_CONST;
gchar* kkc_encoding_converter_extract_coding_system (const gchar* line);
KkcEncodingConverter* kkc_encoding_converter_new (const gchar* encoding, GError** error);
KkcEncodingConverter* kkc_encoding_converter_construct (GType object_type, const gchar* encoding, GError** error);
KkcEncodingConverter* kkc_encoding_converter_new_from_coding_system (const gchar* coding, GError** error);
KkcEncodingConverter* kkc_encoding_converter_construct_from_coding_system (GType object_type, const gchar* coding, GError** error);
gchar* kkc_encoding_converter_encode (KkcEncodingConverter* self, const gchar* internal_str, GError** error);
gchar* kkc_encoding_converter_decode (KkcEncodingConverter* self, const gchar* external_str, GError** error);
const gchar* kkc_encoding_converter_get_encoding (KkcEncodingConverter* self);
void kkc_encoding_converter_set_encoding (KkcEncodingConverter* self, const gchar* value);
GType kkc_template_get_type (void) G_GNUC_CONST;
gchar* kkc_template_expand (KkcTemplate* self, const gchar* text);
const gchar* kkc_template_get_source (KkcTemplate* self);
void kkc_template_set_source (KkcTemplate* self, const gchar* value);
gboolean kkc_template_get_okuri (KkcTemplate* self);
void kkc_template_set_okuri (KkcTemplate* self, gboolean value);
GType kkc_simple_template_get_type (void) G_GNUC_CONST;
KkcSimpleTemplate* kkc_simple_template_new (const gchar* source);
KkcSimpleTemplate* kkc_simple_template_construct (GType object_type, const gchar* source);
GType kkc_okurigana_template_get_type (void) G_GNUC_CONST;
KkcOkuriganaTemplate* kkc_okurigana_template_new (const gchar* source);
KkcOkuriganaTemplate* kkc_okurigana_template_construct (GType object_type, const gchar* source);
GType kkc_numeric_template_get_type (void) G_GNUC_CONST;
KkcNumericTemplate* kkc_numeric_template_new (const gchar* source);
KkcNumericTemplate* kkc_numeric_template_construct (GType object_type, const gchar* source);
GType kkc_expression_node_type_get_type (void) G_GNUC_CONST;
GType kkc_expression_node_get_type (void) G_GNUC_CONST;
KkcExpressionNode* kkc_expression_node_dup (const KkcExpressionNode* self);
void kkc_expression_node_free (KkcExpressionNode* self);
void kkc_expression_node_copy (const KkcExpressionNode* self, KkcExpressionNode* dest);
void kkc_expression_node_destroy (KkcExpressionNode* self);
void kkc_expression_node_init (KkcExpressionNode *self, KkcExpressionNodeType type);
GType kkc_expression_reader_get_type (void) G_GNUC_CONST;
void kkc_expression_reader_read_symbol (KkcExpressionReader* self, const gchar* expr, gint* index, KkcExpressionNode* result);
KkcExpressionNode* kkc_expression_reader_read_string (KkcExpressionReader* self, const gchar* expr, gint* index);
KkcExpressionNode* kkc_expression_reader_read (KkcExpressionReader* self, const gchar* expr, gint* index);
KkcExpressionReader* kkc_expression_reader_new (void);
KkcExpressionReader* kkc_expression_reader_construct (GType object_type);
GType kkc_expression_evaluator_get_type (void) G_GNUC_CONST;
gchar* kkc_expression_evaluator_eval (KkcExpressionEvaluator* self, KkcExpressionNode* node);
KkcExpressionEvaluator* kkc_expression_evaluator_new (void);
KkcExpressionEvaluator* kkc_expression_evaluator_construct (GType object_type);
GType kkc_expression_get_type (void) G_GNUC_CONST;
gchar* kkc_expression_eval (const gchar* text);
KkcExpression* kkc_expression_construct (GType object_type);
gchar** kkc_utils_build_data_path (const gchar* subdir, int* result_length1);
gchar** kkc_utils_split_utf8 (const gchar* str, int* result_length1);
gint kkc_utils_hex_char_to_int (gchar hex);
gchar* kkc_utils_parse_hex (const gchar* hex);
GType kkc_prefix_entry_get_type (void) G_GNUC_CONST;
KkcPrefixEntry* kkc_prefix_entry_dup (const KkcPrefixEntry* self);
void kkc_prefix_entry_free (KkcPrefixEntry* self);
void kkc_prefix_entry_copy (const KkcPrefixEntry* self, KkcPrefixEntry* dest);
void kkc_prefix_entry_destroy (KkcPrefixEntry* self);
void kkc_prefix_entry_init (KkcPrefixEntry *self, gint offset, gchar** sequence, int sequence_length1);
GeeList* kkc_sequence_utils_enumerate_prefixes (gchar** sequence, int sequence_length1, gint min, gint max);
GType kkc_key_event_utils_get_type (void) G_GNUC_CONST;
gchar* kkc_key_event_utils_keyval_name (guint keyval);
guint kkc_key_event_utils_keyval_from_name (const gchar* name);
gunichar kkc_key_event_utils_keyval_unicode (guint keyval);
KkcKeyEventUtils* kkc_key_event_utils_construct (GType object_type);
GType kkc_index_file_get_type (void) G_GNUC_CONST;
gchar* kkc_index_file_get_contents (KkcIndexFile* self);
gsize kkc_index_file_get_length (KkcIndexFile* self);
GType kkc_mapped_index_file_get_type (void) G_GNUC_CONST;
KkcMappedIndexFile* kkc_mapped_index_file_new (const gchar* filename, GError** error);
KkcMappedIndexFile* kkc_mapped_index_file_construct (GType object_type, const gchar* filename, GError** error);
GType kkc_loaded_index_file_get_type (void) G_GNUC_CONST;
KkcLoadedIndexFile* kkc_loaded_index_file_new (const gchar* filename, GError** error);
KkcLoadedIndexFile* kkc_loaded_index_file_construct (GType object_type, const gchar* filename, GError** error);
void kkc_init (void);
extern gboolean kkc_use_mapped_index_file;

extern const KkcKeynameEntry KKC_keynames[2085];
extern const gchar* KKC_PUNCTUATION_RULE[4];

G_END_DECLS

#endif
